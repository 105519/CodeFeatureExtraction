{'path': 'data/HenryHu/pybbs/Config.py', 'tokens': ['from', 'ConfigParser', 'import', '*', 'from', 'StringIO', 'import', '*', 'from', 'Log', 'import', 'Log', 'import', 'datetime', 'class', 'Config', ':', '5INDENT', '@', 'staticmethod', 'def', 'LoadConfig', '(', ')', ':', '5INDENT', 'Config', '.', 'parser', '=', 'ConfigParser', '(', ')', 'try', ':', '5INDENT', 'sconff', '=', 'open', '(', 'CONFIG_FILE', ',', '"r"', ')', '6DEDENT', 'except', ':', '5INDENT', 'Log', '.', 'warn', '(', '"cannot open config file"', ')', 'return', '6DEDENT', 'sconf', '=', 'StringIO', '(', ')', 'sconf', '.', 'write', '(', '"[sysconf]\\n"', ')', 'sconf', '.', 'write', '(', 'sconff', '.', 'read', '(', ')', ')', 'sconf', '.', 'seek', '(', '0', ')', 'Config', '.', 'parser', '.', 'readfp', '(', 'sconf', ')', 'sconff', '.', 'close', '(', ')', 'sconf', '.', 'close', '(', ')', 'return', '6DEDENT', '@', 'staticmethod', 'def', 'GetBoardsFile', '(', ')', ':', '5INDENT', 'return', 'BOARDS_FILE', '6DEDENT', '@', 'staticmethod', 'def', 'GetInt', '(', 'name', ',', 'defval', ')', ':', '5INDENT', 'if', '(', 'Config', '.', 'parser', '.', 'has_option', '(', "'sysconf'", ',', 'name', ')', ')', ':', '5INDENT', 'return', 'Config', '.', 'parser', '.', 'getint', '(', "'sysconf'", ',', 'name', ')', '6DEDENT', 'else', ':', '5INDENT', 'return', 'defval', '6DEDENT', '6DEDENT', '@', 'staticmethod', 'def', 'GetString', '(', 'name', ',', 'defval', ')', ':', '5INDENT', 'if', '(', 'Config', '.', 'parser', '.', 'has_option', '(', "'sysconf'", ',', 'name', ')', ')', ':', '5INDENT', 'val', '=', 'Config', '.', 'parser', '.', 'get', '(', "'sysconf'", ',', 'name', ')', 'if', '(', 'val', '[', '0', ']', '==', '\'"\'', 'and', 'val', '.', 'endswith', '(', '\'"\'', ')', ')', ':', '5INDENT', 'val', '=', 'val', '[', '1', ':', '-', '1', ']', '6DEDENT', 'return', 'val', '.', 'decode', '(', "'gbk'", ')', '6DEDENT', 'else', ':', '5INDENT', 'return', 'defval', '6DEDENT', '6DEDENT', '6DEDENT', 'BBS_ROOT', '=', "'/home/bbs/'", 'BBS_XMPP_CERT_FILE', '=', 'BBS_ROOT', '+', '"xmpp.crt"', 'BBS_XMPP_KEY_FILE', '=', 'BBS_ROOT', '+', '"xmpp.key"', 'BOARDS_FILE', '=', 'BBS_ROOT', '+', "'.BOARDS'", 'STRLEN', '=', '80', 'ARTICLE_TITLE_LEN', '=', '60', 'BM_LEN', '=', '60', 'MAXBOARD', '=', '400', 'CONFIG_FILE', '=', 'BBS_ROOT', '+', "'etc/sysconf.ini'", 'FILENAME_LEN', '=', '20', 'OWNER_LEN', '=', '30', 'SESSIONID_LEN', '=', '32', 'REFRESH_TOKEN_LEN', '=', '128', 'NAMELEN', '=', '40', 'IDLEN', '=', '12', 'MD5PASSLEN', '=', '16', 'OLDPASSLEN', '=', '14', 'MOBILE_NUMBER_LEN', '=', '17', 'MAXCLUB', '=', '128', 'MAXUSERS', '=', '20000', 'MAX_MSG_SIZE', '=', '1024', 'MAXFRIENDS', '=', '400', 'MAXMESSAGE', '=', '5', 'MAXSIGLINES', '=', '6', 'IPLEN', '=', '16', 'DEFAULTBOARD', '=', '"sysop"', 'BLESS_BOARD', '=', '"happy_birthday"', 'QUOTED_LINES', '=', '10', 'MAXACTIVE', '=', '8000', 'USHM_SIZE', '=', 'MAXACTIVE', '+', '10', 'UTMP_HASHSIZE', '=', 'USHM_SIZE', '*', '4', 'UCACHE_SEMLOCK', '=', '0', 'LEN_FRIEND_EXP', '=', '15', 'REFRESH_TIME', '=', '30', 'USER_TITLE_LEN', '=', '18', 'SESSION_TIMEOUT', '=', 'datetime', '.', 'timedelta', '(', '30', ')', 'SESSION_TIMEOUT_SECONDS', '=', '86400', '*', '30', 'XMPP_IDLE_TIME', '=', '300', 'XMPP_LONG_IDLE_TIME', '=', '1800', 'XMPP_UPDATE_TIME_INTERVAL', '=', '10', 'XMPP_PING_TIME_INTERVAL', '=', '60', 'PUBLIC_SHMKEY', '=', '3700', 'MAX_ATTACHSIZE', '=', '20', '*', '1024', '*', '1024', 'BMDEL_DECREASE', '=', 'True', 'SYSMAIL_BOARD', '=', '"sysmail"', 'ADD_EDITMARK', '=', 'True', 'SEARCH_COUNT_LIMIT', '=', '20', 'MAIL_SIZE_LIMIT', '=', '-', '1', 'SEC_DELETED_OLDHOME', '=', '3600', '*', '24', '*', '3', 'SELF_INTRO_MAX_LEN', '=', '800'], 'nodes': ['/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/HenryHu/pybbs/Config.py', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/HenryHu/pybbs/PostEntry.py', 'PostEntry', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/HenryHu/pybbs/UtmpHead.py', 'UtmpHead', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/HenryHu/pybbs/xmpp/prelude.py', 'setattrs', 'first', 'filter', 'ifilter', 'izip', 'ichain', 'append', 'extend', 'keys', 'values', 'items', 'chain_items', 'setitems', 'get', 'update', 'setdefault', 'ipop', 'pop', 'thunk', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/HenryHu/pybbs/xmpp/aio.py', 'TCPServer', 'TCPClient', 'would_block', 'in_progress', 'starttls', 'is_ssl', 'SSLSocket', 'loop', 'start', '_KQueue', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/HenryHu/pybbs/xmpp/interfaces.py', 'Event', 'CoreInterface', 'PluginManager', 'StreamError', 'StanzaError', 'IQError', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/HenryHu/pybbs/xmpp/readstream.py', 'ReadStream', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/HenryHu/pybbs/xmpp/core.py', 'Core', 'SentOpenStream', 'SentCloseStream', 'ReceivedOpenStream', 'ReceivedCloseStream', 'StreamClosed', 'ClientCore', 'ServerCore', 'make_nonce', 'xmpp', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/HenryHu/pybbs/xmpp/__init__.py', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/HenryHu/pybbs/bbsauth.py', 'BBSAuth', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/HenryHu/pybbs/BCache.py', 'BoardHeader', 'BoardStatus', 'BCache', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/HenryHu/pybbs/xmppserver.py', 'elem_to_str', 'XMPPServer', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/HenryHu/pybbs/UserMemo.py', 'UserMemo', 'UserMemoMgr', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/HenryHu/pybbs/mailbox.py', 'MailBox', 'Folder', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/HenryHu/pybbs/store.py', 'Store', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/HenryHu/pybbs/mail.py', 'Mail', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/HenryHu/pybbs/Auth.py', 'AuthRecord', 'AuthError', 'AuthClientError', 'Auth', 'RefreshTokens', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/HenryHu/pybbs/Session.py', 'Session', 'SessionManager', 'BasicSession', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/HenryHu/pybbs/errors.py', 'NoPerm', 'WrongArgs', 'NotFound', 'ServerError', 'OutOfRange', 'Unauthorized', 'error_handler', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/HenryHu/pybbs/SemLock.py', 'SemLock', 'Config', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/HenryHu/pybbs/xmppsvc.py', '__main__', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/HenryHu/pybbs/Msg.py', 'Msg', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/HenryHu/pybbs/Log.py', 'Log', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/HenryHu/pybbs/digest.py', 'DigestItem', 'Digest'], 'edges': [[2, 1], [4, 3], [5, 55], [6, 5], [7, 5], [8, 5], [9, 5], [10, 5], [11, 5], [12, 5], [13, 5], [14, 5], [15, 5], [16, 5], [17, 5], [18, 5], [19, 5], [20, 5], [21, 5], [22, 5], [23, 5], [24, 5], [25, 55], [26, 25], [27, 25], [28, 25], [29, 25], [30, 25], [31, 25], [32, 25], [33, 25], [34, 25], [35, 25], [36, 55], [37, 36], [38, 36], [39, 36], [40, 36], [41, 36], [42, 36], [43, 55], [44, 43], [45, 55], [46, 45], [47, 45], [48, 45], [49, 45], [50, 45], [51, 45], [52, 45], [53, 45], [54, 45], [56, 55], [58, 57], [60, 59], [61, 59], [62, 59], [64, 63], [65, 63], [67, 66], [68, 66], [70, 69], [71, 69], [73, 72], [75, 74], [77, 76], [78, 76], [79, 76], [80, 76], [81, 76], [83, 82], [84, 82], [85, 82], [87, 86], [88, 86], [89, 86], [90, 86], [91, 86], [92, 86], [93, 86], [95, 94], [96, 0], [98, 97], [100, 99], [102, 101], [104, 103], [105, 103], [0, 1], [63, 97], [55, 97], [0, 97], [57, 97], [102, 97], [65, 98], [58, 98], [0, 99], [102, 99], [86, 72], [0, 72], [86, 74], [69, 74], [86, 103], [0, 103], [104, 103], [102, 103], [0, 3], [86, 76], [0, 76], [83, 76], [37, 47], [37, 48], [37, 49], [37, 50], [37, 51], [46, 52], [46, 53], [17, 6], [10, 10], [16, 14], [16, 15], [16, 17], [11, 17], [86, 59], [0, 59], [102, 59], [17, 18], [17, 21], [55, 63], [0, 63], [83, 63], [102, 63], [33, 30], [32, 30], [86, 82], [0, 82], [102, 82], [35, 33], [33, 34], [86, 66], [0, 66], [41, 42], [25, 43], [102, 86], [0, 94], [102, 0], [1, 69], [86, 69], [0, 69], [36, 45], [38, 46]], 'crossEdges': [[96, 15]]}
{'path': 'data/HenryHu/pybbs/digest.py', 'tokens': ['import', 're', 'import', 'os', 'import', 'stat', 'import', 'json', 'import', 'struct', 'import', 'time', 'import', 'Config', 'import', 'Board', 'import', 'Post', 'import', 'BoardManager', 'from', 'Util', 'import', 'Util', 'from', 'Log', 'import', 'Log', 'from', 'errors', 'import', '*', 'DEFAULT_DIGEST_LIST_COUNT', '=', '20', 'class', 'DigestItem', ':', '5INDENT', 'def', '__init__', '(', 'self', ',', 'basepath', ')', ':', '5INDENT', 'self', '.', 'basepath', '=', 'basepath', 'self', '.', 'title', '=', "''", 'self', '.', 'host', '=', "''", 'self', '.', 'port', '=', '0', 'self', '.', 'attachpos', '=', '0', 'self', '.', 'fname', '=', "''", 'self', '.', 'mtitle', '=', "''", 'self', '.', 'items', '=', '[', ']', 'self', '.', 'update_time', '=', '0', 'self', '.', 'id', '=', '0', 'self', '.', 'sysop_only', '=', '0', 'self', '.', 'bms_only', '=', '0', 'self', '.', 'zixia_only', '=', '0', '6DEDENT', 'def', 'IsDir', '(', 'self', ')', ':', '5INDENT', 'try', ':', '5INDENT', 'st', '=', 'os', '.', 'stat', '(', 'self', '.', 'realpath', '(', ')', ')', 'return', 'stat', '.', 'S_ISDIR', '(', 'st', '.', 'st_mode', ')', '6DEDENT', 'except', ':', '5INDENT', 'return', 'False', '6DEDENT', '6DEDENT', 'def', 'IsFile', '(', 'self', ')', ':', '5INDENT', 'try', ':', '5INDENT', 'st', '=', 'os', '.', 'stat', '(', 'self', '.', 'realpath', '(', ')', ')', 'return', 'stat', '.', 'S_ISREG', '(', 'st', '.', 'st_mode', ')', '6DEDENT', 'except', ':', '5INDENT', 'return', 'False', '6DEDENT', '6DEDENT', 'def', 'GetModTime', '(', 'self', ')', ':', '5INDENT', 'try', ':', '5INDENT', 'st', '=', 'os', '.', 'stat', '(', 'self', '.', 'realpath', '(', ')', ')', 'mtime', '=', 'st', '.', 'st_mtime', '6DEDENT', 'except', ':', '5INDENT', 'mtime', '=', 'time', '.', 'time', '(', ')', '6DEDENT', 'return', 'mtime', '6DEDENT', 'def', 'names_path', '(', 'self', ')', ':', '5INDENT', 'return', '"%s/.Names"', '%', 'self', '.', 'realpath', '(', ')', '6DEDENT', 'def', 'realpath', '(', 'self', ')', ':', '5INDENT', 'return', '"%s/%s"', '%', '(', 'Config', '.', 'BBS_ROOT', ',', 'self', '.', 'path', '(', ')', ')', '6DEDENT', 'def', 'path', '(', 'self', ')', ':', '5INDENT', 'if', '(', 'self', '.', 'fname', ')', ':', '5INDENT', 'return', '"%s/%s"', '%', '(', 'self', '.', 'basepath', ',', 'self', '.', 'fname', ')', '6DEDENT', 'else', ':', '5INDENT', 'return', 'self', '.', 'basepath', '6DEDENT', '6DEDENT', 'def', 'CheckUpdate', '(', 'self', ')', ':', '5INDENT', 'try', ':', '5INDENT', 'stat', '=', 'os', '.', 'stat', '(', 'self', '.', 'names_path', '(', ')', ')', 'if', '(', 'stat', '.', 'st_mtime', '>', 'self', '.', 'update_time', ')', ':', '5INDENT', 'self', '.', 'LoadNames', '(', ')', '6DEDENT', '6DEDENT', 'except', ':', '5INDENT', 'return', 'False', '6DEDENT', 'return', 'True', '6DEDENT', 'def', 'LoadNames', '(', 'self', ')', ':', '5INDENT', 'try', ':', '5INDENT', 'f', '=', 'open', '(', 'self', '.', 'names_path', '(', ')', ',', '"r"', ')', '6DEDENT', 'except', 'IOError', ':', '5INDENT', 'return', '0', '6DEDENT', 'stat', '=', 'os', '.', 'fstat', '(', 'f', '.', 'fileno', '(', ')', ')', 'self', '.', 'update_time', '=', 'stat', '.', 'st_mtime', 'item', '=', 'DigestItem', '(', 'self', '.', 'path', '(', ')', ')', 'hostname', '=', "''", '_id', '=', '0', 'bms_only', '=', '0', 'sysop_only', '=', '0', 'zixia_only', '=', '0', 'while', '(', 'True', ')', ':', '5INDENT', 'line', '=', 'f', '.', 'readline', '(', ')', 'if', '(', 'line', '==', '""', ')', ':', 'break', 'npos', '=', 'line', '.', 'find', '(', '"\\n"', ')', 'if', '(', 'npos', '!=', '-', '1', ')', ':', 'line', '=', 'line', '[', ':', 'npos', ']', 'if', '(', 'line', '[', ':', '1', ']', '==', "'#'", ')', ':', '5INDENT', 'if', '(', 'line', '[', ':', '8', ']', '==', '"# Title="', ')', ':', '5INDENT', 'if', '(', 'not', 'self', '.', 'mtitle', ')', ':', '5INDENT', 'self', '.', 'mtitle', '=', 'line', '[', '8', ':', ']', '6DEDENT', '6DEDENT', '6DEDENT', 'result', '=', 're', '.', 'match', '(', "'([^=]*)=(.*)'", ',', 'line', ')', 'if', '(', 'result', ')', ':', '5INDENT', 'key', '=', 'result', '.', 'group', '(', '1', ')', 'value', '=', 'result', '.', 'group', '(', '2', ')', 'if', '(', 'key', '==', '"Name"', ')', ':', '5INDENT', 'item', '.', 'title', '=', 'value', 'item', '.', 'attachpos', '=', '0', '6DEDENT', 'elif', '(', 'key', '==', '"Path"', ')', ':', '5INDENT', 'if', '(', 'value', '[', ':', '2', ']', '==', '"~/"', ')', ':', '5INDENT', 'item', '.', 'fname', '=', 'value', '[', '2', ':', ']', '6DEDENT', 'else', ':', '5INDENT', 'item', '.', 'fname', '=', 'value', '6DEDENT', 'if', '(', 'item', '.', 'fname', '.', 'find', '(', '".."', ')', '!=', '-', '1', ')', ':', '5INDENT', 'continue', '6DEDENT', 'if', '(', 'item', '.', 'title', '.', 'find', '(', '"(BM: BMS)"', ')', '!=', '-', '1', ')', ':', '5INDENT', 'bms_only', '+=', '1', '6DEDENT', 'elif', '(', 'item', '.', 'title', '.', 'find', '(', '"(BM: SYSOPS)"', ')', '!=', '-', '1', ')', ':', '5INDENT', 'sysop_only', '+=', '1', '6DEDENT', 'elif', '(', 'item', '.', 'title', '.', 'find', '(', '"(BM: ZIXIAs)"', ')', '!=', '-', '1', ')', ':', '5INDENT', 'zixia_only', '+=', '1', '6DEDENT', 'if', '(', 'item', '.', 'fname', '.', 'find', '(', '"!@#$%"', ')', '!=', '-', '1', ')', ':', '5INDENT', 'parts', '=', 're', '.', 'split', '(', "'[!@#$%]'", ',', 'item', '.', 'fname', ')', 'newparts', '=', '[', ']', 'for', 'part', 'in', 'parts', ':', '5INDENT', 'if', '(', 'part', ')', ':', '5INDENT', 'newparts', '+=', '[', 'part', ']', '6DEDENT', '6DEDENT', 'hostname', '=', 'newparts', '[', '0', ']', 'item', '.', 'fname', '=', 'newparts', '[', '1', ']', 'try', ':', '5INDENT', 'item', '.', 'port', '=', 'int', '(', 'newparts', '[', '2', ']', ')', '6DEDENT', 'except', ':', '5INDENT', 'item', '.', 'port', '=', '0', '6DEDENT', '6DEDENT', 'item', '.', 'id', '=', '_id', '_id', '+=', '1', 'item', '.', 'bms_only', '=', 'bms_only', 'item', '.', 'sysop_only', '=', 'sysop_only', 'item', '.', 'zixia_only', '=', 'zixia_only', 'item', '.', 'host', '=', 'hostname', 'self', '.', 'items', '+=', '[', 'item', ']', 'item', '=', 'DigestItem', '(', 'self', '.', 'path', '(', ')', ')', 'hostname', '=', "''", '6DEDENT', 'elif', '(', 'key', '==', '"Host"', ')', ':', '5INDENT', 'hostname', '=', 'value', '6DEDENT', 'elif', '(', 'key', '==', '"Port"', ')', ':', '5INDENT', 'try', ':', '5INDENT', 'item', '.', 'port', '=', 'int', '(', 'value', ')', '6DEDENT', 'except', ':', '5INDENT', 'item', '.', 'port', '=', '0', '6DEDENT', '6DEDENT', 'elif', '(', 'key', '==', '"Attach"', ')', ':', '5INDENT', 'try', ':', '5INDENT', 'item', '.', 'attachpos', '=', 'int', '(', 'value', ')', '6DEDENT', 'except', ':', '5INDENT', 'item', '.', 'attachpos', '=', '0', '6DEDENT', '6DEDENT', '6DEDENT', '6DEDENT', 'f', '.', 'close', '(', ')', 'return', '1', '6DEDENT', 'def', 'GetItem', '(', 'self', ',', 'user', ',', 'route', ',', 'has_perm', '=', 'False', ',', 'need_perm', '=', 'False', ')', ':', '5INDENT', 'self', '.', 'CheckUpdate', '(', ')', 'if', '(', 'self', '.', 'mtitle', '.', 'find', '(', '"(BM:"', ')', '!=', '-', '1', ')', ':', '5INDENT', 'if', '(', 'Board', '.', 'Board', '.', 'IsBM', '(', 'user', ',', 'self', '.', 'mtitle', '[', '4', ':', ']', ',', ')', 'or', 'user', '.', 'IsSysop', '(', ')', ')', ':', '5INDENT', 'has_perm', '=', 'True', '6DEDENT', 'elif', '(', 'need_perm', 'and', 'not', 'has_perm', ')', ':', '5INDENT', 'return', 'None', '6DEDENT', '6DEDENT', 'if', '(', 'self', '.', 'mtitle', '.', 'find', '(', '"(BM: BMS)"', ')', '!=', '-', '1', 'or', 'self', '.', 'mtitle', '.', 'find', '(', '"(BM: SECRET)"', ')', '!=', '-', '1', 'or', 'self', '.', 'mtitle', '.', 'find', '(', '"(BM: SYSOPS)"', ')', '!=', '-', '1', ')', ':', '5INDENT', 'need_perm', '=', 'True', '6DEDENT', 'if', '(', 'len', '(', 'route', ')', '==', '0', ')', ':', '5INDENT', 'return', 'self', '6DEDENT', 'target', '=', 'route', '[', '0', ']', '-', '1', '_id', '=', 'target', 'if', '(', '_id', '>=', 'len', '(', 'self', '.', 'items', ')', ')', ':', '5INDENT', 'return', 'None', '6DEDENT', 'while', '(', 'self', '.', 'items', '[', '_id', ']', '.', 'EffectiveId', '(', 'user', ')', '<', 'target', ')', ':', '5INDENT', '_id', '+=', '1', 'if', '(', '_id', '>=', 'len', '(', 'self', '.', 'items', ')', ')', ':', '5INDENT', 'return', 'None', '6DEDENT', '6DEDENT', 'item', '=', 'self', '.', 'items', '[', '_id', ']', 'item', '.', 'mtitle', '=', 'item', '.', 'title', 'if', '(', 'len', '(', 'route', ')', '==', '1', ')', ':', '5INDENT', 'return', 'item', '6DEDENT', 'else', ':', '5INDENT', 'if', '(', 'item', '.', 'IsDir', '(', ')', ')', ':', '5INDENT', 'if', '(', 'not', 'item', '.', 'CheckUpdate', '(', ')', ')', ':', '5INDENT', 'return', 'None', '6DEDENT', 'return', 'item', '.', 'GetItem', '(', 'user', ',', 'route', '[', '1', ':', ']', ',', 'has_perm', ',', 'need_perm', ')', '6DEDENT', 'else', ':', '5INDENT', 'return', 'None', '6DEDENT', '6DEDENT', '6DEDENT', 'def', 'GetRange', '(', 'self', ',', 'user', ',', 'route', ',', 'start', ',', 'end', ',', 'has_perm', '=', 'False', ',', 'need_perm', '=', 'False', ')', ':', '5INDENT', 'self', '.', 'CheckUpdate', '(', ')', 'firstitem', '=', 'self', '.', 'GetItem', '(', 'user', ',', 'route', '+', '[', 'start', ']', ',', 'has_perm', ',', 'need_perm', ')', 'if', '(', 'not', 'firstitem', ')', ':', '5INDENT', 'return', '[', ']', '6DEDENT', 'parent', '=', 'self', '.', 'GetItem', '(', 'user', ',', 'route', ',', 'has_perm', ',', 'need_perm', ')', 'if', '(', 'not', 'parent', ')', ':', '5INDENT', 'return', '[', ']', '6DEDENT', 'if', '(', 'not', 'parent', '.', 'IsDir', '(', ')', ')', ':', '5INDENT', 'return', '[', ']', '6DEDENT', 'result', '=', '[', ']', '_id', '=', 'start', '-', '1', 'for', 'i', 'in', 'range', '(', 'start', ',', 'end', '+', '1', ')', ':', '5INDENT', 'target', '=', 'i', '-', '1', 'if', '(', '_id', '>=', 'len', '(', 'parent', '.', 'items', ')', ')', ':', '5INDENT', 'return', '[', ']', '6DEDENT', 'while', '(', 'parent', '.', 'items', '[', '_id', ']', '.', 'EffectiveId', '(', 'user', ')', '<', 'target', ')', ':', '5INDENT', '_id', '+=', '1', 'if', '(', '_id', '>=', 'len', '(', 'parent', '.', 'items', ')', ')', ':', '5INDENT', 'return', 'result', '6DEDENT', '6DEDENT', 'item', '=', 'parent', '.', 'items', '[', '_id', ']', 'item', '.', 'mtitle', '=', 'item', '.', 'title', 'result', '+=', '[', 'item', ']', '6DEDENT', 'return', 'result', '6DEDENT', 'def', 'EffectiveId', '(', 'self', ',', 'user', ')', ':', '5INDENT', '_id', '=', 'self', '.', 'id', 'if', '(', 'user', '.', 'IsSysop', '(', ')', ')', ':', '5INDENT', 'return', '_id', '6DEDENT', 'if', '(', 'not', 'user', '.', 'IsSysop', '(', ')', ')', ':', '5INDENT', '_id', '-=', 'self', '.', 'sysop_only', '6DEDENT', 'if', '(', 'not', 'user', '.', 'IsBM', '(', ')', ')', ':', '5INDENT', '_id', '-=', 'self', '.', 'bms_only', '6DEDENT', 'if', '(', 'not', 'user', '.', 'IsSECANC', '(', ')', ')', ':', '5INDENT', '_id', '-=', 'self', '.', 'zixia_only', '6DEDENT', 'return', '_id', '6DEDENT', 'def', 'GetInfo', '(', 'self', ')', ':', '5INDENT', 'info', '=', '{', '}', 'info', '[', "'mtitle'", ']', '=', 'Util', '.', 'gbkDec', '(', 'self', '.', 'mtitle', ')', 'info', '[', "'title'", ']', '=', 'Util', '.', 'gbkDec', '(', 'self', '.', 'title', ')', 'info', '[', "'attach'", ']', '=', 'self', '.', 'attachpos', 'if', '(', 'self', '.', 'host', '!=', "''", ')', ':', '5INDENT', 'info', '[', "'host'", ']', '=', 'self', '.', 'host', 'info', '[', "'port'", ']', '=', 'self', '.', 'port', 'info', '[', "'type'", ']', '=', "'link'", '6DEDENT', 'elif', '(', 'self', '.', 'IsDir', '(', ')', ')', ':', '5INDENT', 'info', '[', "'type'", ']', '=', "'dir'", '6DEDENT', 'elif', '(', 'self', '.', 'IsFile', '(', ')', ')', ':', '5INDENT', 'info', '[', "'type'", ']', '=', "'file'", '6DEDENT', 'else', ':', '5INDENT', 'info', '[', "'type'", ']', '=', "'other'", '6DEDENT', 'info', '[', "'mtime'", ']', '=', 'int', '(', 'self', '.', 'GetModTime', '(', ')', ')', 'return', 'info', '6DEDENT', 'def', 'GetInfoForUser', '(', 'self', ',', 'user', ')', ':', '5INDENT', 'info', '=', 'self', '.', 'GetInfo', '(', ')', 'info', '[', "'id'", ']', '=', 'self', '.', 'EffectiveId', '(', 'user', ')', '+', '1', 'return', 'info', '6DEDENT', 'def', 'GetAttachLink', '(', 'self', ',', 'session', ')', ':', '5INDENT', '_hash', '=', 'Util', '.', 'HashGen', '(', 'self', '.', 'path', '(', ')', ',', '"python nb"', ')', 'filename', '=', "''", 'for', 'i', 'in', 'range', '(', '2', ')', ':', '5INDENT', 'filename', '+=', '"%0x"', '%', 'struct', '.', 'unpack', '(', "'=I'", ',', '_hash', '[', 'i', '*', '4', ':', '(', 'i', '+', '1', ')', '*', '4', ']', ')', '6DEDENT', 'link', '=', '"http://%s/bbscon.php?b=xattach&f=%s"', '%', '(', 'session', '.', 'GetMirror', '(', 'Config', '.', 'Config', '.', 'GetInt', '(', "'ATTACHMENT_PORT'", ',', '80', ')', ')', ',', 'filename', ')', 'linkfile', '=', '"%s/boards/xattach/%s"', '%', '(', 'Config', '.', 'BBS_ROOT', ',', 'filename', ')', 'target', '=', '"../../%s"', '%', 'self', '.', 'path', '(', ')', 'try', ':', '5INDENT', 'os', '.', 'symlink', '(', 'target', ',', 'linkfile', ')', '6DEDENT', 'except', ':', '5INDENT', 'pass', '6DEDENT', 'return', 'link', '6DEDENT', '6DEDENT', 'class', 'Digest', ':', '5INDENT', 'root', '=', 'DigestItem', '(', '"0Announce"', ')', 'def', '__init__', '(', 'self', ',', 'board', ',', 'path', ')', ':', '5INDENT', 'self', '.', 'board', '=', 'board', 'self', '.', 'path', '=', 'path', 'self', '.', 'root', '=', 'DigestItem', '(', 'self', '.', 'path', ')', '6DEDENT', '@', 'staticmethod', 'def', 'GET', '(', 'svc', ',', 'session', ',', 'params', ',', 'action', ')', ':', '5INDENT', 'if', '(', 'session', 'is', 'None', ')', ':', 'raise', 'Unauthorized', '(', "'login first'", ')', 'if', 'not', 'session', '.', 'CheckScope', '(', "'bbs'", ')', ':', 'raise', 'NoPerm', '(', '"out of scope"', ')', 'user', '=', 'session', '.', 'GetUser', '(', ')', 'boardname', '=', 'svc', '.', 'get_str', '(', 'params', ',', "'board'", ',', "''", ')', 'if', '(', 'boardname', ')', ':', '5INDENT', 'board', '=', 'BoardManager', '.', 'BoardManager', '.', 'GetBoard', '(', 'boardname', ')', 'if', '(', 'board', 'is', 'None', ')', ':', 'raise', 'NotFound', '(', "'board %s not found'", '%', 'boardname', ')', 'if', '(', 'not', 'board', '.', 'CheckReadPerm', '(', 'user', ')', ')', ':', '5INDENT', 'raise', 'NoPerm', '(', "'permission denied'", ')', '6DEDENT', 'basenode', '=', 'board', '.', 'digest', '.', 'root', 'has_perm', '=', 'user', '.', 'IsDigestMgr', '(', ')', 'or', 'user', '.', 'IsSysop', '(', ')', 'or', 'user', '.', 'IsSuperBM', '(', ')', '6DEDENT', 'else', ':', '5INDENT', 'basenode', '=', 'Digest', '.', 'root', 'has_perm', '=', 'user', '.', 'IsDigestMgr', '(', ')', '6DEDENT', 'if', '(', 'action', '==', '"list"', ')', ':', '5INDENT', 'route', '=', 'svc', '.', 'get_str', '(', 'params', ',', "'route'", ')', 'start', '=', 'svc', '.', 'get_int', '(', 'params', ',', "'start'", ',', '1', ')', 'end', '=', 'svc', '.', 'get_int', '(', 'params', ',', "'end'", ',', 'start', '+', 'DEFAULT_DIGEST_LIST_COUNT', '-', '1', ')', 'Digest', '.', 'List', '(', 'svc', ',', 'basenode', ',', 'route', ',', 'start', ',', 'end', ',', 'session', ',', 'has_perm', ')', 'return', '6DEDENT', 'elif', '(', 'action', '==', '"view"', ')', ':', '5INDENT', 'route', '=', 'svc', '.', 'get_str', '(', 'params', ',', "'route'", ')', 'start', '=', 'svc', '.', 'get_int', '(', 'params', ',', "'start'", ',', '0', ')', 'count', '=', 'svc', '.', 'get_int', '(', 'params', ',', "'count'", ',', '0', ')', 'Digest', '.', 'View', '(', 'svc', ',', 'basenode', ',', 'route', ',', 'session', ',', 'has_perm', ',', 'start', ',', 'count', ')', 'return', '6DEDENT', 'else', ':', '5INDENT', 'raise', 'WrongArgs', '(', "'unknown action %s'", '%', 'action', ')', '6DEDENT', '6DEDENT', '@', 'staticmethod', 'def', 'ParseRoute', '(', 'route', ')', ':', '5INDENT', 'ret', '=', '[', ']', 'items', '=', 're', '.', 'split', '(', "'-'", ',', 'route', ')', 'items', '=', 'items', '[', '1', ':', ']', 'for', 'item', 'in', 'items', ':', '5INDENT', 'try', ':', '5INDENT', 'ret', '+=', '[', 'int', '(', 'item', ')', ']', '6DEDENT', 'except', ':', '5INDENT', 'raise', 'WrongArgs', '(', "'fail to parse route element: %s'", '%', 'item', ')', '6DEDENT', '6DEDENT', 'return', 'ret', '6DEDENT', '@', 'staticmethod', 'def', 'List', '(', 'svc', ',', 'basenode', ',', 'route', ',', 'start', ',', 'end', ',', 'session', ',', 'has_perm', ')', ':', '5INDENT', 'route_array', '=', 'Digest', '.', 'ParseRoute', '(', 'route', ')', 'parent', '=', 'basenode', '.', 'GetItem', '(', 'session', '.', 'GetUser', '(', ')', ',', 'route_array', ',', 'has_perm', ')', 'if', '(', 'not', 'parent', ')', ':', '5INDENT', 'raise', 'WrongArgs', '(', "'route %s does not exist!'", '%', 'route', ')', '6DEDENT', 'if', '(', 'not', 'parent', '.', 'IsDir', '(', ')', ')', ':', '5INDENT', 'raise', 'WrongArgs', '(', "'route %s does not point to a dir!'", '%', 'route', ')', '6DEDENT', 'items', '=', 'basenode', '.', 'GetRange', '(', 'session', '.', 'GetUser', '(', ')', ',', 'route_array', ',', 'start', ',', 'end', ',', 'has_perm', ')', 'result', '=', '{', '}', 'result', '[', "'parent'", ']', '=', 'parent', '.', 'GetInfoForUser', '(', 'session', '.', 'GetUser', '(', ')', ')', 'result', '[', "'count'", ']', '=', 'len', '(', 'items', ')', 'result_list', '=', '[', ']', 'for', 'item', 'in', 'items', ':', '5INDENT', 'result_list', '+=', '[', 'item', '.', 'GetInfoForUser', '(', 'session', '.', 'GetUser', '(', ')', ')', ']', '6DEDENT', 'result', '[', "'items'", ']', '=', 'result_list', 'svc', '.', 'writedata', '(', 'json', '.', 'dumps', '(', 'result', ')', ')', '6DEDENT', '@', 'staticmethod', 'def', 'View', '(', 'svc', ',', 'basenode', ',', 'route', ',', 'session', ',', 'has_perm', ',', 'start', ',', 'count', ')', ':', '5INDENT', 'route_array', '=', 'Digest', '.', 'ParseRoute', '(', 'route', ')', 'item', '=', 'basenode', '.', 'GetItem', '(', 'session', '.', 'GetUser', '(', ')', ',', 'route_array', ',', 'has_perm', ')', 'if', '(', 'not', 'item', ')', ':', '5INDENT', 'raise', 'WrongArgs', '(', "'route %s does not exist!'", '%', 'route', ')', '6DEDENT', 'if', '(', 'not', 'item', '.', 'IsFile', '(', ')', ')', ':', '5INDENT', 'raise', 'WrongArgs', '(', "'route %s does not point to a file'", '%', 'route', ')', '6DEDENT', 'result', '=', '{', '}', 'result', '[', "'item'", ']', '=', 'item', '.', 'GetInfoForUser', '(', 'session', '.', 'GetUser', '(', ')', ')', 'postinfo', '=', 'Post', '.', 'Post', '(', 'item', '.', 'realpath', '(', ')', ',', 'None', ')', '(', 'result', '[', "'content'", ']', ',', 'result', '[', "'has_end'", ']', ')', '=', 'postinfo', '.', 'GetContent', '(', 'start', ',', 'count', ')', 'attachlist', '=', 'postinfo', '.', 'GetAttachListByType', '(', ')', 'result', '[', "'picattach'", ']', '=', 'attachlist', '[', '0', ']', 'result', '[', "'otherattach'", ']', '=', 'attachlist', '[', '1', ']', 'if', '(', 'attachlist', '[', '0', ']', 'or', 'attachlist', '[', '1', ']', ')', ':', '5INDENT', 'result', '[', "'attachlink'", ']', '=', 'item', '.', 'GetAttachLink', '(', 'session', ')', '6DEDENT', 'svc', '.', 'writedata', '(', 'json', '.', 'dumps', '(', 'result', ')', ')', '6DEDENT', '6DEDENT'], 'nodes': ['/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/HenryHu/pybbs/digest.py', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/HenryHu/pybbs/PostEntry.py', 'PostEntry', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/HenryHu/pybbs/UtmpHead.py', 'UtmpHead', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/HenryHu/pybbs/xmpp/prelude.py', 'setattrs', 'first', 'filter', 'ifilter', 'izip', 'ichain', 'append', 'extend', 'keys', 'values', 'items', 'chain_items', 'setitems', 'get', 'update', 'setdefault', 'ipop', 'pop', 'thunk', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/HenryHu/pybbs/xmpp/aio.py', 'TCPServer', 'TCPClient', 'would_block', 'in_progress', 'starttls', 'is_ssl', 'SSLSocket', 'loop', 'start', '_KQueue', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/HenryHu/pybbs/xmpp/interfaces.py', 'Event', 'CoreInterface', 'PluginManager', 'StreamError', 'StanzaError', 'IQError', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/HenryHu/pybbs/xmpp/readstream.py', 'ReadStream', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/HenryHu/pybbs/xmpp/core.py', 'Core', 'SentOpenStream', 'SentCloseStream', 'ReceivedOpenStream', 'ReceivedCloseStream', 'StreamClosed', 'ClientCore', 'ServerCore', 'make_nonce', 'xmpp', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/HenryHu/pybbs/xmpp/__init__.py', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/HenryHu/pybbs/bbsauth.py', 'BBSAuth', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/HenryHu/pybbs/BCache.py', 'BoardHeader', 'BoardStatus', 'BCache', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/HenryHu/pybbs/xmppserver.py', 'elem_to_str', 'XMPPServer', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/HenryHu/pybbs/UserMemo.py', 'UserMemo', 'UserMemoMgr', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/HenryHu/pybbs/mailbox.py', 'MailBox', 'Folder', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/HenryHu/pybbs/store.py', 'Store', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/HenryHu/pybbs/mail.py', 'Mail', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/HenryHu/pybbs/Auth.py', 'AuthRecord', 'AuthError', 'AuthClientError', 'Auth', 'RefreshTokens', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/HenryHu/pybbs/Session.py', 'Session', 'SessionManager', 'BasicSession', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/HenryHu/pybbs/errors.py', 'NoPerm', 'WrongArgs', 'NotFound', 'ServerError', 'OutOfRange', 'Unauthorized', 'error_handler', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/HenryHu/pybbs/SemLock.py', 'SemLock', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/HenryHu/pybbs/Config.py', 'Config', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/HenryHu/pybbs/xmppsvc.py', '__main__', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/HenryHu/pybbs/Msg.py', 'Msg', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/HenryHu/pybbs/Log.py', 'Log', 'DigestItem', 'Digest'], 'edges': [[2, 1], [4, 3], [5, 55], [6, 5], [7, 5], [8, 5], [9, 5], [10, 5], [11, 5], [12, 5], [13, 5], [14, 5], [15, 5], [16, 5], [17, 5], [18, 5], [19, 5], [20, 5], [21, 5], [22, 5], [23, 5], [24, 5], [25, 55], [26, 25], [27, 25], [28, 25], [29, 25], [30, 25], [31, 25], [32, 25], [33, 25], [34, 25], [35, 25], [36, 55], [37, 36], [38, 36], [39, 36], [40, 36], [41, 36], [42, 36], [43, 55], [44, 43], [45, 55], [46, 45], [47, 45], [48, 45], [49, 45], [50, 45], [51, 45], [52, 45], [53, 45], [54, 45], [56, 55], [58, 57], [60, 59], [61, 59], [62, 59], [64, 63], [65, 63], [67, 66], [68, 66], [70, 69], [71, 69], [73, 72], [75, 74], [77, 76], [78, 76], [79, 76], [80, 76], [81, 76], [83, 82], [84, 82], [85, 82], [87, 86], [88, 86], [89, 86], [90, 86], [91, 86], [92, 86], [93, 86], [95, 94], [97, 96], [99, 98], [101, 100], [103, 102], [104, 0], [105, 0], [96, 1], [63, 98], [55, 98], [96, 98], [57, 98], [103, 98], [65, 99], [58, 99], [96, 100], [103, 100], [86, 72], [96, 72], [86, 74], [69, 74], [86, 0], [96, 0], [104, 0], [103, 0], [96, 3], [86, 76], [96, 76], [83, 76], [37, 47], [37, 48], [37, 49], [37, 50], [37, 51], [46, 52], [46, 53], [17, 6], [10, 10], [16, 14], [16, 15], [16, 17], [11, 17], [86, 59], [96, 59], [103, 59], [17, 18], [17, 21], [55, 63], [96, 63], [83, 63], [103, 63], [33, 30], [32, 30], [86, 82], [96, 82], [103, 82], [35, 33], [33, 34], [86, 66], [96, 66], [41, 42], [25, 43], [103, 86], [96, 94], [103, 96], [1, 69], [86, 69], [96, 69], [36, 45], [38, 46]], 'crossEdges': [[104, 36], [105, 1782]]}
{'path': 'data/HenryHu/pybbs/xmppserver.py', 'tokens': ['import', 'time', 'import', 'UserManager', 'import', 'UserInfo', 'from', 'Session', 'import', 'Session', 'from', 'Log', 'import', 'Log', 'import', 'UCache', 'import', 'Config', 'import', 'MsgBox', 'import', 'xmpp', 'import', 'modes', 'import', 'Util', 'import', 'traceback', 'import', 'os', 'from', 'xmpp', '.', 'features', 'import', 'NoRoute', '__disco_info_ns__', '=', "'http://jabber.org/protocol/disco#info'", '__disco_items_ns__', '=', "'http://jabber.org/protocol/disco#items'", '__vcard_ns__', '=', "'vcard-temp'", 'STEAL_AFTER_SEEN', '=', '3', 'def', 'elem_to_str', '(', 'elem', ')', ':', '5INDENT', 'return', '"<%r %r>%r</>"', '%', '(', 'elem', '.', 'tag', ',', 'elem', '.', 'attrib', ',', 'elem', '.', 'text', ')', '6DEDENT', 'class', 'XMPPServer', '(', 'xmpp', '.', 'Plugin', ')', ':', '5INDENT', '"""XMPP server for the BBS"""', 'def', '__init__', '(', 'self', ',', 'rosters', ',', 'host', ')', ':', '5INDENT', 'self', '.', 'probed', '=', 'False', 'self', '.', '_closed', '=', 'False', 'self', '.', 'rosters', '=', 'rosters', 'self', '.', '_session', '=', 'None', 'self', '.', 'rosters', '.', 'set_resources', '(', 'self', '.', 'get_resources', '(', ')', ')', 'self', '.', '_fixedjid', '=', 'UCache', '.', 'UCache', '.', 'formalize_jid', '(', 'unicode', '(', 'self', '.', 'authJID', ')', ')', 'self', '.', '_userid', '=', 'self', '.', '_fixedjid', '.', 'partition', '(', "'@'", ')', '[', '0', ']', '.', 'encode', '(', '"gbk"', ')', 'if', '(', 'not', 'self', '.', 'rosters', '.', 'allow_login', '(', 'self', '.', 'authJID', '.', 'bare', ')', ')', ':', '5INDENT', 'Log', '.', 'warn', '(', '"user %s login denied"', '%', 'self', '.', '_userid', ')', 'self', '.', 'stream_error', '(', "'policy-violation'", ',', "'Login denied. Too many logins?'", ')', 'return', '6DEDENT', 'Log', '.', 'info', '(', '"%s: session start"', '%', 'unicode', '(', 'self', '.', 'authJID', ')', ')', 'if', 'self', '.', 'authJID', '.', 'resource', '[', ':', '-', '8', ']', '!=', '"Resource"', 'and', 'len', '(', 'self', '.', 'authJID', '.', 'resource', ')', '>', '8', ':', '5INDENT', 'try', ':', '5INDENT', 'routes', '=', 'self', '.', 'routes', '(', 'self', '.', 'authJID', '.', 'bare', ')', 'for', 'route', 'in', 'routes', ':', '5INDENT', 'jid', '=', 'route', '[', '0', ']', 'if', 'jid', '.', 'resource', '[', ':', '-', '8', ']', '==', 'self', '.', 'authJID', '.', 'resource', '[', ':', '-', '8', ']', ':', '5INDENT', 'if', 'jid', '.', 'resource', '!=', 'self', '.', 'authJID', '.', 'resource', ':', '5INDENT', 'Log', '.', 'info', '(', '"old jid: %s %r"', '%', '(', 'jid', '.', 'full', ',', 'route', '[', '1', ']', ')', ')', 'route', '[', '1', ']', '.', 'stream_error', '(', "'conflict'", ',', "'A new client with the same resource connected'", ')', '6DEDENT', '6DEDENT', 'else', ':', '5INDENT', 'Log', '.', 'info', '(', '"another me: %s %r"', '%', '(', 'jid', '.', 'full', ',', 'route', '[', '1', ']', ')', ')', '6DEDENT', '6DEDENT', '6DEDENT', 'except', 'NoRoute', ':', '5INDENT', 'pass', '6DEDENT', 'Log', '.', 'debug', '(', '"%s: checked for old sessions"', '%', 'self', '.', 'authJID', '.', 'full', ')', '6DEDENT', 'self', '.', '_user', '=', 'UserManager', '.', 'UserManager', '.', 'LoadUser', '(', 'self', '.', '_userid', ')', 'if', '(', 'self', '.', '_user', '==', 'None', ')', ':', '5INDENT', 'raise', 'Exception', '(', '"How can that be!"', ')', '6DEDENT', 'self', '.', '_peer_addr', '=', 'self', '.', 'getpeername', '(', ')', 'self', '.', '_session', '=', 'Session', '(', 'self', '.', '_user', ',', 'self', '.', '_peer_addr', '[', '0', ']', ')', 'self', '.', '_session', '.', 'RecordLogin', '(', ')', 'self', '.', '_userinfo', '=', 'self', '.', '_session', '.', 'Register', '(', ')', 'self', '.', '_loginid', '=', 'self', '.', '_session', '.', 'utmpent', 'self', '.', '_hostname', '=', 'host', 'self', '.', 'bind', '(', 'xmpp', '.', 'ReceivedCloseStream', ',', 'self', '.', 'recv_close', ')', 'self', '.', 'bind', '(', 'xmpp', '.', 'StreamClosed', ',', 'self', '.', 'stream_closed', ')', 'self', '.', 'bind', '(', 'xmpp', '.', 'SentCloseStream', ',', 'self', '.', 'sent_close', ')', 'self', '.', 'rosters', '.', 'register_conn', '(', 'self', ')', 'msgbox', '=', 'MsgBox', '.', 'MsgBox', '(', 'self', '.', '_userid', ')', 'if', 'self', '.', 'rosters', '.', 'get_xmpp_read', '(', 'self', '.', '_user', '.', 'GetUID', '(', ')', ')', 'is', 'None', ':', '5INDENT', 'self', '.', 'rosters', '.', 'set_xmpp_read', '(', 'self', '.', '_user', '.', 'GetUID', '(', ')', ',', 'msgbox', '.', 'GetMsgCount', '(', 'all', '=', 'False', ')', '-', 'msgbox', '.', 'GetUnreadCount', '(', ')', ')', '6DEDENT', 'self', '.', 'check_msg', '(', ')', '6DEDENT', 'def', 'get_loginid', '(', 'self', ')', ':', '5INDENT', 'return', 'self', '.', '_loginid', '6DEDENT', 'def', 'recv_close', '(', 'self', ')', ':', '5INDENT', 'Log', '.', 'debug', '(', '"%s: close because he wants to"', '%', 'self', '.', 'authJID', '.', 'full', ')', 'return', 'self', '.', 'close', '(', ')', '6DEDENT', 'def', 'stream_closed', '(', 'self', ')', ':', '5INDENT', 'Log', '.', 'debug', '(', '"%s: close because stream closed"', '%', 'self', '.', 'authJID', '.', 'full', ')', 'return', 'self', '.', 'close', '(', ')', '6DEDENT', 'def', 'sent_close', '(', 'self', ')', ':', '5INDENT', 'Log', '.', 'debug', '(', '"%s: close because we want to"', '%', 'self', '.', 'authJID', '.', 'full', ')', 'return', 'self', '.', 'close', '(', ')', '6DEDENT', 'def', 'close', '(', 'self', ')', ':', '5INDENT', 'if', '(', 'self', '.', '_closed', ')', ':', '5INDENT', 'Log', '.', 'debug', '(', '"already closed. ignore"', ')', 'return', '6DEDENT', 'self', '.', '_closed', '=', 'True', 'Log', '.', 'info', '(', '"%s: session end"', '%', 'unicode', '(', 'self', '.', 'authJID', ')', ')', 'if', '(', 'self', '.', '_session', ')', ':', '5INDENT', 'self', '.', '_session', '.', 'Unregister', '(', ')', '6DEDENT', 'self', '.', 'unbind_res', '(', ')', 'self', '.', 'rosters', '.', 'unregister_conn', '(', 'self', ')', '6DEDENT', '@', 'xmpp', '.', 'iq', '(', "'{urn:xmpp:ping}ping'", ')', 'def', 'ping', '(', 'self', ',', 'iq', ')', ':', '5INDENT', '"""Handle ping requests"""', 'self', '.', 'refresh', '(', ')', 'return', 'self', '.', 'iq', '(', "'result'", ',', 'iq', ')', '6DEDENT', '@', 'xmpp', '.', 'stanza', '(', "'message'", ')', 'def', 'message', '(', 'self', ',', 'elem', ')', ':', '5INDENT', '"""Proxy message from one user to another"""', 'to_jid', '=', 'elem', '.', 'get', '(', "'to'", ')', 'from_jid', '=', 'elem', '.', 'get', '(', "'from'", ')', 'if', '(', 'from_jid', '==', 'None', ')', ':', '5INDENT', 'return', '6DEDENT', 'text_body', '=', 'None', 'for', 'child', 'in', 'elem', ':', '5INDENT', 'if', '(', 'child', '.', 'tag', '.', 'endswith', '(', "'}body'", ')', ')', ':', '5INDENT', 'text_body', '=', 'child', '.', 'text', '6DEDENT', '6DEDENT', 'if', '(', 'text_body', '==', 'None', ')', ':', '5INDENT', 'return', '6DEDENT', 'ret', '=', 'self', '.', 'rosters', '.', 'send_msg', '(', 'from_jid', ',', 'to_jid', ',', 'text_body', ')', 'if', '(', 'ret', '<=', '0', ')', ':', '5INDENT', 'Log', '.', 'warn', '(', '"sendmsg() failed to %s from %s error %d"', '%', '(', 'to_jid', ',', 'from_jid', ',', 'ret', ')', ')', 'errors', '=', '{', '-', '1', ':', '"That user has locked screen, please send later."', ',', '-', '11', ':', '"That user denied your message."', ',', '-', '12', ':', '"That user has too many unread messages. Please send later."', ',', '-', '13', ':', '"User has gone after message sent."', ',', '-', '14', ':', '"User has gone before message sent."', ',', '-', '2', ':', '"User has gone before message sent."', ',', '-', '21', ':', '"Error when sending message!"', '}', 'if', '(', 'ret', 'in', 'errors', ')', ':', '5INDENT', 'elem', '=', 'self', '.', 'E', '.', 'message', '(', '{', "'from'", ':', 'to_jid', ',', "'to'", ':', 'from_jid', ',', "'type'", ':', "'error'", '}', ',', 'self', '.', 'E', '.', 'body', '(', 'errors', '[', 'ret', ']', ')', ')', 'self', '.', 'recv', '(', 'from_jid', ',', 'elem', ')', '6DEDENT', '6DEDENT', '6DEDENT', 'def', 'make_jid', '(', 'self', ',', 'userid', ')', ':', '5INDENT', 'return', '"%s@%s"', '%', '(', 'userid', ',', 'self', '.', '_hostname', ')', '6DEDENT', 'def', 'refresh', '(', 'self', ')', ':', '5INDENT', 'self', '.', '_userinfo', '.', 'freshtime', '=', 'int', '(', 'time', '.', 'time', '(', ')', ')', 'self', '.', '_userinfo', '.', 'save', '(', ')', '6DEDENT', 'def', 'ping_result', '(', 'self', ',', 'iq', ')', ':', '5INDENT', 'self', '.', 'refresh', '(', ')', '6DEDENT', 'def', 'ping_client', '(', 'self', ')', ':', '5INDENT', 'try', ':', '5INDENT', 'pingelem', '=', 'self', '.', 'E', '.', 'ping', '(', 'xmlns', '=', "'urn:xmpp:ping'", ')', 'return', 'self', '.', 'iq', '(', "'get'", ',', 'self', '.', 'ping_result', ',', 'pingelem', ')', '6DEDENT', 'except', 'Exception', 'as', 'e', ':', '5INDENT', 'Log', '.', 'debug', '(', '"ping client %r failed: %r"', '%', '(', 'self', '.', 'authJID', ',', 'e', ')', ')', 'Log', '.', 'debug', '(', 'traceback', '.', 'format_exc', '(', ')', ')', 'return', 'False', '6DEDENT', '6DEDENT', 'def', 'get_uid', '(', 'self', ')', ':', '5INDENT', 'return', 'self', '.', '_user', '.', 'GetUID', '(', ')', '6DEDENT', 'def', 'recv_msg', '(', 'self', ',', 'from_', ',', 'msgtext', ')', ':', '5INDENT', 'elem', '=', 'self', '.', 'E', '.', 'message', '(', '{', "'from'", ':', 'from_', ',', "'to'", ':', 'unicode', '(', 'self', '.', 'authJID', ')', '}', ',', 'self', '.', 'E', '.', 'body', '(', 'msgtext', ')', ')', 'self', '.', 'recv', '(', 'unicode', '(', 'self', '.', 'authJID', ')', ',', 'elem', ')', '6DEDENT', 'def', 'check_msg', '(', 'self', ')', ':', '5INDENT', 'Log', '.', 'debug', '(', '"checking msg for %s"', '%', 'self', '.', '_userid', ')', 'msgbox', '=', 'MsgBox', '.', 'MsgBox', '(', 'self', '.', '_userid', ')', 'msg_count', '=', 'msgbox', '.', 'GetMsgCount', '(', 'all', '=', 'False', ')', 'my_pid', '=', 'os', '.', 'getpid', '(', ')', 'xmpp_read', '=', 'self', '.', 'rosters', '.', 'get_xmpp_read', '(', 'self', '.', '_user', '.', 'GetUID', '(', ')', ')', 'if', 'xmpp_read', '>', 'msg_count', ':', '5INDENT', 'xmpp_read', '=', '0', '6DEDENT', 'Log', '.', 'debug', '(', '"total: %d xmpp read: %d"', '%', '(', 'msg_count', ',', 'xmpp_read', ')', ')', 'self', '.', 'rosters', '.', 'set_xmpp_read', '(', 'self', '.', '_user', '.', 'GetUID', '(', ')', ',', 'msg_count', ')', 'if', 'xmpp_read', '<', 'msg_count', ':', '5INDENT', 'return', 'xmpp_read', '6DEDENT', 'else', ':', '5INDENT', 'return', '-', '1', '6DEDENT', '6DEDENT', 'def', 'deliver_msg', '(', 'self', ',', 'start', ')', ':', '5INDENT', 'Log', '.', 'debug', '(', '"deliver msg to %s"', '%', 'unicode', '(', 'self', '.', 'authJID', ')', ')', 'msgbox', '=', 'MsgBox', '.', 'MsgBox', '(', 'self', '.', '_userid', ')', 'msg_count', '=', 'msgbox', '.', 'GetMsgCount', '(', 'all', '=', 'False', ')', 'my_pid', '=', 'os', '.', 'getpid', '(', ')', 'for', 'i', 'in', 'range', '(', 'start', ',', 'msg_count', ')', ':', '5INDENT', 'msghead', '=', 'msgbox', '.', 'LoadMsgHead', '(', 'i', ',', 'all', '=', 'False', ')', 'if', 'msghead', '.', 'topid', '==', 'my_pid', ':', '5INDENT', 'msgtext', '=', 'msgbox', '.', 'LoadMsgText', '(', 'msghead', ')', 'self', '.', 'recv_msg', '(', 'self', '.', 'make_jid', '(', 'msghead', '.', 'id', ')', ',', 'msgtext', ')', '6DEDENT', '6DEDENT', '6DEDENT', 'def', 'steal_msg', '(', 'self', ')', ':', '5INDENT', 'Log', '.', 'debug', '(', '"stealing msg for %s"', '%', 'self', '.', '_userid', ')', 'msgbox', '=', 'MsgBox', '.', 'MsgBox', '(', 'self', '.', '_userid', ')', 'msg_count', '=', 'msgbox', '.', 'GetMsgCount', '(', 'all', '=', 'False', ')', 'msg_unread', '=', 'msgbox', '.', 'GetUnreadCount', '(', ')', 'read_count', '=', 'msg_count', '-', 'msg_unread', 'my_pid', '=', 'os', '.', 'getpid', '(', ')', 'term_read', '=', 'self', '.', 'rosters', '.', 'get_term_read', '(', 'self', '.', 'get_uid', '(', ')', ')', 'term_stealed', '=', 'self', '.', 'rosters', '.', 'get_term_stealed', '(', 'self', '.', 'get_uid', '(', ')', ')', 'all_xmpp', '=', 'True', 'new_unread', '=', '{', '}', 'for', 'i', 'in', 'range', '(', 'read_count', '-', '1', ',', 'msg_count', ')', ':', '5INDENT', 'if', 'i', '<', '0', ':', '5INDENT', 'continue', '6DEDENT', 'msghead', '=', 'msgbox', '.', 'LoadMsgHead', '(', 'i', ',', 'all', '=', 'False', ')', 'if', 'i', '>=', 'read_count', 'and', 'all_xmpp', ':', '5INDENT', 'if', 'msghead', '.', 'topid', '==', 'my_pid', ':', '5INDENT', 'msgbox', '.', 'GetUnreadMsg', '(', ')', '6DEDENT', 'else', ':', '5INDENT', 'all_xmpp', '=', 'False', '6DEDENT', '6DEDENT', 'if', 'msghead', '.', 'topid', '==', 'my_pid', ':', '5INDENT', 'continue', '6DEDENT', 'if', 'i', '<', 'read_count', ':', '5INDENT', 'session', '=', 'self', '.', 'rosters', '.', 'find_session', '(', 'self', '.', 'authJID', '.', 'bare', ',', 'msghead', '.', 'topid', ')', 'if', 'session', 'is', 'None', 'or', 'session', '.', 'get_mode', '(', ')', '!=', 'modes', '.', 'MSG', ':', '5INDENT', 'continue', '6DEDENT', 'Log', '.', 'debug', '(', '"considered msg %d as unread"', '%', 'i', ')', '6DEDENT', 'if', 'msghead', '.', 'topid', 'not', 'in', 'new_unread', ':', '5INDENT', 'Log', '.', 'debug', '(', '"for pid %d, first unread at %d"', '%', '(', 'msghead', '.', 'topid', ',', 'i', ')', ')', 'new_unread', '[', 'msghead', '.', 'topid', ']', '=', 'i', '6DEDENT', '6DEDENT', 'final_unread', '=', '{', '}', 'to_steal', '=', '{', '}', 'to_steal_begin', '=', 'msg_count', 'for', 'pid', 'in', 'term_read', ':', '5INDENT', 'if', 'pid', 'in', 'new_unread', ':', '5INDENT', 'if', 'new_unread', '[', 'pid', ']', '==', 'term_read', '[', 'pid', ']', '[', '0', ']', ':', '5INDENT', 'final_unread', '[', 'pid', ']', '=', '(', 'term_read', '[', 'pid', ']', '[', '0', ']', ',', 'term_read', '[', 'pid', ']', '[', '1', ']', '+', '1', ')', 'Log', '.', 'debug', '(', '".. still unread: %d for %d, %d times"', '%', '(', 'new_unread', '[', 'pid', ']', ',', 'pid', ',', 'term_read', '[', 'pid', ']', '[', '1', ']', '+', '1', ')', ')', 'if', 'final_unread', '[', 'pid', ']', '[', '1', ']', '>', 'STEAL_AFTER_SEEN', ':', '5INDENT', 'to_steal', '[', 'pid', ']', '=', 'final_unread', '[', 'pid', ']', 'Log', '.', 'debug', '(', '".. let\'s steal! %d+ from %d"', '%', '(', 'to_steal', '[', 'pid', ']', '[', '0', ']', ',', 'pid', ')', ')', 'if', 'pid', 'in', 'term_stealed', ':', '5INDENT', 'steal_begin', '=', 'max', '(', 'final_unread', '[', 'pid', ']', '[', '0', ']', ',', 'term_stealed', '[', 'pid', ']', '+', '1', ')', '6DEDENT', 'else', ':', '5INDENT', 'steal_begin', '=', 'final_unread', '[', 'pid', ']', '[', '0', ']', '6DEDENT', 'if', 'steal_begin', '<', 'to_steal_begin', ':', '5INDENT', 'to_steal_begin', '=', 'steal_begin', '6DEDENT', '6DEDENT', '6DEDENT', 'else', ':', '5INDENT', 'final_unread', '[', 'pid', ']', '=', '(', 'new_unread', '[', 'pid', ']', ',', '1', ')', 'Log', '.', 'debug', '(', '".. moved: %d->%d for %d"', '%', '(', 'term_read', '[', 'pid', ']', '[', '0', ']', ',', 'new_unread', '[', 'pid', ']', ',', 'pid', ')', ')', '6DEDENT', '6DEDENT', 'else', ':', '5INDENT', 'Log', '.', 'debug', '(', '".. disappeared: %d"', '%', 'pid', ')', 'pass', '6DEDENT', '6DEDENT', 'for', 'pid', 'in', 'new_unread', ':', '5INDENT', 'if', 'pid', 'not', 'in', 'term_read', ':', '5INDENT', 'Log', '.', 'debug', '(', '".. new unread: %d for %d"', '%', '(', 'new_unread', '[', 'pid', ']', ',', 'pid', ')', ')', 'final_unread', '[', 'pid', ']', '=', '(', 'new_unread', '[', 'pid', ']', ',', '1', ')', '6DEDENT', '6DEDENT', 'if', 'to_steal', ':', '5INDENT', 'Log', '.', 'debug', '(', '"steal starting from %d"', '%', 'to_steal_begin', ')', 'for', 'i', 'in', 'range', '(', 'to_steal_begin', ',', 'msg_count', ')', ':', '5INDENT', 'msghead', '=', 'msgbox', '.', 'LoadMsgHead', '(', 'i', ',', 'all', '=', 'False', ')', 'if', 'msghead', '.', 'topid', '==', 'my_pid', ':', '5INDENT', 'Log', '.', 'debug', '(', '"skip xmpp %d for %d"', '%', '(', 'i', ',', 'msghead', '.', 'topid', ')', ')', 'msgbox', '.', 'GetUnreadMsg', '(', ')', '6DEDENT', 'elif', 'msghead', '.', 'topid', 'in', 'to_steal', ':', '5INDENT', 'if', 'msghead', '.', 'topid', 'not', 'in', 'term_stealed', 'or', 'i', '>', 'term_stealed', '[', 'msghead', '.', 'topid', ']', ':', '5INDENT', 'Log', '.', 'debug', '(', '"steal! %d from %d"', '%', '(', 'i', ',', 'msghead', '.', 'topid', ')', ')', 'msgtext', '=', 'msgbox', '.', 'LoadMsgText', '(', 'msghead', ')', 'self', '.', 'recv_msg', '(', 'self', '.', 'make_jid', '(', 'msghead', '.', 'id', ')', ',', 'msgtext', ')', 'term_stealed', '[', 'msghead', '.', 'topid', ']', '=', 'i', '6DEDENT', 'else', ':', '5INDENT', 'Log', '.', 'debug', '(', '"already stealed: %d from %d"', '%', '(', 'i', ',', 'msghead', '.', 'topid', ')', ')', '6DEDENT', '6DEDENT', '6DEDENT', '6DEDENT', 'self', '.', 'rosters', '.', 'set_term_read', '(', 'self', '.', 'get_uid', '(', ')', ',', 'final_unread', ')', '6DEDENT', '@', 'xmpp', '.', 'stanza', '(', "'presence'", ')', 'def', 'presence', '(', 'self', ',', 'elem', ')', ':', '5INDENT', '"""Presence information may be sent out from the client or\n        received from another account."""', 'Log', '.', 'warn', '(', '"handle presence. me: %r elem: %r"', '%', '(', 'self', '.', 'authJID', ',', 'elem_to_str', '(', 'elem', ')', ')', ')', 'if', 'self', '.', 'authJID', '==', 'elem', '.', 'get', '(', "'from'", ')', ':', '5INDENT', 'if', '(', 'elem', '.', 'get', '(', "'to'", ')', '==', 'None', 'or', '(', 'not', 'self', '.', 'authJID', '.', 'match_bare', '(', 'elem', '.', 'get', '(', "'to'", ')', ')', ')', ')', ':', '5INDENT', 'return', 'self', '.', 'send_presence', '(', 'elem', ')', '6DEDENT', '6DEDENT', 'self', '.', 'recv_presence', '(', 'elem', ')', '6DEDENT', 'def', 'send_presence', '(', 'self', ',', 'elem', ')', ':', '5INDENT', 'Log', '.', 'warn', '(', '"send_presence me: %r elem: %r"', '%', '(', 'self', '.', 'authJID', ',', 'elem_to_str', '(', 'elem', ')', ')', ')', 'direct', '=', 'elem', '.', 'get', '(', "'to'", ')', 'if', 'not', 'direct', ':', '5INDENT', 'self', '.', 'rosters', '.', 'broadcast', '(', 'self', ',', 'elem', ')', 'if', 'elem', '.', 'get', '(', "'type'", ')', '!=', "'probe'", ':', '5INDENT', 'self', '.', 'recv_presence', '(', 'elem', ')', '6DEDENT', 'if', 'not', 'self', '.', 'probed', ':', '5INDENT', 'self', '.', 'probed', '=', 'True', 'self', '.', 'rosters', '.', 'probe', '(', 'self', ')', '6DEDENT', '6DEDENT', 'elif', 'not', 'self', '.', 'rosters', '.', 'send', '(', 'self', ',', 'direct', ',', 'elem', ')', ':', '5INDENT', 'self', '.', 'send', '(', 'direct', ',', 'elem', ')', '6DEDENT', '6DEDENT', 'def', 'recv_presence', '(', 'self', ',', 'elem', ')', ':', '5INDENT', 'Log', '.', 'warn', '(', '"recv_presence me: %r elem: %r"', '%', '(', 'self', '.', 'authJID', ',', 'elem_to_str', '(', 'elem', ')', ')', ')', 'if', 'not', 'self', '.', 'rosters', '.', 'recv', '(', 'self', ',', 'elem', ')', ':', '5INDENT', 'Log', '.', 'warn', '(', '"\\tsending it to client"', ')', 'self', '.', 'write', '(', 'elem', ')', '6DEDENT', '6DEDENT', '@', 'xmpp', '.', 'iq', '(', "'{jabber:iq:roster}query'", ')', 'def', 'roster', '(', 'self', ',', 'iq', ')', ':', '5INDENT', '"""A roster is this account\'s list of contacts; it may be\n        fetched or updated."""', 'roster', '=', 'self', '.', 'rosters', '.', 'get', '(', 'self', ')', 'method', '=', 'getattr', '(', 'self', ',', "'%s_roster'", '%', 'iq', '.', 'get', '(', "'type'", ')', ')', 'return', 'method', 'and', 'method', '(', 'iq', ',', 'roster', ')', '6DEDENT', 'def', 'get_roster', '(', 'self', ',', 'iq', ',', 'roster', ')', ':', '5INDENT', 'query', '=', 'self', '.', 'E', '.', 'query', '(', '{', "'xmlns'", ':', "'jabber:iq:roster'", '}', ')', 'for', 'item', 'in', 'roster', '.', 'items', '(', ')', ':', '5INDENT', 'query', '.', 'append', '(', 'item', ')', '6DEDENT', 'return', 'self', '.', 'iq', '(', "'result'", ',', 'iq', ',', 'query', ')', '6DEDENT', 'def', 'set_roster', '(', 'self', ',', 'iq', ',', 'roster', ')', ':', '5INDENT', 'query', '=', 'self', '.', 'E', '.', 'query', '(', 'xmlns', '=', "'jabber:iq:roster'", ')', 'for', 'item', 'in', 'iq', '[', '0', ']', ':', '5INDENT', 'result', '=', 'roster', '.', 'set', '(', 'item', ')', 'if', 'result', 'is', 'not', 'None', ':', '5INDENT', 'query', '.', 'append', '(', 'result', ')', '6DEDENT', '6DEDENT', 'if', 'len', '(', 'query', ')', '>', '0', ':', '5INDENT', 'self', '.', 'push', '(', 'roster', ',', 'query', ')', '6DEDENT', 'return', 'self', '.', 'iq', '(', "'result'", ',', 'iq', ')', '6DEDENT', 'def', 'push', '(', 'self', ',', 'roster', ',', 'query', ')', ':', '5INDENT', '"""Push roster changes to all clients that have requested this\n        roster."""', 'for', 'jid', 'in', 'roster', '.', 'requests', '(', ')', ':', '5INDENT', 'for', '(', 'to', ',', 'route', ')', 'in', 'self', '.', 'routes', '(', 'jid', ')', ':', '5INDENT', 'route', '.', 'iq', '(', "'set'", ',', 'self', '.', 'ignore', ',', 'query', ')', '6DEDENT', '6DEDENT', '6DEDENT', 'def', 'ignore', '(', 'self', ',', 'iq', ')', ':', '5INDENT', '"""An IQ no-op."""', '6DEDENT', '@', 'xmpp', '.', 'iq', '(', "'{vcard-temp}vCard'", ')', 'def', 'vcard', '(', 'self', ',', 'iq', ')', ':', '5INDENT', '"""vCard support: the client requests its vCard after\n        establishing a session."""', 'if', 'iq', '.', 'get', '(', "'type'", ')', '==', "'get'", ':', '5INDENT', 'if', '(', 'iq', '.', 'get', '(', "'to'", ')', '==', 'None', ')', ':', '5INDENT', 'target', '=', 'iq', '.', 'get', '(', "'from'", ')', '6DEDENT', 'else', ':', '5INDENT', 'target', '=', 'iq', '.', 'get', '(', "'to'", ')', '6DEDENT', 'form_target', '=', 'UCache', '.', 'UCache', '.', 'formalize_jid', '(', 'target', ')', 'name', '=', 'form_target', '.', 'partition', '(', "'@'", ')', '[', '0', ']', 'user', '=', 'UserManager', '.', 'UserManager', '.', 'LoadUser', '(', 'name', ')', 'info', '=', 'user', '.', 'GetInfo', '(', ')', 'desc', '=', "'''\\r\nLogins: %d\\r\nPosts: %d\\r\nLast login: %s from %s\\r\nExperience: %d\\r\nPerformance: %d\\r\nLife: %d\\r\n'''", '%', '(', 'info', '[', "'numlogins'", ']', ',', 'info', '[', "'numposts'", ']', ',', 'info', '[', "'lastlogintime'", ']', ',', 'info', '[', "'lasthost'", ']', ',', 'info', '[', "'exp'", ']', ',', 'info', '[', "'perf'", ']', ',', 'info', '[', "'life'", ']', ')', 'if', '(', "'plan'", 'in', 'info', ')', ':', '5INDENT', 'desc', '+=', '"Plan:\\r%s"', '%', '(', 'info', '[', "'plan'", ']', '.', 'replace', '(', "'\\n'", ',', "'\\r\\n'", ')', ')', '6DEDENT', 'vcard', '=', 'self', '.', 'E', '.', 'vCard', '(', '{', "'xmlns'", ':', "'vcard-temp'", '}', ',', 'self', '.', 'E', '(', "'FN'", ',', 'name', ')', ',', 'self', '.', 'E', '(', "'NICKNAME'", ',', 'Util', '.', 'Util', '.', 'RemoveTags', '(', 'info', '[', "'nick'", ']', ')', ')', ',', 'self', '.', 'E', '(', "'DESC'", ',', 'Util', '.', 'Util', '.', 'RemoveTags', '(', 'desc', ')', ')', ')', 'if', '(', 'iq', '.', 'get', '(', "'to'", ')', '==', 'None', ')', ':', '5INDENT', 'return', 'self', '.', 'iq', '(', "'result'", ',', 'iq', ',', 'vcard', ')', '6DEDENT', 'else', ':', '5INDENT', 'return', 'self', '.', 'iq', '(', "'result'", ',', 'iq', ',', 'vcard', ',', '{', "'from'", ':', 'iq', '.', 'get', '(', "'to'", ')', '}', ')', '6DEDENT', '6DEDENT', '6DEDENT', '@', 'xmpp', '.', 'iq', '(', "'{%s}query'", '%', '__disco_info_ns__', ')', 'def', 'disco_info', '(', 'self', ',', 'iq', ')', ':', '5INDENT', '""" Service Discovery: disco#info """', 'target', '=', 'iq', '.', 'get', '(', "'to'", ')', 'if', '(', 'target', '.', 'find', '(', "'@'", ')', '<', '0', ')', ':', '5INDENT', 'query', '=', 'self', '.', 'E', '.', 'query', '(', '{', "'xmlns'", ':', '__disco_info_ns__', '}', ',', 'self', '.', 'E', '.', 'identity', '(', '{', "'category'", ':', "'server'", ',', "'type'", ':', "'im'", ',', "'name'", ':', 'Config', '.', 'Config', '.', 'GetString', '(', "'XMPP_SERVER_IDENTITY_NAME'", ',', "'BBS'", ')', ',', '}', ')', ')', 'features', '=', '[', '__disco_info_ns__', ',', '__disco_items_ns__', ',', '__vcard_ns__', ']', 'for', 'feature', 'in', 'features', ':', '5INDENT', 'query', '.', 'append', '(', 'self', '.', 'E', '.', 'feature', '(', '{', "'var'", ':', 'feature', '}', ')', ')', '6DEDENT', '6DEDENT', 'else', ':', '5INDENT', 'query', '=', 'self', '.', 'E', '.', 'query', '(', '{', "'xmlns'", ':', '__disco_info_ns__', '}', ',', 'self', '.', 'E', '.', 'identity', '(', '{', "'category'", ':', "'client'", ',', "'type'", ':', "'term'", ',', "'name'", ':', 'Config', '.', 'Config', '.', 'GetString', '(', "'XMPP_SERVER_IDENTITY_NAME'", ',', "'BBS'", ')', ',', '}', ')', ')', 'features', '=', '[', '__disco_info_ns__', ',', '__disco_items_ns__', ',', '__vcard_ns__', ']', 'for', 'feature', 'in', 'features', ':', '5INDENT', 'query', '.', 'append', '(', 'self', '.', 'E', '.', 'feature', '(', '{', "'var'", ':', 'feature', '}', ')', ')', '6DEDENT', '6DEDENT', 'return', 'self', '.', 'iq', '(', "'result'", ',', 'iq', ',', 'query', ',', '{', "'from'", ':', 'target', '}', ')', '6DEDENT', '@', 'xmpp', '.', 'iq', '(', "'{%s}query'", '%', '__disco_items_ns__', ')', 'def', 'disco_items', '(', 'self', ',', 'iq', ')', ':', '5INDENT', '""" Service Discovery: disco#items """', 'target', '=', 'iq', '.', 'get', '(', "'to'", ')', 'if', '(', 'target', '.', 'find', '(', "'@'", ')', '<', '0', ')', ':', '5INDENT', 'query', '=', 'self', '.', 'E', '.', 'query', '(', '{', "'xmlns'", ':', '__disco_items_ns__', '}', ')', '6DEDENT', 'else', ':', '5INDENT', 'query', '=', 'self', '.', 'E', '.', 'query', '(', '{', "'xmlns'", ':', '__disco_items_ns__', '}', ')', '6DEDENT', 'return', 'self', '.', 'iq', '(', "'result'", ',', 'iq', ',', 'query', ',', '{', "'from'", ':', 'target', '}', ')', '6DEDENT', '6DEDENT'], 'nodes': ['/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/HenryHu/pybbs/xmppserver.py', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/HenryHu/pybbs/PostEntry.py', 'PostEntry', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/HenryHu/pybbs/UtmpHead.py', 'UtmpHead', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/HenryHu/pybbs/xmpp/prelude.py', 'setattrs', 'first', 'filter', 'ifilter', 'izip', 'ichain', 'append', 'extend', 'keys', 'values', 'items', 'chain_items', 'setitems', 'get', 'update', 'setdefault', 'ipop', 'pop', 'thunk', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/HenryHu/pybbs/xmpp/aio.py', 'TCPServer', 'TCPClient', 'would_block', 'in_progress', 'starttls', 'is_ssl', 'SSLSocket', 'loop', 'start', '_KQueue', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/HenryHu/pybbs/xmpp/interfaces.py', 'Event', 'CoreInterface', 'PluginManager', 'StreamError', 'StanzaError', 'IQError', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/HenryHu/pybbs/xmpp/readstream.py', 'ReadStream', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/HenryHu/pybbs/xmpp/core.py', 'Core', 'SentOpenStream', 'SentCloseStream', 'ReceivedOpenStream', 'ReceivedCloseStream', 'StreamClosed', 'ClientCore', 'ServerCore', 'make_nonce', 'xmpp', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/HenryHu/pybbs/xmpp/__init__.py', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/HenryHu/pybbs/bbsauth.py', 'BBSAuth', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/HenryHu/pybbs/BCache.py', 'BoardHeader', 'BoardStatus', 'BCache', 'elem_to_str', 'XMPPServer', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/HenryHu/pybbs/UserMemo.py', 'UserMemo', 'UserMemoMgr', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/HenryHu/pybbs/mailbox.py', 'MailBox', 'Folder', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/HenryHu/pybbs/store.py', 'Store', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/HenryHu/pybbs/mail.py', 'Mail', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/HenryHu/pybbs/Auth.py', 'AuthRecord', 'AuthError', 'AuthClientError', 'Auth', 'RefreshTokens', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/HenryHu/pybbs/Session.py', 'Session', 'SessionManager', 'BasicSession', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/HenryHu/pybbs/errors.py', 'NoPerm', 'WrongArgs', 'NotFound', 'ServerError', 'OutOfRange', 'Unauthorized', 'error_handler', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/HenryHu/pybbs/SemLock.py', 'SemLock', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/HenryHu/pybbs/Config.py', 'Config', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/HenryHu/pybbs/xmppsvc.py', '__main__', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/HenryHu/pybbs/Msg.py', 'Msg', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/HenryHu/pybbs/Log.py', 'Log', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/HenryHu/pybbs/digest.py', 'DigestItem', 'Digest'], 'edges': [[2, 1], [4, 3], [5, 55], [6, 5], [7, 5], [8, 5], [9, 5], [10, 5], [11, 5], [12, 5], [13, 5], [14, 5], [15, 5], [16, 5], [17, 5], [18, 5], [19, 5], [20, 5], [21, 5], [22, 5], [23, 5], [24, 5], [25, 55], [26, 25], [27, 25], [28, 25], [29, 25], [30, 25], [31, 25], [32, 25], [33, 25], [34, 25], [35, 25], [36, 55], [37, 36], [38, 36], [39, 36], [40, 36], [41, 36], [42, 36], [43, 55], [44, 43], [45, 55], [46, 45], [47, 45], [48, 45], [49, 45], [50, 45], [51, 45], [52, 45], [53, 45], [54, 45], [56, 55], [58, 57], [60, 59], [61, 59], [62, 59], [63, 0], [64, 0], [66, 65], [67, 65], [69, 68], [70, 68], [72, 71], [74, 73], [76, 75], [77, 75], [78, 75], [79, 75], [80, 75], [82, 81], [83, 81], [84, 81], [86, 85], [87, 85], [88, 85], [89, 85], [90, 85], [91, 85], [92, 85], [94, 93], [96, 95], [98, 97], [100, 99], [102, 101], [104, 103], [105, 103], [95, 1], [0, 97], [55, 97], [95, 97], [57, 97], [102, 97], [64, 98], [58, 98], [95, 99], [102, 99], [85, 71], [95, 71], [85, 73], [68, 73], [85, 103], [95, 103], [104, 103], [102, 103], [95, 3], [85, 75], [95, 75], [82, 75], [37, 47], [37, 48], [37, 49], [37, 50], [37, 51], [46, 52], [46, 53], [17, 6], [10, 10], [16, 14], [16, 15], [16, 17], [11, 17], [85, 59], [95, 59], [102, 59], [17, 18], [17, 21], [55, 0], [95, 0], [82, 0], [102, 0], [33, 30], [32, 30], [85, 81], [95, 81], [102, 81], [35, 33], [33, 34], [85, 65], [95, 65], [41, 42], [25, 43], [102, 85], [95, 93], [102, 95], [1, 68], [85, 68], [95, 68], [36, 45], [38, 46]], 'crossEdges': [[63, 49], [64, 73]]}
{'path': 'data/IDSIA/brainstorm/brainstorm/layers/batch_normalization_layer.py', 'tokens': ['from', '__future__', 'import', 'division', ',', 'print_function', ',', 'unicode_literals', 'from', 'collections', 'import', 'OrderedDict', 'from', 'brainstorm', '.', 'layers', '.', 'base_layer', 'import', 'Layer', 'from', 'brainstorm', '.', 'structure', '.', 'buffer_structure', 'import', '(', 'BufferStructure', ',', 'StructureTemplate', ')', 'from', 'brainstorm', '.', 'structure', '.', 'construction', 'import', 'ConstructionWrapper', 'from', 'brainstorm', '.', 'utils', 'import', 'flatten_all_but_last', 'def', 'BatchNorm', '(', 'name', '=', 'None', ',', 'decay', '=', '0.9', ',', 'epsilon', '=', '1.0e-5', ')', ':', '5INDENT', '"""Create a BatchNormalization layer.\n\n    This layer implements batch normalization over the last (right-most)\n    dimension. Thus, it can be use with both fully connected and convolutional\n    layers (but only with data in NHWC format).\n    """', 'return', 'ConstructionWrapper', '.', 'create', '(', 'BatchNormLayerImpl', ',', 'name', '=', 'name', ',', 'decay', '=', 'decay', ',', 'epsilon', '=', 'epsilon', ')', '6DEDENT', 'class', 'BatchNormLayerImpl', '(', 'Layer', ')', ':', '5INDENT', 'expected_inputs', '=', '{', "'default'", ':', 'StructureTemplate', '(', "'T'", ',', "'B'", ',', "'...'", ')', '}', 'expected_kwargs', '=', '{', "'decay'", ',', "'epsilon'", '}', 'def', 'setup', '(', 'self', ',', 'kwargs', ',', 'in_shapes', ')', ':', '5INDENT', 'self', '.', 'epsilon', '=', 'kwargs', '.', 'get', '(', "'epsilon'", ',', '1.0e-5', ')', 'self', '.', 'decay', '=', 'kwargs', '.', 'get', '(', "'decay'", ',', '0.9', ')', 'assert', '0.0', '<=', 'self', '.', 'decay', '<=', '1.0', ',', '"Decay must be between 0 and 1."', 'outputs', '=', 'OrderedDict', '(', ')', 'outputs', '[', "'default'", ']', '=', 'in_shapes', '[', "'default'", ']', 'parameters', '=', 'OrderedDict', '(', ')', 'buf', '=', 'BufferStructure', '(', 'self', '.', 'in_shapes', '[', "'default'", ']', '.', 'feature_shape', '[', '-', '1', ']', ')', 'parameters', '[', "'gamma'", ']', '=', 'buf', 'parameters', '[', "'beta'", ']', '=', 'buf', 'parameters', '[', "'mu'", ']', '=', 'buf', 'parameters', '[', "'sigma'", ']', '=', 'buf', 'internals', '=', 'OrderedDict', '(', ')', 'internals', '[', "'sigma_b'", ']', '=', 'buf', 'internals', '[', "'centered'", ']', '=', 'self', '.', 'in_shapes', '[', "'default'", ']', 'internals', '[', "'x_hat'", ']', '=', 'self', '.', 'in_shapes', '[', "'default'", ']', 'return', 'outputs', ',', 'parameters', ',', 'internals', '6DEDENT', 'def', 'forward_pass', '(', 'self', ',', 'buffers', ',', 'training_pass', '=', 'True', ')', ':', '5INDENT', '_h', '=', 'self', '.', 'handler', 'sigma_b', ',', 'centered', ',', 'x_hat', '=', 'buffers', '.', 'internals', 'gamma', ',', 'beta', ',', 'mu', ',', 'sigma', '=', 'buffers', '.', 'parameters', 'inputs', '=', 'flatten_all_but_last', '(', 'buffers', '.', 'inputs', '.', 'default', ')', 'centered', '=', 'flatten_all_but_last', '(', 'centered', ')', 'x_hat', '=', 'flatten_all_but_last', '(', 'x_hat', ')', 'out', '=', 'flatten_all_but_last', '(', 'buffers', '.', 'outputs', '.', 'default', ')', 'm', '=', 'inputs', '.', 'shape', '[', '0', ']', 'if', 'training_pass', ':', '5INDENT', 'mu_b', '=', 'sigma_b', '_h', '.', 'sum_t', '(', 'inputs', ',', '0', ',', 'mu_b', ')', '_h', '.', 'mult_st', '(', '-', '1.0', '/', 'm', ',', 'mu_b', ',', 'mu_b', ')', '_h', '.', 'mult_st', '(', 'self', '.', 'decay', ',', 'mu', ',', 'mu', ')', '_h', '.', 'mult_add_st', '(', '1.0', '-', 'self', '.', 'decay', ',', 'mu_b', ',', 'mu', ')', 'mu', '=', 'mu_b', '6DEDENT', '_h', '.', 'add_mv', '(', 'inputs', ',', 'mu', '.', 'reshape', '(', '(', '1', ',', 'mu', '.', 'size', ')', ')', ',', 'centered', ')', 'if', 'training_pass', ':', '5INDENT', 'sigma2', '=', 'sigma_b', 'centered2', '=', 'x_hat', '_h', '.', 'mult_tt', '(', 'centered', ',', 'centered', ',', 'centered2', ')', '_h', '.', 'sum_t', '(', 'centered2', ',', '0', ',', 'sigma2', ')', '_h', '.', 'mult_st', '(', '1.0', '/', 'm', ',', 'sigma2', ',', 'sigma2', ')', '_h', '.', 'add_st', '(', 'self', '.', 'epsilon', ',', 'sigma2', ',', 'sigma2', ')', '_h', '.', 'sqrt_t', '(', 'sigma2', ',', 'sigma_b', ')', '_h', '.', 'mult_st', '(', 'self', '.', 'decay', ',', 'sigma', ',', 'sigma', ')', '_h', '.', 'mult_add_st', '(', '1.0', '-', 'self', '.', 'decay', ',', 'sigma_b', ',', 'sigma', ')', 'sigma', '=', 'sigma_b', '6DEDENT', '_h', '.', 'divide_mv', '(', 'centered', ',', 'sigma', '.', 'reshape', '(', '(', '1', ',', 'sigma', '.', 'size', ')', ')', ',', 'x_hat', ')', '_h', '.', 'mult_mv', '(', 'x_hat', ',', 'gamma', '.', 'reshape', '(', '(', '1', ',', 'gamma', '.', 'size', ')', ')', ',', 'out', ')', '_h', '.', 'add_mv', '(', 'out', ',', 'beta', '.', 'reshape', '(', '(', '1', ',', 'beta', '.', 'size', ')', ')', ',', 'out', ')', '6DEDENT', 'def', 'backward_pass', '(', 'self', ',', 'buffers', ')', ':', '5INDENT', '_h', '=', 'self', '.', 'handler', 'sigma_b', ',', 'centered', ',', 'x_hat', '=', 'buffers', '.', 'internals', 'gamma', '=', 'buffers', '.', 'parameters', '.', 'gamma', 'dgamma', '=', 'buffers', '.', 'gradients', '.', 'gamma', 'dbeta', '=', 'buffers', '.', 'gradients', '.', 'beta', 'x_hat', '=', 'flatten_all_but_last', '(', 'x_hat', ')', 'outdeltas', '=', 'flatten_all_but_last', '(', 'buffers', '.', 'output_deltas', '.', 'default', ')', 'indeltas', '=', 'flatten_all_but_last', '(', 'buffers', '.', 'input_deltas', '.', 'default', ')', 'm', '=', 'outdeltas', '.', 'shape', '[', '0', ']', 'big_tmp', '=', '_h', '.', 'allocate', '(', 'x_hat', '.', 'shape', ')', 'small_tmp', '=', '_h', '.', 'allocate', '(', 'gamma', '.', 'shape', ')', 'tmp', '=', 'big_tmp', 'dgamma_tmp', '=', 'small_tmp', '_h', '.', 'mult_tt', '(', 'outdeltas', ',', 'x_hat', ',', 'tmp', ')', '_h', '.', 'sum_t', '(', 'tmp', ',', 'axis', '=', '0', ',', 'out', '=', 'dgamma_tmp', ')', '_h', '.', 'add_tt', '(', 'dgamma_tmp', ',', 'dgamma', ',', 'dgamma', ')', '_h', '.', 'mult_st', '(', '1', '/', 'm', ',', 'dgamma_tmp', ',', 'dgamma_tmp', ')', 'term1', '=', 'big_tmp', '_h', '.', 'mult_mv', '(', 'x_hat', ',', 'dgamma_tmp', '.', 'reshape', '(', '(', '1', ',', 'gamma', '.', 'size', ')', ')', ',', 'term1', ')', 'dbeta_tmp', '=', 'small_tmp', '_h', '.', 'sum_t', '(', 'outdeltas', ',', 'axis', '=', '0', ',', 'out', '=', 'dbeta_tmp', ')', '_h', '.', 'add_tt', '(', 'dbeta_tmp', ',', 'dbeta', ',', 'dbeta', ')', '_h', '.', 'mult_st', '(', '1', '/', 'm', ',', 'dbeta_tmp', ',', 'dbeta_tmp', ')', 'term2', '=', 'big_tmp', 'term3', '=', 'big_tmp', '_h', '.', 'subtract_tt', '(', 'outdeltas', ',', 'term1', ',', 'term2', ')', '_h', '.', 'subtract_mv', '(', 'term2', ',', 'dbeta_tmp', '.', 'reshape', '(', '(', '1', ',', 'dbeta', '.', 'size', ')', ')', ',', 'term3', ')', 'coeff', '=', 'small_tmp', '_h', '.', 'divide_tt', '(', 'gamma', ',', 'sigma_b', ',', 'coeff', ')', 'term4', '=', 'big_tmp', '_h', '.', 'mult_mv', '(', 'term3', ',', 'coeff', '.', 'reshape', '(', '(', '1', ',', 'coeff', '.', 'size', ')', ')', ',', 'term4', ')', '_h', '.', 'add_tt', '(', 'term4', ',', 'indeltas', ',', 'indeltas', ')', '6DEDENT', '6DEDENT'], 'nodes': ['/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/IDSIA/brainstorm/brainstorm/layers/batch_normalization_layer.py', 'BatchNorm', 'BatchNormLayerImpl'], 'edges': [[1, 0], [2, 0], [2, 1]], 'crossEdges': [[1, 47], [2, 85]]}
{'path': 'data/IDSIA/brainstorm/brainstorm/scorers.py', 'tokens': ['from', '__future__', 'import', 'division', ',', 'print_function', ',', 'unicode_literals', 'from', 'collections', 'import', 'OrderedDict', 'import', 'numpy', 'as', 'np', 'from', 'brainstorm', '.', 'describable', 'import', 'Describable', 'class', 'Scorer', '(', 'Describable', ')', ':', '5INDENT', 'def', '__init__', '(', 'self', ',', 'out_name', '=', "''", ',', 'targets_name', '=', "'targets'", ',', 'mask_name', '=', "''", ',', 'name', '=', 'None', ')', ':', '5INDENT', 'self', '.', 'out_name', '=', 'out_name', 'self', '.', 'targets_name', '=', 'targets_name', 'self', '.', 'mask_name', '=', 'mask_name', 'self', '.', '__name__', '=', 'name', 'if', 'name', 'is', 'not', 'None', 'else', 'self', '.', '__class__', '.', '__name__', '6DEDENT', 'def', '__call__', '(', 'self', ',', 'true_labels', ',', 'predicted', ',', 'mask', '=', 'None', ')', ':', '5INDENT', 'pass', '6DEDENT', '@', 'staticmethod', 'def', 'aggregate', '(', 'errors', ')', ':', '5INDENT', 'errors', '=', 'np', '.', 'array', '(', 'errors', ')', 'assert', 'errors', '.', 'ndim', '==', '2', 'and', 'errors', '.', 'shape', '[', '1', ']', '==', '2', 'return', 'np', '.', 'sum', '(', 'errors', '[', ':', ',', '1', ']', ')', '/', 'np', '.', 'sum', '(', 'errors', '[', ':', ',', '0', ']', ')', '6DEDENT', '6DEDENT', 'def', 'gather_losses_and_scores', '(', 'net', ',', 'scorers', ',', 'scores', ',', 'out_name', '=', "''", ',', 'targets_name', '=', "'targets'", ',', 'mask_name', '=', "''", ')', ':', '5INDENT', 'ls', '=', 'net', '.', 'get_loss_values', '(', ')', 'for', 'name', ',', 'loss', 'in', 'ls', '.', 'items', '(', ')', ':', '5INDENT', 'scores', '[', 'name', ']', '.', 'append', '(', '(', 'net', '.', '_buffer_manager', '.', 'batch_size', ',', 'loss', ')', ')', '6DEDENT', 'for', 'sc', 'in', 'scorers', ':', '5INDENT', 'name', '=', 'sc', '.', '__name__', 'predicted', '=', 'net', '.', 'get', '(', 'sc', '.', 'out_name', 'or', 'out_name', 'or', 'net', '.', 'output_name', ')', 'true_labels', '=', 'net', '.', 'get_input', '(', 'sc', '.', 'targets_name', ')', 'if', 'sc', '.', 'targets_name', 'else', 'net', '.', 'get_input', '(', 'targets_name', ')', 'mask', '=', 'net', '.', 'get_input', '(', 'sc', '.', 'mask_name', ')', 'if', 'sc', '.', 'mask_name', 'else', '(', 'net', '.', 'get_input', '(', 'mask_name', ')', 'if', 'mask_name', 'else', 'None', ')', 'predicted', '=', '_flatten_all_but_last', '(', 'predicted', ')', 'true_labels', '=', '_flatten_all_but_last', '(', 'true_labels', ')', 'mask', '=', '_flatten_all_but_last', '(', 'mask', ')', 'weight', '=', 'mask', '.', 'sum', '(', ')', 'if', 'mask', 'is', 'not', 'None', 'else', 'predicted', '.', 'shape', '[', '0', ']', 'scores', '[', 'name', ']', '.', 'append', '(', '(', 'weight', ',', 'sc', '(', 'true_labels', ',', 'predicted', ',', 'mask', ')', ')', ')', '6DEDENT', '6DEDENT', 'def', 'aggregate_losses_and_scores', '(', 'scores', ',', 'net', ',', 'scorers', ')', ':', '5INDENT', 'results', '=', 'OrderedDict', '(', ')', 'for', 'name', 'in', 'net', '.', 'get_loss_values', '(', ')', ':', '5INDENT', 'results', '[', 'name', ']', '=', '_weighted_average', '(', 'scores', '[', 'name', ']', ')', '6DEDENT', 'for', 'sc', 'in', 'scorers', ':', '5INDENT', 'results', '[', 'sc', '.', '__name__', ']', '=', 'sc', '.', 'aggregate', '(', 'scores', '[', 'sc', '.', '__name__', ']', ')', '6DEDENT', 'return', 'results', '6DEDENT', 'class', 'Accuracy', '(', 'Scorer', ')', ':', '5INDENT', 'def', '__call__', '(', 'self', ',', 'true_labels', ',', 'predicted', ',', 'mask', '=', 'None', ')', ':', '5INDENT', 'if', 'predicted', '.', 'shape', '[', '1', ']', '>', '1', ':', '5INDENT', 'predicted', '=', 'predicted', '.', 'argmax', '(', '1', ')', '.', 'reshape', '(', '-', '1', ',', '1', ')', '6DEDENT', 'correct', '=', '(', 'predicted', '==', 'true_labels', ')', '.', 'astype', '(', 'np', '.', 'float', ')', 'if', 'mask', 'is', 'not', 'None', ':', '5INDENT', 'correct', '*=', 'mask', '6DEDENT', 'return', 'np', '.', 'sum', '(', 'correct', ')', '6DEDENT', '6DEDENT', 'class', 'Hamming', '(', 'Scorer', ')', ':', '5INDENT', 'def', '__init__', '(', 'self', ',', 'threshold', '=', '0.5', ',', 'out_name', '=', "''", ',', 'targets_name', '=', "'targets'", ',', 'mask_name', '=', "''", ',', 'name', '=', 'None', ')', ':', '5INDENT', 'super', '(', 'Hamming', ',', 'self', ')', '.', '__init__', '(', 'out_name', ',', 'targets_name', ',', 'mask_name', ',', 'name', ')', 'self', '.', 'threshold', '=', 'threshold', '6DEDENT', 'def', '__call__', '(', 'self', ',', 'true_labels', ',', 'predicted', ',', 'mask', '=', 'None', ')', ':', '5INDENT', 'correct', '=', 'np', '.', 'logical_xor', '(', 'predicted', '<', 'self', '.', 'threshold', ',', 'true_labels', ')', '.', 'astype', '(', 'np', '.', 'float', ')', 'if', 'mask', 'is', 'not', 'None', ':', '5INDENT', 'correct', '*=', 'mask', '6DEDENT', 'return', 'np', '.', 'sum', '(', 'correct', ')', '/', 'true_labels', '.', 'shape', '[', '1', ']', '6DEDENT', '6DEDENT', 'class', 'MeanSquaredError', '(', 'Scorer', ')', ':', '5INDENT', 'def', '__call__', '(', 'self', ',', 'true_labels', ',', 'predicted', ',', 'mask', '=', 'None', ')', ':', '5INDENT', 'errors', '=', '(', 'true_labels', '-', 'predicted', ')', '**', '2', 'if', 'mask', 'is', 'not', 'None', ':', '5INDENT', 'errors', '*=', 'mask', '6DEDENT', 'return', '0.5', '*', 'np', '.', 'sum', '(', 'errors', ')', '6DEDENT', '6DEDENT', 'def', '_flatten_all_but_last', '(', 'a', ')', ':', '5INDENT', 'if', 'a', 'is', 'None', ':', '5INDENT', 'return', 'None', '6DEDENT', 'return', 'a', '.', 'reshape', '(', '-', '1', ',', 'a', '.', 'shape', '[', '-', '1', ']', ')', '6DEDENT', 'def', '_weighted_average', '(', 'errors', ')', ':', '5INDENT', 'errors', '=', 'np', '.', 'array', '(', 'errors', ')', 'assert', 'errors', '.', 'ndim', '==', '2', 'and', 'errors', '.', 'shape', '[', '1', ']', '==', '2', 'return', 'np', '.', 'sum', '(', 'errors', '[', ':', ',', '1', ']', '*', 'errors', '[', ':', ',', '0', ']', '/', 'np', '.', 'sum', '(', 'errors', '[', ':', ',', '0', ']', ')', ')', '6DEDENT'], 'nodes': ['/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/IDSIA/brainstorm/brainstorm/scorers.py', 'Scorer', 'gather_losses_and_scores', 'aggregate_losses_and_scores', 'Accuracy', 'Hamming', 'MeanSquaredError', '_flatten_all_but_last', '_weighted_average'], 'edges': [[1, 0], [2, 0], [3, 0], [4, 0], [5, 0], [6, 0], [7, 0], [8, 0], [7, 2], [8, 3], [1, 4], [1, 5], [1, 6]], 'crossEdges': [[1, 23], [2, 160], [3, 354], [4, 421], [5, 505], [6, 625], [7, 678], [8, 711]]}
{'path': 'data/IDSIA/brainstorm/brainstorm/tests/test_schedules.py', 'tokens': ['from', '__future__', 'import', 'division', ',', 'print_function', ',', 'unicode_literals', 'import', 'pytest', 'import', 'six', 'from', 'brainstorm', '.', 'training', '.', 'schedules', 'import', 'Exponential', ',', 'Linear', ',', 'MultiStep', 'def', 'test_linear', '(', ')', ':', '5INDENT', 'sch', '=', 'Linear', '(', 'initial_value', '=', '1.0', ',', 'final_value', '=', '0.5', ',', 'num_changes', '=', '5', ')', 'epochs', '=', '[', '0', ']', '*', '2', '+', '[', '1', ']', '*', '2', '+', '[', '2', ']', '*', '2', '+', '[', '3', ']', '*', '2', '+', '[', '4', ']', '*', '2', 'updates', '=', 'range', '(', '10', ')', 'values', '=', '[', 'sch', '(', 'epoch', ',', 'update', ',', "'epoch'", ',', '1', ',', 'None', ',', 'None', ',', 'None', ')', 'for', 'epoch', ',', 'update', 'in', 'six', '.', 'moves', '.', 'zip', '(', 'epochs', ',', 'updates', ')', ']', 'assert', 'values', '==', '[', '1.0', ',', '1.0', ',', '0.9', ',', '0.9', ',', '0.8', ',', '0.8', ',', '0.7', ',', '0.7', ',', '0.6', ',', '0.6', ']', 'values', '=', '[', 'sch', '(', 'epoch', ',', 'update', ',', "'update'", ',', '1', ',', 'None', ',', 'None', ',', 'None', ')', 'for', 'epoch', ',', 'update', 'in', 'six', '.', 'moves', '.', 'zip', '(', 'epochs', ',', 'updates', ')', ']', 'assert', 'values', '==', '[', '1.0', ',', '0.9', ',', '0.8', ',', '0.7', ',', '0.6', ',', '0.5', ',', '0.5', ',', '0.5', ',', '0.5', ',', '0.5', ']', 'values', '=', '[', 'sch', '(', 'epoch', ',', 'update', ',', "'update'", ',', '3', ',', 'None', ',', 'None', ',', 'None', ')', 'for', 'epoch', ',', 'update', 'in', 'six', '.', 'moves', '.', 'zip', '(', 'epochs', ',', 'updates', ')', ']', 'assert', 'values', '==', '[', '1.0', ',', '1.0', ',', '1.0', ',', '0.9', ',', '0.9', ',', '0.9', ',', '0.8', ',', '0.8', ',', '0.8', ',', '0.7', ']', '6DEDENT', 'def', 'test_exponential', '(', ')', ':', '5INDENT', 'sch', '=', 'Exponential', '(', 'initial_value', '=', '1.0', ',', 'factor', '=', '0.99', ',', 'minimum', '=', '0.97', ')', 'epochs', '=', '[', '0', ']', '*', '4', '+', '[', '1', ']', '*', '4', '+', '[', '2', ']', '*', '4', 'updates', '=', 'range', '(', '12', ')', 'values', '=', '[', 'sch', '(', 'epoch', ',', 'update', ',', "'epoch'", ',', '1', ',', 'None', ',', 'None', ',', 'None', ')', 'for', 'epoch', ',', 'update', 'in', 'six', '.', 'moves', '.', 'zip', '(', 'epochs', ',', 'updates', ')', ']', 'assert', 'values', '==', '[', '1.0', ']', '*', '4', '+', '[', '0.99', ']', '*', '4', '+', '[', '0.99', '*', '0.99', ']', '*', '4', 'values', '=', '[', 'sch', '(', 'epoch', ',', 'update', ',', "'update'", ',', '1', ',', 'None', ',', 'None', ',', 'None', ')', 'for', 'epoch', ',', 'update', 'in', 'six', '.', 'moves', '.', 'zip', '(', 'epochs', ',', 'updates', ')', ']', 'assert', 'values', '==', '[', '1.0', '*', '(', '0.99', '**', 'x', ')', 'for', 'x', 'in', 'range', '(', '4', ')', ']', '+', '[', '0.97', ']', '*', '8', 'values', '=', '[', 'sch', '(', 'epoch', ',', 'update', ',', "'update'", ',', '3', ',', 'None', ',', 'None', ',', 'None', ')', 'for', 'epoch', ',', 'update', 'in', 'six', '.', 'moves', '.', 'zip', '(', 'epochs', ',', 'updates', ')', ']', 'assert', 'values', '==', '[', '1.0', ']', '*', '3', '+', '[', '0.99', ']', '*', '3', '+', '[', '0.9801', ']', '*', '3', '+', '[', '0.99', '**', '3', ']', '*', '3', '6DEDENT', 'def', 'test_multistep', '(', ')', ':', '5INDENT', 'sch', '=', 'MultiStep', '(', 'initial_value', '=', '1.0', ',', 'steps', '=', '[', '3', ',', '5', ',', '8', ']', ',', 'values', '=', '[', '0.1', ',', '0.01', ',', '0.001', ']', ')', 'epochs', '=', '[', '0', ']', '*', '2', '+', '[', '1', ']', '*', '2', '+', '[', '2', ']', '*', '2', '+', '[', '3', ']', '*', '2', '+', '[', '4', ']', '*', '2', 'updates', '=', 'range', '(', '10', ')', 'values', '=', '[', 'sch', '(', 'epoch', ',', 'update', ',', "'epoch'", ',', '1', ',', 'None', ',', 'None', ',', 'None', ')', 'for', 'epoch', ',', 'update', 'in', 'six', '.', 'moves', '.', 'zip', '(', 'epochs', ',', 'updates', ')', ']', 'assert', 'values', '==', '[', '1.0', ',', '1.0', ',', '1.0', ',', '1.0', ',', '1.0', ',', '1.0', ',', '0.1', ',', '0.1', ',', '0.1', ',', '0.1', ']', 'values', '=', '[', 'sch', '(', 'epoch', ',', 'update', ',', "'update'", ',', '1', ',', 'None', ',', 'None', ',', 'None', ')', 'for', 'epoch', ',', 'update', 'in', 'six', '.', 'moves', '.', 'zip', '(', 'epochs', ',', 'updates', ')', ']', 'assert', 'values', '==', '[', '1.0', ',', '1.0', ',', '1.0', ',', '0.1', ',', '0.1', ',', '0.01', ',', '0.01', ',', '0.01', ',', '0.001', ',', '0.001', ']', 'with', 'pytest', '.', 'raises', '(', 'AssertionError', ')', ':', '5INDENT', '_', '=', 'sch', '(', '0', ',', '0', ',', "'update'", ',', '3', ',', 'None', ',', 'None', ',', 'None', ')', '6DEDENT', '6DEDENT'], 'nodes': ['/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/IDSIA/brainstorm/brainstorm/tests/test_schedules.py', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/IDSIA/brainstorm/brainstorm/tests/test_weight_modifiers.py', 'test_limit_incoming_weights_squared', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/IDSIA/brainstorm/brainstorm/tests/test_layers.py', 'noop_layer', 'loss_layer', 'fully_connected_layer', 'fully_connected_layer_2d', 'highway_layer', 'squared_difference_layer', 'squared_error_layer', 'binomial_crossentropy_layer', 'softmax_ce_layer', 'sigmoid_ce_layer', 'rnn_layer', 'rnn_layer_2d', 'lstm_layer', 'lstm_layer_2d', 'mask_layer', 'convolution_layer_2d', 'convolution_layer_2d_a', 'convolution_layer_2d_b', 'convolution_layer_2d_c', 'maxpooling_layer_2d', 'avgpooling_layer_2d', 'batch_norm_layer_fc', 'batch_norm_layer_nhwc', 'elementwise_layer', 'l1_decay_layer', 'l2_decay_layer', 'clockwork_layer', 'clockwork_layer_2d', 'clockwork_lstm_layer', 'clockwork_lstm_layer_2d', 'merge', 'spec', 'layer_specs', 'test_deltas_calculation_of_layer', 'test_gradients_for_layer', 'test_layer_forward_pass_insensitive_to_internal_state_init', 'test_layer_backward_pass_insensitive_to_internal_state_init', 'test_layer_add_to_deltas', 'test_elementwise_act_func_gradients', 'test_get_layer_class_from_typename', 'test_get_layer_class_from_typename_raises_typeerror', 'test_layer_constructor', 'test_nooplayer_raises_on_size_mismatch', 'test_inputlayer_raises_on_in_size', 'test_raises_on_unexpected_kwargs', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/IDSIA/brainstorm/brainstorm/tests/test_scorers.py', 'accuracy', 'hamming', 'mean_squared_error', 'scorer_test_case', 'test_scorer_with_different_batchsizes', 'test_scorer_with_mask', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/IDSIA/brainstorm/brainstorm/tests/test_handler_operations.py', '_conv2d_forward_batch', 'test_conv2d_forward_batch_numpy', 'test_conv2d_forward_batch_pycuda', 'test_linear', 'test_exponential', 'test_multistep', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/IDSIA/brainstorm/brainstorm/tests/test_handlers_against_reference.py', 'operation_check', 'get_args_from_ref_args', 'get_random_arrays', 'test_sum_t', 'test_dot_mm', 'test_dot_add_mm', 'test_mult_tt', 'test_mult_add_tt', 'test_mult_st', 'test_mult_add_st', 'test_add_tt', 'test_add_st', 'test_subtract_tt', 'test_subtract_mv', 'test_add_mv', 'test_broadcast_t', 'test_clip_t', 'test_log_t', 'test_sqrt_t', 'test_abs_t', 'test_sign_t', 'test_divide_tt', 'test_divide_mv', 'test_mult_mv', 'test_binarize_v', 'test_index_m_by_v', 'test_sigmoid', 'test_sigmoid_deriv', 'test_tanh', 'test_tanh_deriv', 'test_rel', 'test_rel_deriv', 'test_el', 'test_el_deriv', 'test_conv2d_forward', 'test_conv2d_backward', 'test_maxpool2d_forward', 'test_maxpool2d_backward', 'test_avgpool2d_forward', 'test_avgpool2d_backward', 'test_softmax_m', 'test_merge_tt', 'test_split_add_tt', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/IDSIA/brainstorm/brainstorm/tests/test_data_iterators.py', 'test_flip_dict_mismatch_raises', 'test_flip', 'test_pad_dict_mismatch_raises', 'test_pad', 'test_random_crop_dict_mismatch_raises', 'test_random_crop', 'test_crop_images_operation', 'test_non5d_data_raises', 'test_data_iterator_with_wrong_input_type_raises', 'test_data_iterator_with_wrong_targets_type_raises', 'test_data_iterator_with_wrong_input_dim_raises', 'test_data_iterator_with_input_target_shape_mismatch_raises', 'test_data_iterator_with_shape_mismatch_among_targets_raises', 'test_undivided_default', 'test_undivided_named_targets', 'test_online_default', 'test_minibatch_default', 'test_minibatch_with_mask', 'test_minibatch_with_length', 'test_calculate_lengths_from_mask', 'tests', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/IDSIA/brainstorm/brainstorm/tests/__init__.py', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/IDSIA/brainstorm/brainstorm/tests/test_utils.py', 'test_get_inheritors', 'test_flatten', 'test_convert_to_nested_indices', 'test_flatten_time', 'test_flatten_time_and_features', 'test_flatten_keys', 'test_progress_bar'], 'edges': [[1, 128], [2, 1], [3, 128], [4, 3], [5, 3], [6, 3], [7, 3], [8, 3], [9, 3], [10, 3], [11, 3], [12, 3], [13, 3], [14, 3], [15, 3], [16, 3], [17, 3], [18, 3], [19, 3], [20, 3], [21, 3], [22, 3], [23, 3], [24, 3], [25, 3], [26, 3], [27, 3], [28, 3], [29, 3], [30, 3], [31, 3], [32, 3], [33, 3], [34, 3], [35, 3], [36, 3], [37, 3], [38, 3], [39, 3], [40, 3], [41, 3], [42, 3], [43, 3], [44, 3], [45, 3], [46, 3], [47, 3], [48, 3], [49, 128], [50, 49], [51, 49], [52, 49], [53, 49], [54, 49], [55, 49], [56, 128], [57, 56], [58, 56], [59, 56], [0, 128], [60, 0], [61, 0], [62, 0], [63, 128], [64, 63], [65, 63], [66, 63], [67, 63], [68, 63], [69, 63], [70, 63], [71, 63], [72, 63], [73, 63], [74, 63], [75, 63], [76, 63], [77, 63], [78, 63], [79, 63], [80, 63], [81, 63], [82, 63], [83, 63], [84, 63], [85, 63], [86, 63], [87, 63], [88, 63], [89, 63], [90, 63], [91, 63], [92, 63], [93, 63], [94, 63], [95, 63], [96, 63], [97, 63], [98, 63], [99, 63], [100, 63], [101, 63], [102, 63], [103, 63], [104, 63], [105, 63], [106, 63], [107, 128], [108, 107], [109, 107], [110, 107], [111, 107], [112, 107], [113, 107], [114, 107], [115, 107], [116, 107], [117, 107], [118, 107], [119, 107], [120, 107], [121, 107], [122, 107], [123, 107], [124, 107], [125, 107], [126, 107], [127, 107], [129, 128], [130, 128], [131, 130], [132, 130], [133, 130], [134, 130], [135, 130], [136, 130], [137, 130], [19, 20], [19, 21], [19, 22], [57, 58], [57, 59], [65, 64], [66, 67], [64, 67], [66, 68], [64, 68], [66, 69], [64, 69], [66, 70], [64, 70], [66, 71], [64, 71], [66, 72], [64, 72], [66, 73], [64, 73], [66, 74], [64, 74], [66, 75], [64, 75], [66, 76], [64, 76], [66, 77], [64, 77], [66, 78], [64, 78], [66, 79], [64, 79], [66, 80], [64, 80], [66, 81], [64, 81], [66, 82], [64, 82], [66, 83], [64, 83], [66, 84], [64, 84], [66, 85], [64, 85], [66, 86], [64, 86], [66, 87], [64, 87], [64, 88], [66, 89], [64, 89], [66, 90], [64, 90], [66, 91], [64, 91], [66, 92], [64, 92], [66, 93], [64, 93], [66, 94], [64, 94], [66, 95], [64, 95], [66, 96], [64, 96], [66, 97], [64, 97], [64, 98], [66, 98], [64, 99], [66, 99], [64, 100], [66, 100], [64, 101], [66, 101], [64, 102], [66, 102], [64, 103], [66, 103], [66, 104], [64, 104], [64, 105], [64, 106]], 'crossEdges': [[60, 25], [61, 262], [62, 490]]}
{'path': 'data/IDSIA/brainstorm/docs/conf.py', 'tokens': ['import', 'os', 'import', 'sys', 'try', ':', '5INDENT', 'from', 'unittest', '.', 'mock', 'import', 'MagicMock', '6DEDENT', 'except', 'ImportError', ':', '5INDENT', 'from', 'mock', 'import', 'Mock', 'as', 'MagicMock', '6DEDENT', 'class', 'Mock', '(', 'MagicMock', ')', ':', '5INDENT', '@', 'classmethod', 'def', '__getattr__', '(', 'cls', ',', 'name', ')', ':', '5INDENT', 'return', 'Mock', '(', ')', '6DEDENT', '6DEDENT', 'MOCK_MODULES', '=', '[', "'h5py'", ',', "'brainstorm.handlers._cpuop'", ']', 'sys', '.', 'modules', '.', 'update', '(', '(', 'mod_name', ',', 'Mock', '(', ')', ')', 'for', 'mod_name', 'in', 'MOCK_MODULES', ')', 'cwd', '=', 'os', '.', 'getcwd', '(', ')', 'parent', '=', 'os', '.', 'path', '.', 'dirname', '(', 'cwd', ')', 'sys', '.', 'path', '.', 'insert', '(', '0', ',', 'parent', ')', 'import', 'brainstorm', 'extensions', '=', '[', "'sphinx.ext.autodoc'", ',', "'sphinx.ext.viewcode'", ',', "'sphinx.ext.napoleon'", ']', 'templates_path', '=', '[', "'_templates'", ']', 'source_suffix', '=', "'.rst'", 'master_doc', '=', "'index'", 'project', '=', "u'brainstorm'", 'copyright', '=', "u'2015, IDSIA'", 'version', '=', 'brainstorm', '.', '__version__', 'release', '=', 'brainstorm', '.', '__version__', 'exclude_patterns', '=', '[', "'_build'", ']', 'pygments_style', '=', "'sphinx'", 'on_rtd', '=', 'os', '.', 'environ', '.', 'get', '(', "'READTHEDOCS'", ',', 'None', ')', '==', "'True'", 'if', 'not', 'on_rtd', ':', '5INDENT', 'try', ':', '5INDENT', 'import', 'sphinx_rtd_theme', 'html_theme', '=', "'sphinx_rtd_theme'", 'html_theme_path', '=', '[', 'sphinx_rtd_theme', '.', 'get_html_theme_path', '(', ')', ']', '6DEDENT', 'except', 'ImportError', ':', '5INDENT', 'html_theme', '=', "'alabaster'", '6DEDENT', '6DEDENT', 'html_static_path', '=', '[', "'_static'", ']', 'htmlhelp_basename', '=', "'brainstormdoc'", 'latex_elements', '=', '{', '}', 'latex_documents', '=', '[', '(', "'index'", ',', "'brainstorm.tex'", ',', "u'brainstorm Documentation'", ',', "u'Klaus Greff'", ',', "'manual'", ')', ',', ']', 'man_pages', '=', '[', '(', "'index'", ',', "'brainstorm'", ',', "u'brainstorm Documentation'", ',', '[', "u'Klaus Greff'", ']', ',', '1', ')', ']', 'texinfo_documents', '=', '[', '(', "'index'", ',', "'brainstorm'", ',', "u'brainstorm Documentation'", ',', "u'Klaus Greff'", ',', "'brainstorm'", ',', "'One line description of project.'", ',', "'Miscellaneous'", ')', ',', ']'], 'nodes': ['/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/IDSIA/brainstorm/docs/conf.py', 'Mock'], 'edges': [[1, 0], [1, 0]], 'crossEdges': [[1, 26]]}
{'path': 'data/IDSIA/sacred/sacred/config/config_summary.py', 'tokens': ['from', '__future__', 'import', 'division', ',', 'print_function', ',', 'unicode_literals', 'from', 'sacred', '.', 'utils', 'import', 'iter_prefixes', ',', 'join_paths', 'class', 'ConfigSummary', '(', 'dict', ')', ':', '5INDENT', 'def', '__init__', '(', 'self', ',', 'added', '=', '(', ')', ',', 'modified', '=', '(', ')', ',', 'typechanged', '=', '(', ')', ',', 'ignored_fallbacks', '=', '(', ')', ')', ':', '5INDENT', 'super', '(', 'ConfigSummary', ',', 'self', ')', '.', '__init__', '(', ')', 'self', '.', 'added', '=', 'set', '(', 'added', ')', 'self', '.', 'modified', '=', 'set', '(', 'modified', ')', 'self', '.', 'typechanged', '=', 'dict', '(', 'typechanged', ')', 'self', '.', 'ignored_fallbacks', '=', 'set', '(', 'ignored_fallbacks', ')', 'self', '.', 'ensure_coherence', '(', ')', '6DEDENT', 'def', 'update_from', '(', 'self', ',', 'config_mod', ',', 'path', '=', "''", ')', ':', '5INDENT', 'added', '=', 'config_mod', '.', 'added', 'updated', '=', 'config_mod', '.', 'modified', 'typechanged', '=', 'config_mod', '.', 'typechanged', 'self', '.', 'added', '&=', '{', 'join_paths', '(', 'path', ',', 'a', ')', 'for', 'a', 'in', 'added', '}', 'self', '.', 'modified', '|=', '{', 'join_paths', '(', 'path', ',', 'u', ')', 'for', 'u', 'in', 'updated', '}', 'self', '.', 'typechanged', '.', 'update', '(', '{', 'join_paths', '(', 'path', ',', 'k', ')', ':', 'v', 'for', 'k', ',', 'v', 'in', 'typechanged', '.', 'items', '(', ')', '}', ')', 'self', '.', 'ensure_coherence', '(', ')', '6DEDENT', 'def', 'update_add', '(', 'self', ',', 'config_mod', ',', 'path', '=', "''", ')', ':', '5INDENT', 'added', '=', 'config_mod', '.', 'added', 'updated', '=', 'config_mod', '.', 'modified', 'typechanged', '=', 'config_mod', '.', 'typechanged', 'self', '.', 'added', '|=', '{', 'join_paths', '(', 'path', ',', 'a', ')', 'for', 'a', 'in', 'added', '}', 'self', '.', 'modified', '|=', '{', 'join_paths', '(', 'path', ',', 'u', ')', 'for', 'u', 'in', 'updated', '}', 'self', '.', 'typechanged', '.', 'update', '(', '{', 'join_paths', '(', 'path', ',', 'k', ')', ':', 'v', 'for', 'k', ',', 'v', 'in', 'typechanged', '.', 'items', '(', ')', '}', ')', 'self', '.', 'ensure_coherence', '(', ')', '6DEDENT', 'def', 'ensure_coherence', '(', 'self', ')', ':', '5INDENT', 'self', '.', 'modified', '|=', '{', 'p', 'for', 'a', 'in', 'self', '.', 'added', 'for', 'p', 'in', 'iter_prefixes', '(', 'a', ')', '}', 'self', '.', 'modified', '|=', '{', 'p', 'for', 'u', 'in', 'self', '.', 'modified', 'for', 'p', 'in', 'iter_prefixes', '(', 'u', ')', '}', 'self', '.', 'modified', '|=', '{', 'p', 'for', 't', 'in', 'self', '.', 'typechanged', 'for', 'p', 'in', 'iter_prefixes', '(', 't', ')', '}', 'self', '.', 'added', '-=', 'set', '(', 'self', '.', 'typechanged', '.', 'keys', '(', ')', ')', 'self', '.', 'modified', '-=', 'set', '(', 'self', '.', 'typechanged', '.', 'keys', '(', ')', ')', 'self', '.', 'modified', '-=', 'self', '.', 'added', '6DEDENT', '6DEDENT'], 'nodes': ['/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/IDSIA/sacred/sacred/config/config_summary.py', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/IDSIA/sacred/tests/test_examples.py', 'notest_example', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/IDSIA/sacred/tests/test_arg_parser.py', 'test_parse_individual_arguments', 'test_parse_compound_arglist1', 'test_parse_compound_arglist2', 'test_get_config_updates', 'test_convert_value', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/IDSIA/sacred/tests/test_optional.py', 'test_missing_dependency_mock_raises_on_access', 'test_missing_dependency_mock_raises_on_call', 'test_optional_import', 'test_optional_import_nonexisting', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/IDSIA/sacred/tests/test_commands.py', 'test_non_unicode_repr', 'cfg', 'test_iterate_marked', 'test_iterate_marked_added', 'test_iterate_marked_updated', 'test_iterate_marked_typechanged', 'test_format_entry', 'test_format_entry_colors', 'test_format_config', 'test_help_for_command', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/IDSIA/sacred/tests/test_run.py', 'run', 'test_run_attributes', 'test_run_state_attributes', 'test_run_run', 'test_run_emits_events_if_successful', 'test_run_emits_events_if_interrupted', 'test_run_emits_events_if_failed', 'test_run_started_event', 'test_run_completed_event', 'test_run_heartbeat_event', 'test_run_artifact_event', 'test_run_resource_event', 'test_run_cannot_be_started_twice', 'test_run_observer_failure_on_startup_not_caught', 'test_run_observer_error_in_heartbeat_is_caught', 'test_run_exception_in_heartbeat_is_not_caught', 'test_run_exception_in_completed_event_is_caught', 'test_run_exception_in_interrupted_event_is_caught', 'test_run_exception_in_failed_event_is_caught', 'test_unobserved_run_doesnt_emit', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/IDSIA/sacred/tests/conftest.py', 'get_calls_from_doc', 'pytest_generate_tests', 'foo', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/IDSIA/sacred/tests/foo/__init__.py', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/IDSIA/sacred/tests/dependency_example.py', 'some_func', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/IDSIA/sacred/tests/test_experiment.py', 'ex', 'test_main', 'test_automain_imported', 'test_automain_script_runs_main', 'test_fails_on_unused_config_updates', 'test_fails_on_nested_unused_config_updates', 'test_considers_captured_functions_for_fail_on_unused_config', 'test_used_prefix_for_fail_on_unused_config', 'test_using_a_named_config', 'tests', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/IDSIA/sacred/tests/__init__.py', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/IDSIA/sacred/tests/test_utils.py', 'test_recursive_update', 'test_iterate_flattened_separately', 'test_iterate_flattened', 'test_set_by_dotted_path', 'test_set_by_dotted_path_creates_missing_dicts', 'test_get_by_dotted_path', 'test_iter_path_splits', 'test_iter_prefixes', 'test_join_paths', 'test_is_prefix', 'test_convert_to_nested_dict', 'test_convert_to_nested_dict_nested', 'test_is_subdirectory', 'test_get_inheritors', 'test_convert_camel_case_to_snake_case', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/IDSIA/sacred/sacred/config/signature.py', 'Signature', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/IDSIA/sacred/sacred/config/captured_function.py', 'create_captured_function', 'captured_function', 'ConfigSummary', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/IDSIA/sacred/sacred/config/config_dict.py', 'ConfigDict', 'config', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/IDSIA/sacred/sacred/config/__init__.py', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/IDSIA/sacred/sacred/arg_parser.py', 'parse_args', 'get_config_updates', '_format_options_usage', '_format_arguments_usage', '_format_command_usage', '_format_usage', '_get_first_line_of_docstring', '_convert_value', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/IDSIA/sacred/sacred/commandline_options.py', 'CommandLineOption', 'gather_command_line_options', 'HelpOption', 'DebugOption', 'PDBOption', 'LoglevelOption', 'CommentOption', 'BeatIntervalOption', 'UnobservedOption', 'ForceOption', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/IDSIA/sacred/sacred/observers/mongo.py', 'NumpyArraysToList', 'PandasToJson', 'force_valid_bson_key', 'force_bson_encodeable', 'MongoObserver', 'MongoDbOption', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/IDSIA/sacred/sacred/host_info.py', 'get_host_info', '_get_processor_name', 'sacred', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/IDSIA/sacred/sacred/__init__.py', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/IDSIA/sacred/sacred/__about__.py', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/IDSIA/sacred/setup.py'], 'edges': [[1, 63], [2, 1], [3, 63], [4, 3], [5, 3], [6, 3], [7, 3], [8, 3], [9, 63], [10, 9], [11, 9], [12, 9], [13, 9], [14, 63], [15, 14], [16, 14], [17, 14], [18, 14], [19, 14], [20, 14], [21, 14], [22, 14], [23, 14], [24, 14], [25, 63], [26, 25], [27, 25], [28, 25], [29, 25], [30, 25], [31, 25], [32, 25], [33, 25], [34, 25], [35, 25], [36, 25], [37, 25], [38, 25], [39, 25], [40, 25], [41, 25], [42, 25], [43, 25], [44, 25], [45, 25], [46, 63], [47, 46], [48, 46], [49, 63], [50, 49], [51, 63], [52, 51], [53, 63], [54, 53], [55, 53], [56, 53], [57, 53], [58, 53], [59, 53], [60, 53], [61, 53], [62, 53], [64, 63], [65, 63], [66, 65], [67, 65], [68, 65], [69, 65], [70, 65], [71, 65], [72, 65], [73, 65], [74, 65], [75, 65], [76, 65], [77, 65], [78, 65], [79, 65], [80, 65], [81, 89], [82, 81], [83, 89], [84, 83], [85, 83], [0, 89], [86, 0], [87, 89], [88, 87], [89, 121], [90, 89], [91, 121], [92, 91], [93, 91], [94, 91], [95, 91], [96, 91], [97, 91], [98, 91], [99, 91], [100, 121], [101, 100], [102, 100], [103, 100], [104, 100], [105, 100], [106, 100], [107, 100], [108, 100], [109, 100], [110, 100], [112, 111], [113, 111], [114, 111], [115, 111], [116, 111], [117, 111], [118, 121], [119, 118], [120, 118], [122, 121], [123, 121], [86, 87], [92, 3], [99, 3], [93, 3], [92, 4], [92, 5], [88, 90], [84, 90], [102, 91], [92, 6], [120, 119], [97, 92], [102, 92], [93, 7], [99, 8], [99, 93], [86, 14], [86, 17], [86, 18], [98, 96], [86, 19], [86, 20], [96, 97], [94, 97], [95, 97], [86, 23], [86, 25], [86, 26], [123, 124], [101, 102], [101, 103], [86, 27], [101, 104], [101, 105], [101, 106], [101, 107], [101, 108], [101, 109], [101, 110], [47, 48], [101, 111], [112, 111], [113, 111], [114, 115], [115, 115], [82, 83], [85, 84], [82, 84]], 'crossEdges': [[86, 17]]}
{'path': 'data/IDSIA/sacred/tests/test_config/test_config_dict.py', 'tokens': ['from', '__future__', 'import', 'division', ',', 'print_function', ',', 'unicode_literals', 'import', 'pytest', 'import', 'sacred', '.', 'optional', 'as', 'opt', 'from', 'sacred', '.', 'config', 'import', 'ConfigDict', 'from', 'sacred', '.', 'config', '.', 'custom_containers', 'import', 'DogmaticDict', ',', 'DogmaticList', '@', 'pytest', '.', 'fixture', 'def', 'conf_dict', '(', ')', ':', '5INDENT', 'cfg', '=', 'ConfigDict', '(', '{', '"a"', ':', '1', ',', '"b"', ':', '2.0', ',', '"c"', ':', 'True', ',', '"d"', ':', "'string'", ',', '"e"', ':', '[', '1', ',', '2', ',', '3', ']', ',', '"f"', ':', '{', "'a'", ':', "'b'", ',', "'c'", ':', "'d'", '}', ',', '}', ')', 'return', 'cfg', '6DEDENT', 'def', 'test_config_dict_returns_dict', '(', 'conf_dict', ')', ':', '5INDENT', 'assert', 'isinstance', '(', 'conf_dict', '(', ')', ',', 'dict', ')', '6DEDENT', 'def', 'test_config_dict_result_contains_keys', '(', 'conf_dict', ')', ':', '5INDENT', 'cfg', '=', 'conf_dict', '(', ')', 'assert', 'set', '(', 'cfg', '.', 'keys', '(', ')', ')', '==', '{', "'a'", ',', "'b'", ',', "'c'", ',', "'d'", ',', "'e'", ',', "'f'", '}', 'assert', 'cfg', '[', "'a'", ']', '==', '1', 'assert', 'cfg', '[', "'b'", ']', '==', '2.0', 'assert', 'cfg', '[', "'c'", ']', 'assert', 'cfg', '[', "'d'", ']', '==', "'string'", 'assert', 'cfg', '[', "'e'", ']', '==', '[', '1', ',', '2', ',', '3', ']', 'assert', 'cfg', '[', "'f'", ']', '==', '{', "'a'", ':', "'b'", ',', "'c'", ':', "'d'", '}', '6DEDENT', 'def', 'test_fixing_values', '(', 'conf_dict', ')', ':', '5INDENT', 'assert', 'conf_dict', '(', '{', "'a'", ':', '100', '}', ')', '[', "'a'", ']', '==', '100', '6DEDENT', '@', 'pytest', '.', 'mark', '.', 'parametrize', '(', '"key"', ',', '[', '"_underscore"', ',', '"white space"', ',', '12', ',', '"12"', ',', '"$f"', ']', ')', 'def', 'test_config_dict_raises_on_invalid_keys', '(', 'key', ')', ':', '5INDENT', 'with', 'pytest', '.', 'raises', '(', 'KeyError', ')', ':', '5INDENT', 'ConfigDict', '(', '{', 'key', ':', 'True', '}', ')', '6DEDENT', '6DEDENT', '@', 'pytest', '.', 'mark', '.', 'parametrize', '(', '"value"', ',', '[', 'lambda', 'x', ':', 'x', ',', 'pytest', ',', 'test_fixing_values', ']', ')', 'def', 'test_config_dict_raises_on_invalid_values', '(', 'value', ')', ':', '5INDENT', 'with', 'pytest', '.', 'raises', '(', 'ValueError', ')', ':', '5INDENT', 'ConfigDict', '(', '{', '"invalid"', ':', 'value', '}', ')', '6DEDENT', '6DEDENT', 'def', 'test_fixing_nested_dicts', '(', 'conf_dict', ')', ':', '5INDENT', 'cfg', '=', 'conf_dict', '(', '{', "'f'", ':', '{', "'c'", ':', "'t'", '}', '}', ')', 'assert', 'cfg', '[', "'f'", ']', '[', "'a'", ']', '==', "'b'", 'assert', 'cfg', '[', "'f'", ']', '[', "'c'", ']', '==', "'t'", '6DEDENT', 'def', 'test_adding_values', '(', 'conf_dict', ')', ':', '5INDENT', 'cfg', '=', 'conf_dict', '(', '{', "'g'", ':', '23', ',', "'h'", ':', '{', "'i'", ':', '10', '}', '}', ')', 'assert', 'cfg', '[', "'g'", ']', '==', '23', 'assert', 'cfg', '[', "'h'", ']', '==', '{', "'i'", ':', '10', '}', 'assert', 'cfg', '.', 'added', '==', '{', "'g'", ',', "'h'", ',', "'h.i'", '}', '6DEDENT', 'def', 'test_typechange', '(', 'conf_dict', ')', ':', '5INDENT', 'cfg', '=', 'conf_dict', '(', '{', "'a'", ':', "'bar'", ',', "'b'", ':', "'foo'", ',', "'c'", ':', '1', '}', ')', 'assert', 'cfg', '.', 'typechanged', '==', '{', "'a'", ':', '(', 'int', ',', 'type', '(', "'bar'", ')', ')', ',', "'b'", ':', '(', 'float', ',', 'type', '(', "'foo'", ')', ')', ',', "'c'", ':', '(', 'bool', ',', 'int', ')', '}', '6DEDENT', 'def', 'test_nested_typechange', '(', 'conf_dict', ')', ':', '5INDENT', 'cfg', '=', 'conf_dict', '(', '{', "'f'", ':', '{', "'a'", ':', '10', '}', '}', ')', 'assert', 'cfg', '.', 'typechanged', '==', '{', "'f.a'", ':', '(', 'type', '(', "'a'", ')', ',', 'int', ')', '}', '6DEDENT', 'def', 'is_dogmatic', '(', 'a', ')', ':', '5INDENT', 'if', 'isinstance', '(', 'a', ',', '(', 'DogmaticDict', ',', 'DogmaticList', ')', ')', ':', '5INDENT', 'return', 'True', '6DEDENT', 'elif', 'isinstance', '(', 'a', ',', 'dict', ')', ':', '5INDENT', 'return', 'any', '(', 'is_dogmatic', '(', 'v', ')', 'for', 'v', 'in', 'a', '.', 'values', '(', ')', ')', '6DEDENT', 'elif', 'isinstance', '(', 'a', ',', '(', 'list', ',', 'tuple', ')', ')', ':', '5INDENT', 'return', 'any', '(', 'is_dogmatic', '(', 'v', ')', 'for', 'v', 'in', 'a', ')', '6DEDENT', '6DEDENT', 'def', 'test_result_of_conf_dict_is_not_dogmatic', '(', 'conf_dict', ')', ':', '5INDENT', 'cfg', '=', 'conf_dict', '(', '{', "'e'", ':', '[', '1', ',', '1', ',', '1', ']', '}', ')', 'assert', 'not', 'is_dogmatic', '(', 'cfg', ')', '6DEDENT', '@', 'pytest', '.', 'mark', '.', 'skipif', '(', 'not', 'opt', '.', 'has_numpy', ',', 'reason', '=', '"requires numpy"', ')', 'def', 'test_conf_scope_handles_numpy_bools', '(', ')', ':', '5INDENT', 'cfg', '=', 'ConfigDict', '(', '{', '"a"', ':', 'opt', '.', 'np', '.', 'bool_', '(', '1', ')', '}', ')', 'assert', "'a'", 'in', 'cfg', '(', ')', 'assert', 'cfg', '(', ')', '[', "'a'", ']', '6DEDENT', 'def', 'test_conf_scope_contains_presets', '(', ')', ':', '5INDENT', 'conf_dict', '=', 'ConfigDict', '(', '{', '"answer"', ':', '42', '}', ')', 'cfg', '=', 'conf_dict', '(', 'preset', '=', '{', "'a'", ':', '21', ',', "'unrelated'", ':', 'True', '}', ')', 'assert', 'set', '(', 'cfg', '.', 'keys', '(', ')', ')', '==', '{', "'a'", ',', "'answer'", ',', "'unrelated'", '}', 'assert', 'cfg', '[', "'a'", ']', '==', '21', 'assert', 'cfg', '[', "'answer'", ']', '==', '42', 'assert', 'cfg', '[', "'unrelated'", ']', 'is', 'True', '6DEDENT', 'def', 'test_conf_scope_does_not_contain_fallback', '(', ')', ':', '5INDENT', 'config_dict', '=', 'ConfigDict', '(', '{', '"answer"', ':', '42', '}', ')', 'cfg', '=', 'config_dict', '(', 'fallback', '=', '{', "'a'", ':', '21', ',', "'b'", ':', '10', '}', ')', 'assert', 'set', '(', 'cfg', '.', 'keys', '(', ')', ')', '==', '{', "'answer'", '}', '6DEDENT', 'def', 'test_fixed_subentry_of_preset', '(', ')', ':', '5INDENT', 'config_dict', '=', 'ConfigDict', '(', '{', '}', ')', 'cfg', '=', 'config_dict', '(', 'preset', '=', '{', "'d'", ':', '{', "'a'", ':', '1', ',', "'b'", ':', '2', '}', '}', ',', 'fixed', '=', '{', "'d'", ':', '{', "'a'", ':', '10', '}', '}', ')', 'assert', 'set', '(', 'cfg', '.', 'keys', '(', ')', ')', '==', '{', "'d'", '}', 'assert', 'set', '(', 'cfg', '[', "'d'", ']', '.', 'keys', '(', ')', ')', '==', '{', "'a'", ',', "'b'", '}', 'assert', 'cfg', '[', "'d'", ']', '[', "'a'", ']', '==', '10', 'assert', 'cfg', '[', "'d'", ']', '[', "'b'", ']', '==', '2', '6DEDENT'], 'nodes': ['/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/IDSIA/sacred/tests/test_config/test_config_dict.py', 'conf_dict', 'test_config_dict_returns_dict', 'test_config_dict_result_contains_keys', 'test_fixing_values', 'test_config_dict_raises_on_invalid_keys', 'test_config_dict_raises_on_invalid_values', 'test_fixing_nested_dicts', 'test_adding_values', 'test_typechange', 'test_nested_typechange', 'is_dogmatic', 'test_result_of_conf_dict_is_not_dogmatic', 'test_conf_scope_handles_numpy_bools', 'test_conf_scope_contains_presets', 'test_conf_scope_does_not_contain_fallback', 'test_fixed_subentry_of_preset'], 'edges': [[1, 0], [2, 0], [3, 0], [4, 0], [5, 0], [6, 0], [7, 0], [8, 0], [9, 0], [10, 0], [11, 0], [12, 0], [13, 0], [14, 0], [15, 0], [16, 0], [11, 11], [11, 12]], 'crossEdges': [[1, 37], [2, 91], [3, 108], [4, 198], [5, 241], [6, 287], [7, 313], [8, 355], [9, 411], [10, 473], [11, 512], [12, 588], [13, 634], [14, 671], [15, 742], [16, 788]]}
{'path': 'data/IEEERobotics/bot/bot/follower/pid.py', 'tokens': ['class', 'PID', '(', 'object', ')', ':', '5INDENT', 'def', '__init__', '(', 'self', ')', ':', '5INDENT', '"""initizes value for the PID"""', 'self', '.', 'kd', '=', '0', 'self', '.', 'ki', '=', '0', 'self', '.', 'kp', '=', '1', 'self', '.', 'previous_error', '=', '0', 'self', '.', 'integral_error', '=', '0', '6DEDENT', 'def', 'set_k_values', '(', 'self', ',', 'kp', ',', 'kd', ',', 'ki', ')', ':', '5INDENT', 'self', '.', 'kp', '=', 'kp', 'self', '.', 'ki', '=', 'ki', 'self', '.', 'kd', '=', 'kd', '6DEDENT', 'def', 'clear_error', '(', 'self', ')', ':', '5INDENT', 'self', '.', 'previous_error', '=', '0', 'self', '.', 'integeral_error', '=', '0', '6DEDENT', 'def', 'pid', '(', 'self', ',', 'target', ',', 'process_var', ',', 'timestep', ')', ':', '5INDENT', 'current_error', '=', '(', 'target', '-', 'process_var', ')', 'p_error', '=', 'self', '.', 'kp', '*', 'current_error', 'd_error', '=', 'self', '.', 'kd', '*', '(', 'current_error', '-', 'self', '.', 'previous_error', ')', '/', 'timestep', 'self', '.', 'integral_error', '=', '(', 'current_error', '+', 'self', '.', 'previous_error', ')', '/', '2', '+', 'self', '.', 'integral_error', 'i_error', '=', 'self', '.', 'ki', '*', 'self', '.', 'integral_error', 'total_error', '=', 'p_error', '+', 'd_error', '+', 'i_error', 'self', '.', 'previous_error', '=', 'current_error', 'return', 'total_error', '6DEDENT', '6DEDENT'], 'nodes': ['/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/IEEERobotics/bot/bot/follower/pid.py', 'PID'], 'edges': [[1, 0]], 'crossEdges': [[1, 1]]}
{'path': 'data/IEEERobotics/bot/bot/interface/cli.py', 'tokens': ['"""Send commands to the bot through a CLI interface."""', 'import', 'cmd', 'import', 'sys', 'import', 'os', 'import', 'bot', '.', 'client', '.', 'ctrl_client', 'as', 'ctrl_client_mod', 'import', 'bot', '.', 'client', '.', 'sub_client', 'as', 'sub_client_mod', 'class', 'CLI', '(', 'cmd', '.', 'Cmd', ')', ':', '5INDENT', '"""CLI for interacting with the bot.\n\n    Note that the architecture is that interfaces, like the Command\n    Line *Interface*, are used by agents like humans to interact\n    with the bot. For interfaces to communicate with the bot, they\n    own clients (like CtrlClient and SubClient), which know how to\n    speak ZMQ to the servers (like CtrlServer and PubServer) running on\n    the bot. Servers own systems (like gunner and driver) and known how\n    to fire commands off to those systems and/or share data about their\n    state.\n\n    """', 'prompt', '=', '"bot$ "', 'def', '__init__', '(', 'self', ',', 'ctrl_addr', ',', 'sub_addr', ')', ':', '5INDENT', '"""Build CtrlClient and SubClient, for connections to servers.\n\n        We\'re not using a logger or config here to reduce dependencies.\n\n        CtrlClient is used for sending commands to the bot. Some commands,\n        like `ping`, are answered by CtrlClient directly. Others, like\n        `fire`, are actually exported methods that CtrlClient exposes\n        via the API. Those calls are passed to the relevant method of a\n        system owned by CtrlClient.\n\n        SubClient manages subscriptions to topics published by PubServer\n        on the bot. Topics can be subscribed to via `sub_add` and removed\n        via `sub_del`. To print the data being published, use `sub`.\n        Only topics that are actually subscribed to by one or more clients\n        will be published by PubServer, saving bot resources. Note that\n        PubServer isn\'t spawned by default when CtrlServer is created.\n        To spawn it (in its own thread), issue `ctrl spawn_pub_server`.\n\n        :param ctrl_addr: Address of control server to connect to via ZMQ.\n        :type ctrl_addr: string\n        :param sub_addr: Address of PUB/SUB server to connect to via ZMQ.\n        :type sub_addr: string\n\n        """', 'cmd', '.', 'Cmd', '.', '__init__', '(', 'self', ')', 'try', ':', '5INDENT', 'self', '.', 'ctrl_client', '=', 'ctrl_client_mod', '.', 'CtrlClient', '(', 'ctrl_addr', ')', '6DEDENT', 'except', 'Exception', ',', 'e', ':', '5INDENT', 'print', '"Couldn\'t build CtrlClient addr:{} e:{}"', '.', 'format', '(', 'ctrl_addr', ',', 'e', ')', 'sys', '.', 'exit', '(', '-', '1', ')', '6DEDENT', 'try', ':', '5INDENT', 'self', '.', 'sub_client', '=', 'sub_client_mod', '.', 'SubClient', '(', 'sub_addr', ')', '6DEDENT', 'except', 'Exception', ',', 'e', ':', '5INDENT', 'print', '"SubClient error sub_addr:{}, error:{}"', '.', 'format', '(', 'sub_addr', ',', 'e', ')', 'sys', '.', 'exit', '(', '-', '1', ')', '6DEDENT', '6DEDENT', 'def', 'default', '(', 'self', ',', 'raw_args', ')', ':', '5INDENT', '"""Parses API commands (ex `ctrl echo msg:7`) into calls to CtrlServer.\n\n        API commands are those given by the `list` command. Note that a\n        heuristic is used to convert params (like "7" in the example above)\n        into the types expected by the method that will be called and passed\n        that param by CtrlServer. It has held up well so far.\n\n        :param raw_args: Command from user to be parsed/passed to CtrlServer.\n        :type raw_args: string\n\n        """', 'obj_name', ',', '_', ',', 'rest', '=', 'raw_args', '.', 'partition', '(', '" "', ')', 'if', 'obj_name', 'in', 'self', '.', 'ctrl_client', '.', 'objects', ':', '5INDENT', 'method_name', ',', '_', ',', 'params', '=', 'rest', '.', 'partition', '(', '" "', ')', 'if', 'method_name', 'in', 'self', '.', 'ctrl_client', '.', 'objects', '[', 'obj_name', ']', ':', '5INDENT', 'try', ':', '5INDENT', 'param_dict', '=', '{', '}', 'for', 'param', 'in', 'params', '.', 'split', '(', ')', ':', '5INDENT', 'key', ',', 'value', '=', 'param', '.', 'split', '(', '":"', ')', 'try', ':', '5INDENT', 'if', '"."', 'in', 'value', ':', '5INDENT', 'value', '=', 'float', '(', 'value', ')', '6DEDENT', 'else', ':', '5INDENT', 'value', '=', 'int', '(', 'value', ')', '6DEDENT', '6DEDENT', 'except', 'ValueError', ':', '5INDENT', 'if', 'value', '==', '"True"', ':', '5INDENT', 'value', '=', 'True', '6DEDENT', 'elif', 'value', '==', '"False"', ':', '5INDENT', 'value', '=', 'False', '6DEDENT', 'elif', 'value', '.', 'startswith', '(', '"\'"', ')', 'and', 'value', '.', 'endswith', '(', '"\'"', ')', ':', '5INDENT', 'value', '=', 'value', '[', '1', ':', '-', '1', ']', '6DEDENT', '6DEDENT', 'param_dict', '[', 'key', ']', '=', 'value', '6DEDENT', '6DEDENT', 'except', 'IndexError', ':', '5INDENT', 'print', '"Bad parameter list"', 'return', '6DEDENT', 'except', 'ValueError', ':', '5INDENT', 'print', '"Bad parameter value"', 'return', '6DEDENT', 'result', '=', 'self', '.', 'ctrl_client', '.', 'call', '(', 'obj_name', ',', 'method_name', ',', 'param_dict', ')', 'print', '"-->"', ',', 'result', '6DEDENT', 'else', ':', '5INDENT', 'print', '"Unknown API method:"', ',', 'method_name', '6DEDENT', '6DEDENT', 'else', ':', '5INDENT', 'print', '"Unknown command:"', ',', 'obj_name', '6DEDENT', '6DEDENT', 'def', 'completenames', '(', 'self', ',', 'text', ',', '*', 'ignored', ')', ':', '5INDENT', '"""Handles tab-completion of object names exported by the API.\n\n        Object names, like those returned by `list` (driver, gun...),\n        aren\'t known to Cmd.completenames. We extend it here to deal\n        with tab-completing them.\n\n        :param text: Text the user has type so far, to be tab-completed.\n        :type text: string\n        :param *ignored: Not documented in Cmd.completenames. No idea.\n        :type *ignored: Not documented in Cmd.completenames. Dict?\n\n        """', 'cmd_match_names', '=', 'cmd', '.', 'Cmd', '.', 'completenames', '(', 'self', ',', 'text', ',', '*', 'ignored', ')', 'obj_names', '=', 'self', '.', 'ctrl_client', '.', 'objects', '.', 'keys', '(', ')', 'api_match_names', '=', '[', 'x', 'for', 'x', 'in', 'obj_names', 'if', 'x', '.', 'startswith', '(', 'text', ')', ']', 'return', 'cmd_match_names', '+', 'api_match_names', '6DEDENT', 'def', 'completedefault', '(', 'self', ',', 'text', ',', 'line', ',', 'begidx', ',', 'endidx', ')', ':', '5INDENT', '"""Handles tab-completion of method names exported by API.\n\n        The matching of the first term (the object name exported by the API)\n        is done separately, using the results of copmletenames().\n\n        :param text: Part of method name (second arg) typed so far by user.\n        :type text: string\n        :param line: Entire line typed so far by user.\n        :type line: string\n        :param begidx: Index into "line" where "text" begins.\n        :type begidx: int\n        :param endidx: Index into "line" where "text" ends.\n        :type endidx: int\n        :returns: List of exported API methods that match text given by user.\n\n        """', 'obj', ',', '_', ',', 'rest', '=', 'line', '.', 'partition', '(', '" "', ')', 'if', 'obj', 'in', 'self', '.', 'ctrl_client', '.', 'objects', ':', '5INDENT', 'method', ',', '_', ',', 'params', '=', 'rest', '.', 'strip', '(', ')', '.', 'partition', '(', '" "', ')', 'if', 'method', '==', 'text', ':', '5INDENT', 'method_names', '=', 'self', '.', 'ctrl_client', '.', 'objects', '[', 'obj', ']', 'match_names', '=', '[', 'x', 'for', 'x', 'in', 'method_names', 'if', 'x', '.', 'startswith', '(', 'text', ')', ']', 'return', 'match_names', '6DEDENT', '6DEDENT', '6DEDENT', 'def', 'do_list', '(', 'self', ',', 'raw_args', ')', ':', '5INDENT', '"""Provide a list of bot API objects and their methods.\n\n        :param raw_args: Mandatory param for Cmd handler, not used.\n        :type raw_args: string\n\n        """', 'print', 'print', '"Available bot objects and methods"', 'print', 'for', 'obj_name', ',', 'methods', 'in', 'sorted', '(', 'self', '.', 'ctrl_client', '.', 'objects', '.', 'items', '(', ')', ')', ':', '5INDENT', 'print', '"{}:"', '.', 'format', '(', 'obj_name', ')', 'for', 'method', 'in', 'methods', ':', '5INDENT', 'print', '"    - {}"', '.', 'format', '(', 'method', ')', '6DEDENT', '6DEDENT', 'print', '6DEDENT', 'def', 'help_list', '(', 'self', ')', ':', '5INDENT', '"""Provide help message for list command."""', 'print', '"list"', 'print', '"\\tList on-bot objects and methods exposed by the API."', '6DEDENT', 'def', 'do_ping', '(', 'self', ',', 'raw_args', ')', ':', '5INDENT', '"""Ping the control server on the bot.\n\n        :param raw_args: Mandatory param for Cmd handler, not used.\n        :type raw_args: string\n\n        """', 'reply_time', '=', 'self', '.', 'ctrl_client', '.', 'ping', '(', ')', 'print', '"CtrlServer response time: {}ms"', '.', 'format', '(', 'reply_time', ')', '6DEDENT', 'def', 'help_ping', '(', 'self', ')', ':', '5INDENT', '"""Provide help message for ping command."""', 'print', '"ping"', 'print', '"\\tPing the control server on the bot."', '6DEDENT', 'def', 'do_sub_add', '(', 'self', ',', 'raw_args', ')', ':', '5INDENT', '"""Subscribe to a published topic.\n\n        Note that with ZMQ (libzmq) versions >= 3.0, topics that are not\n        subscribed to by any client are not published (done automatically\n        at the server).\n\n        :param raw_args: Commands string with topic name to add.\n        :type raw_args: string\n\n        """', 'try', ':', '5INDENT', 'topic', '=', 'raw_args', '.', 'split', '(', ')', '[', '0', ']', '6DEDENT', 'except', '(', 'ValueError', ',', 'IndexError', ')', ':', '5INDENT', 'print', '"Invalid command, see help [cmd]."', 'return', '6DEDENT', 'self', '.', 'sub_client', '.', 'add_topic', '(', 'topic', ')', '6DEDENT', 'def', 'help_sub_add', '(', 'self', ')', ':', '5INDENT', '"""Provide help message for sub_add command."""', 'print', '"sub_add <topic>"', 'print', '"\\tSubscribe to a published topic."', '6DEDENT', 'def', 'do_sub_del', '(', 'self', ',', 'raw_args', ')', ':', '5INDENT', '"""Unsubscribe from a published topic.\n\n        Note that with ZMQ (libzmq) versions >= 3.0, topics that are not\n        subscribed to by any client are not published (done automatically\n        at the server).\n\n        :param raw_args: Commands string with topic name to unsubscribe from.\n        :type raw_args: string\n\n        """', 'try', ':', '5INDENT', 'topic', '=', 'raw_args', '.', 'split', '(', ')', '[', '0', ']', '6DEDENT', 'except', '(', 'ValueError', ',', 'IndexError', ')', ':', '5INDENT', 'print', '"Invalid command, see help [cmd]."', 'return', '6DEDENT', 'self', '.', 'sub_client', '.', 'del_topic', '(', 'topic', ')', '6DEDENT', 'def', 'help_sub_del', '(', 'self', ')', ':', '5INDENT', '"""Provide help message for sub_del command."""', 'print', '"sub_del <topic>"', 'print', '"\\tUnsubscribe from a published topic."', '6DEDENT', 'def', 'do_sub', '(', 'self', ',', 'raw_args', ')', ':', '5INDENT', '"""Print topics subscribed to via SubClient.\n\n        :param raw_args: Mandatory param for Cmd handler, not used.\n        :type raw_args: string\n\n        """', 'self', '.', 'sub_client', '.', 'print_msgs', '(', ')', '6DEDENT', 'def', 'help_sub', '(', 'self', ')', ':', '5INDENT', '"""Provide help message for sub command."""', 'print', '"sub"', 'print', '"\\tPrint messages subscribed to. Ctrl+c to exit."', '6DEDENT', 'def', 'do_stop', '(', 'self', ',', 'raw_args', ')', ':', '5INDENT', '"""Stop all drive and gun motors, put turret in save state.\n\n        :param raw_args: Mandatory param for Cmd handler, not used.\n        :type raw_args: string\n\n        """', 'self', '.', 'ctrl_client', '.', 'stop_full', '(', ')', '6DEDENT', 'def', 'help_stop', '(', 'self', ')', ':', '5INDENT', '"""Provide help message for stop command."""', 'print', '"stop"', 'print', '"\\tStop all drive and gun motors, put turret in safe state."', '6DEDENT', 'def', 'do_kill', '(', 'self', ',', 'raw_args', ')', ':', '5INDENT', '"""Send message to CtrlServer, asking it to exit.\n\n        :param raw_args: Mandatory param for Cmd handler, not used.\n        :type raw_args: string\n\n        """', 'self', '.', 'ctrl_client', '.', 'exit_server', '(', ')', '6DEDENT', 'def', 'help_kill', '(', 'self', ')', ':', '5INDENT', '"""Provide help message for kill command."""', 'print', '"kill"', 'print', '"\\tAsk the CtrlServer to exit."', '6DEDENT', 'def', 'do_die', '(', 'self', ',', 'raw_args', ')', ':', '5INDENT', '"""Disconnect from servers and close CLI.\n\n        :param raw_args: Mandatory param for Cmd handler, not used.\n        :type raw_args: string\n\n        """', 'print', '"Disconnecting..."', 'self', '.', 'ctrl_client', '.', 'clean_up', '(', ')', 'self', '.', 'sub_client', '.', 'clean_up', '(', ')', 'print', '"Bye!"', 'return', 'True', '6DEDENT', 'def', 'help_die', '(', 'self', ')', ':', '5INDENT', '"""Provide help message for die command."""', 'print', '"die"', 'print', '"\\tDisconnect from servers and close CLI."', '6DEDENT', 'def', 'do_shell', '(', 'self', ',', 'cmd', ')', ':', '5INDENT', '"""Allows normal shell commands to be run.\n\n        :param cmd: Everything after "shell" or "!", to be passed to shell.\n        :type cmd: string\n\n        """', 'os', '.', 'system', '(', 'cmd', ')', '6DEDENT', 'def', 'help_shell', '(', 'self', ')', ':', '5INDENT', '"""Provide help message for shell command."""', 'print', '"!|shell [command]"', 'print', '"\\tSend command to underlying system shell (like Bash)."', '6DEDENT', 'def', 'do_EOF', '(', 'self', ',', 'raw_args', ')', ':', '5INDENT', '"""Cleans up when ctrl+d is used to exit client.\n\n        :param raw_args: Mandatory param for Cmd handler, not used.\n        :type raw_args: string\n\n        """', 'print', '"Disconnecting..."', 'self', '.', 'ctrl_client', '.', 'clean_up', '(', ')', 'self', '.', 'sub_client', '.', 'clean_up', '(', ')', 'print', '"Bye!"', 'return', 'True', '6DEDENT', 'def', 'help_EOF', '(', 'self', ')', ':', '5INDENT', '"""Provide help message for EOF (ctrl+d) command."""', 'print', '"ctrl+d"', 'print', '"\\tDisconnect from servers and close CLI with ctrl+d."', '6DEDENT', 'def', 'help_help', '(', 'self', ')', ':', '5INDENT', '"""Provide help message for help command."""', 'print', '"help [command]"', 'print', '"\\tProvide help on given command. If no argument, list commands."', '6DEDENT', '6DEDENT', 'if', '__name__', '==', "'__main__'", ':', '5INDENT', 'if', 'len', '(', 'sys', '.', 'argv', ')', '==', '1', ':', '5INDENT', 'print', '"No ctrl_addr or sub_addr given, using tcp://localhost:60000,1"', 'CLI', '(', '"tcp://localhost:60000"', ',', '"tcp://localhost:60001"', ')', '.', 'cmdloop', '(', ')', '6DEDENT', 'elif', 'len', '(', 'sys', '.', 'argv', ')', '==', '3', ':', '5INDENT', 'ctrl_addr', '=', 'sys', '.', 'argv', '[', '1', ']', 'sub_addr', '=', 'sys', '.', 'argv', '[', '2', ']', 'CLI', '(', 'ctrl_addr', ',', 'sub_addr', ')', '.', 'cmdloop', '(', ')', '6DEDENT', 'else', ':', '5INDENT', 'print', '"Error: Expected `./cli.py [ctrl_addr sub_addr]`"', '6DEDENT', '6DEDENT'], 'nodes': ['/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/IEEERobotics/bot/bot/interface/cli.py', 'CLI', 'default', 'completenames', 'completedefault', 'do_list', 'help_list', 'do_ping', 'help_ping', 'do_sub_add', 'help_sub_add', 'do_sub_del', 'help_sub_del', 'do_sub', 'help_sub', 'do_stop', 'help_stop', 'do_kill', 'help_kill', 'do_die', 'help_die', 'do_shell', 'help_shell', 'do_EOF', 'help_EOF', 'help_help', '__main__'], 'edges': [[1, 0], [2, 0], [3, 0], [4, 0], [5, 0], [6, 0], [7, 0], [8, 0], [9, 0], [10, 0], [11, 0], [12, 0], [13, 0], [14, 0], [15, 0], [16, 0], [17, 0], [18, 0], [19, 0], [20, 0], [21, 0], [22, 0], [23, 0], [24, 0], [25, 0], [26, 0], [1, 26]], 'crossEdges': [[1, 24]]}
{'path': 'data/IEEERobotics/bot/tests/test_servo.py', 'tokens': ['"""Test cases for servo abstraction class."""', 'from', 'random', 'import', 'randint', 'from', 'os', 'import', 'path', 'import', 'bot', '.', 'lib', '.', 'lib', 'as', 'lib', 'import', 'bot', '.', 'hardware', '.', 'servo', 'as', 's_mod', 'import', 'tests', '.', 'test_bot', 'as', 'test_bot', 'class', 'TestPosition', '(', 'test_bot', '.', 'TestBot', ')', ':', '5INDENT', '"""Test setting and checking the position of a servo."""', 'def', 'setUp', '(', 'self', ')', ':', '5INDENT', '"""Setup test hardware files and build servo object."""', 'super', '(', 'TestPosition', ',', 'self', ')', '.', 'setUp', '(', ')', 'config', '=', 'path', '.', 'dirname', '(', 'path', '.', 'realpath', '(', '__file__', ')', ')', '+', '"/test_config.yaml"', 'self', '.', 'config', '=', 'lib', '.', 'get_config', '(', 'config', ')', 'self', '.', 'pwm_num', '=', 'self', '.', 'config', '[', "'test_servo'", ']', 'self', '.', 'setup_pwm', '(', 'self', '.', 'pwm_num', ',', '"1\\n"', ',', '"150\\n"', ',', '"200\\n"', ',', '"0\\n"', ')', 'self', '.', 'servo', '=', 's_mod', '.', 'Servo', '(', 'self', '.', 'pwm_num', ')', '6DEDENT', 'def', 'tearDown', '(', 'self', ')', ':', '5INDENT', '"""Restore testing flag state in config file."""', 'super', '(', 'TestPosition', ',', 'self', ')', '.', 'tearDown', '(', ')', '6DEDENT', 'def', 'test_0', '(', 'self', ')', ':', '5INDENT', '"""Test setting servo position to max in zero direction."""', 'self', '.', 'servo', '.', 'position', '=', '0', 'assert', 'self', '.', 'servo', '.', 'position', '==', '0', ',', 'self', '.', 'servo', '.', 'position', '6DEDENT', 'def', 'test_180', '(', 'self', ')', ':', '5INDENT', '"""Test setting servo position to max in 180 direction."""', 'self', '.', 'servo', '.', 'position', '=', '180', 'assert', 'self', '.', 'servo', '.', 'position', '==', '180', ',', 'self', '.', 'servo', '.', 'position', '6DEDENT', 'def', 'test_middle', '(', 'self', ')', ':', '5INDENT', '"""Test the servo at middle position."""', 'self', '.', 'servo', '.', 'position', '=', '90', 'assert', 'self', '.', 'servo', '.', 'position', '==', '90', ',', 'self', '.', 'servo', '.', 'position', '6DEDENT', 'def', 'test_series', '(', 'self', ')', ':', '5INDENT', '"""Test a series of positions."""', 'for', 'position', 'in', 'range', '(', '0', ',', '180', ',', '18', ')', ':', '5INDENT', 'self', '.', 'servo', '.', 'position', '=', 'position', 'assert', 'self', '.', 'servo', '.', 'position', '==', 'position', ',', 'self', '.', 'servo', '.', 'position', '6DEDENT', '6DEDENT', 'def', 'test_manually_confirm', '(', 'self', ')', ':', '5INDENT', '"""Test a series of random positions, read simulated HW to confirm."""', 'for', 'i', 'in', 'range', '(', '10', ')', ':', '5INDENT', 'test_pos', '=', 'randint', '(', '0', ',', '180', ')', 'self', '.', 'servo', '.', 'position', '=', 'test_pos', 'cur_pwm', '=', 'self', '.', 'get_pwm', '(', 'self', '.', 'pwm_num', ')', 'duty', '=', 'int', '(', 'cur_pwm', '[', '"duty_ns"', ']', ')', 'read_pos', '=', 'int', '(', 'round', '(', '(', '(', 'duty', '-', '580000', ')', '/', '2320000.', ')', '*', '180', ')', ')', 'assert', 'read_pos', '==', 'test_pos', ',', '"{} != {}"', '.', 'format', '(', 'read_pos', ',', 'test_pos', ')', '6DEDENT', '6DEDENT', 'def', 'test_over_max', '(', 'self', ')', ':', '5INDENT', '"""Test position over max position. Should use maximum."""', 'self', '.', 'servo', '.', 'position', '=', '181', 'assert', 'self', '.', 'servo', '.', 'position', '==', '180', ',', '"Actual: {}"', '.', 'format', '(', 'self', '.', 'servo', '.', 'position', ')', '6DEDENT', 'def', 'test_under_min', '(', 'self', ')', ':', '5INDENT', '"""Test position under minimum position. Should use minimum."""', 'self', '.', 'servo', '.', 'position', '=', '-', '1', 'assert', 'self', '.', 'servo', '.', 'position', '==', '0', ',', '"Actual: {}"', '.', 'format', '(', 'self', '.', 'servo', '.', 'position', ')', '6DEDENT', '6DEDENT'], 'nodes': ['/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/IEEERobotics/bot/tests/test_servo.py', 'TestPosition'], 'edges': [[1, 0]], 'crossEdges': [[1, 32]]}
