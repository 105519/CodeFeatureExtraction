{'path': 'data/ARM-DOE/pyart/examples/mapping/plot_map_two_radars_to_grid.py', 'tokens': ['"""\n==================================\nMap two radars to a Cartesian grid\n==================================\n\nMap the reflectivity field of two nearby ARM XSARP radars from antenna\ncoordinates to a Cartesian grid.\n\n"""', 'print', '(', '__doc__', ')', 'import', 'matplotlib', '.', 'pyplot', 'as', 'plt', 'import', 'pyart', 'XSAPR_SW_FILE', '=', "'swx_20120520_0641.nc'", 'XSAPR_SE_FILE', '=', "'sex_20120520_0641.nc'", 'radar_sw', '=', 'pyart', '.', 'io', '.', 'read_cfradial', '(', 'XSAPR_SW_FILE', ')', 'radar_se', '=', 'pyart', '.', 'io', '.', 'read_cfradial', '(', 'XSAPR_SE_FILE', ')', 'gatefilter_se', '=', 'pyart', '.', 'filters', '.', 'GateFilter', '(', 'radar_se', ')', 'gatefilter_se', '.', 'exclude_above', '(', "'corrected_reflectivity_horizontal'", ',', '100', ')', 'gatefilter_sw', '=', 'pyart', '.', 'filters', '.', 'GateFilter', '(', 'radar_sw', ')', 'gatefilter_sw', '.', 'exclude_above', '(', "'corrected_reflectivity_horizontal'", ',', '100', ')', 'grid', '=', 'pyart', '.', 'map', '.', 'grid_from_radars', '(', '(', 'radar_se', ',', 'radar_sw', ')', ',', 'gatefilters', '=', '(', 'gatefilter_se', ',', 'gatefilter_sw', ')', ',', 'grid_shape', '=', '(', '1', ',', '201', ',', '201', ')', ',', 'grid_limits', '=', '(', '(', '1000', ',', '1000', ')', ',', '(', '-', '50000', ',', '40000', ')', ',', '(', '-', '60000', ',', '40000', ')', ')', ',', 'grid_origin', '=', '(', '36.57861', ',', '-', '97.363611', ')', ',', 'fields', '=', '[', "'corrected_reflectivity_horizontal'", ']', ')', 'fig', '=', 'plt', '.', 'figure', '(', ')', 'ax', '=', 'fig', '.', 'add_subplot', '(', '111', ')', 'ax', '.', 'imshow', '(', 'grid', '.', 'fields', '[', "'corrected_reflectivity_horizontal'", ']', '[', "'data'", ']', '[', '0', ']', ',', 'origin', '=', "'lower'", ',', 'extent', '=', '(', '-', '60', ',', '40', ',', '-', '50', ',', '40', ')', ',', 'vmin', '=', '0', ',', 'vmax', '=', '48', ')', 'plt', '.', 'show', '(', ')'], 'nodes': ['/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/examples/mapping/plot_map_two_radars_to_grid.py'], 'edges': [], 'crossEdges': []}
{'path': 'data/ARM-DOE/pyart/pyart/aux_io/radx.py', 'tokens': ['"""\npyart.aux_io.radx\n=================\n\nReading files using Radx to first convert the file to Cf.Radial format\n\n.. autosummary::\n    :toctree: generated/\n\n    read_radx\n\n"""', 'import', 'os', 'import', 'tempfile', 'import', 'subprocess', 'from', '.', '.', 'io', '.', 'cfradial', 'import', 'read_cfradial', 'from', '.', '.', 'io', '.', 'common', 'import', '_test_arguments', 'def', 'read_radx', '(', 'filename', ',', '**', 'kwargs', ')', ':', '5INDENT', '"""\n    Read a file by first converting it to Cf/Radial using RadxConvert.\n\n    Parameters\n    ----------\n    filename : str\n        Name of file to read using RadxConvert.\n\n    Returns\n    -------\n    radar : Radar\n        Radar object.\n\n    """', '_test_arguments', '(', 'kwargs', ')', 'tmpfile', '=', 'tempfile', '.', 'mkstemp', '(', 'suffix', '=', "'.nc'", ',', 'dir', '=', "'.'", ')', '[', '1', ']', 'head', ',', 'tail', '=', 'os', '.', 'path', '.', 'split', '(', 'tmpfile', ')', 'try', ':', '5INDENT', 'subprocess', '.', 'check_call', '(', '[', "'RadxConvert'", ',', "'-const_ngates'", ',', "'-outdir'", ',', 'head', ',', "'-outname'", ',', 'tail', ',', "'-f'", ',', 'filename', ']', ')', 'if', 'not', 'os', '.', 'path', '.', 'isfile', '(', 'tmpfile', ')', ':', '5INDENT', 'raise', 'IOError', '(', "'RadxConvert failed to create a file, upgrading to the '", "' latest version of Radx may be necessary.'", ')', '6DEDENT', 'radar', '=', 'read_cfradial', '(', 'tmpfile', ')', '6DEDENT', 'finally', ':', '5INDENT', 'os', '.', 'remove', '(', 'tmpfile', ')', '6DEDENT', 'return', 'radar', '6DEDENT'], 'nodes': ['/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/aux_io/radx.py', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/retrieve/setup.py', 'configuration', 'steiner_echo_gen_source', '__main__', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/retrieve/simple_moment_calculations.py', 'calculate_snr_from_reflectivity', 'retrieve', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/retrieve/__init__.py', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/exceptions.py', 'MissingOptionalDependency', 'DeprecatedAttribute', 'DeprecatedFunctionName', '_deprecated_alias', 'read_radx', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/aux_io/gamic_hdf5.py', 'read_gamic', '_get_instrument_params', '_avg_radial_angles', '_prt_mode_from_unfolding', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/aux_io/pattern.py', 'read_pattern', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/aux_io/sinarame_h5.py', 'read_sinarame_h5', '_get_SINARAME_h5_sweep_data', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/aux_io/noxp_iphex_nc.py', 'read_noxp_iphex_nc', '_ncvar_to_dict', 'aux_io', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/aux_io/__init__.py', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/graph/gridmapdisplay.py', 'GridMapDisplay', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/graph/_cm.py', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/graph/common.py', 'parse_ax', 'parse_ax_fig', 'parse_norm_vmin_vmax', 'parse_cmap', 'parse_vmin_vmax', 'parse_lon_lat', 'generate_colorbar_label', 'generate_field_name', 'generate_radar_name', 'generate_grid_name', 'generate_radar_time_begin', 'generate_grid_time_begin', 'generate_filename', 'generate_grid_filename', 'generate_title', 'generate_grid_title', 'generate_longitudinal_level_title', 'generate_latitudinal_level_title', 'generate_vpt_title', 'generate_ray_title', 'generate_az_rhi_title', 'set_limits', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/graph/radardisplay.py', 'RadarDisplay', '_mask_outside', 'graph', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/graph/__init__.py', 'RadarDisplay_Airborne', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/graph/radardisplay_airborne.py', 'AirborneRadarDisplay', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/correct/attenuation.py', 'calculate_attenuation', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/core/setup.py', 'configuration', '__main__', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/core/radar.py', 'Radar', '_rays_per_sweep_data_factory', '_gate_data_factory', '_gate_lon_lat_data_factory', '_gate_altitude_data_factory', 'core', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/core/__init__.py', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/config.py', 'load_config', 'get_metadata', 'get_fillvalue', 'get_field_name', 'get_field_colormap', 'get_field_limits', 'get_field_mapping', 'FileMetadata', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/map/gates_to_grid.py', 'map_gates_to_grid', '_detemine_cy_weighting_func', '_find_projparams', '_parse_gatefilters', '_determine_fields', '_find_offsets', '_find_grid_params', '_parse_roi_func', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/map/setup.py', 'configuration', '__main__', 'map', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/map/__init__.py', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/io/_sigmet_noaa_hh.py', '_decode_noaa_hh_hdr', '_georeference_yprime', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/io/cfradial.py', 'read_cfradial', '_find_all_meta_group_vars', '_ncvar_to_dict', '_NetCDFVariableDataExtractor', '_unpack_variable_gate_field_dic', 'write_cfradial', '_create_ncvar', '_calculate_scale_and_offset', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/io/output_to_geotiff.py', 'write_grid_geotiff', '_get_rgb_values', '_create_sld', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/io/sigmet.py', 'read_sigmet', '_is_time_ordered_by_reversal', '_is_time_ordered_by_roll', '_is_time_ordered_by_reverse_roll', '_time_order_data_and_metadata_roll', '_time_order_data_and_metadata_reverse', '_time_order_data_and_metadata_full', 'ymds_time_to_datetime', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/io/nexrad_common.py', 'get_nexrad_location', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/io/uf_write.py', 'write_uf', '_find_field_mapping', 'UFRayCreator', '_d_to_dms', '_pack_structure', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/io/mdv_radar.py', 'read_mdv', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/io/rsl.py', 'read_rsl', '_dms_to_d', '_RslVolumeDataExtractor', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/io/nexrad_archive.py', 'read_nexrad_archive', '_find_range_params', '_find_scans_to_interp', '_interpolate_scan', '_NEXRADLevel2StagedField', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/io/uf.py', 'read_uf', '_get_instrument_parameters', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/util/radar_utils.py', 'is_vpt', 'to_vpt', 'join_radar', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/util/setup.py', 'configuration', '__main__', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/util/xsect.py', 'cross_section_ppi', '_copy_dic', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/util/met.py', 'nth_smallest', 'get_best_sounding', 'util', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/util/__init__.py'], 'edges': [[1, 7], [2, 1], [3, 1], [4, 1], [5, 7], [6, 5], [8, 7], [10, 9], [11, 9], [12, 9], [13, 9], [0, 28], [14, 0], [15, 28], [16, 15], [17, 15], [18, 15], [19, 15], [20, 28], [21, 20], [22, 28], [23, 22], [24, 22], [25, 28], [26, 25], [27, 25], [29, 28], [30, 59], [31, 30], [32, 59], [33, 59], [34, 33], [35, 33], [36, 33], [37, 33], [38, 33], [39, 33], [40, 33], [41, 33], [42, 33], [43, 33], [44, 33], [45, 33], [46, 33], [47, 33], [48, 33], [49, 33], [50, 33], [51, 33], [52, 33], [53, 33], [54, 33], [55, 33], [56, 59], [57, 56], [58, 56], [60, 59], [61, 60], [62, 59], [63, 62], [65, 64], [66, 75], [67, 66], [68, 66], [69, 75], [70, 69], [71, 69], [72, 69], [73, 69], [74, 69], [76, 75], [78, 77], [79, 77], [80, 77], [81, 77], [82, 77], [83, 77], [84, 77], [85, 77], [86, 98], [87, 86], [88, 86], [89, 86], [90, 86], [91, 86], [92, 86], [93, 86], [94, 86], [95, 98], [96, 95], [97, 95], [99, 98], [101, 100], [102, 100], [104, 103], [105, 103], [106, 103], [107, 103], [108, 103], [109, 103], [110, 103], [111, 103], [113, 112], [114, 112], [115, 112], [117, 116], [118, 116], [119, 116], [120, 116], [121, 116], [122, 116], [123, 116], [124, 116], [126, 125], [128, 127], [129, 127], [130, 127], [131, 127], [132, 127], [134, 133], [136, 135], [137, 135], [138, 135], [140, 139], [141, 139], [142, 139], [143, 139], [144, 139], [146, 145], [147, 145], [148, 161], [149, 148], [150, 148], [151, 148], [152, 161], [153, 152], [154, 152], [155, 161], [156, 155], [157, 155], [158, 161], [159, 158], [160, 158], [162, 161], [11, 56], [33, 56], [85, 116], [70, 116], [80, 116], [100, 116], [118, 117], [119, 117], [120, 117], [70, 117], [80, 117], [121, 117], [85, 117], [122, 117], [123, 117], [101, 117], [124, 117], [153, 154], [157, 156], [70, 76], [13, 76], [13, 76], [148, 76], [78, 77], [159, 160], [149, 162], [150, 162], [156, 162], [151, 162], [84, 127], [130, 128], [129, 128], [84, 129], [3, 2], [2, 4], [79, 5], [81, 5], [79, 6], [81, 6], [6, 8], [85, 15], [70, 15], [80, 15], [10, 15], [18, 16], [70, 16], [80, 16], [10, 16], [85, 16], [17, 16], [70, 86], [90, 87], [91, 87], [92, 87], [93, 87], [70, 87], [94, 87], [88, 87], [89, 87], [19, 17], [85, 20], [70, 20], [70, 21], [85, 21], [85, 133], [70, 133], [80, 133], [70, 134], [80, 134], [85, 134], [85, 22], [70, 22], [80, 22], [10, 22], [24, 23], [70, 23], [80, 23], [10, 23], [85, 23], [96, 97], [87, 99], [102, 101], [57, 60], [63, 60], [31, 60], [57, 62], [33, 62], [85, 135], [70, 135], [80, 135], [10, 135], [70, 136], [80, 136], [10, 136], [85, 136], [137, 136], [138, 136], [85, 25], [70, 25], [70, 26], [85, 26], [27, 26], [23, 29], [26, 29], [16, 29], [21, 29], [14, 29], [10, 30], [11, 30], [33, 30], [79, 64], [80, 64], [81, 64], [79, 65], [80, 65], [81, 65], [85, 139], [70, 139], [80, 139], [126, 139], [141, 140], [142, 140], [70, 140], [143, 140], [80, 140], [85, 140], [144, 140], [126, 140], [85, 145], [70, 145], [80, 145], [85, 103], [70, 103], [70, 104], [85, 104], [105, 104], [106, 104], [108, 104], [70, 146], [80, 146], [85, 146], [147, 146], [107, 106], [82, 33], [83, 33], [13, 33], [13, 33], [110, 109], [38, 36], [82, 37], [83, 38], [67, 68], [79, 69], [111, 110], [42, 46], [44, 46], [43, 47], [45, 47], [10, 112], [10, 113], [114, 113], [115, 113], [42, 48], [44, 48], [41, 48], [43, 49], [45, 49], [41, 49], [43, 50], [45, 50], [41, 50], [43, 51], [45, 51], [41, 51], [42, 52], [44, 52], [41, 52], [42, 53], [44, 53], [41, 53], [42, 54], [44, 54], [41, 54]], 'crossEdges': [[14, 24]]}
{'path': 'data/ARM-DOE/pyart/pyart/exceptions.py', 'tokens': ['"""\npyart.exceptions\n================\n\nCustom Py-ART exceptions.\n\n.. autosummary::\n    :toctree: generated/\n\n    MissingOptionalDependency\n    DeprecatedAttribute\n    DeprecatedFunctionName\n    _deprecated_alias\n\n"""', 'import', 'warnings', 'class', 'MissingOptionalDependency', '(', 'Exception', ')', ':', '5INDENT', '""" Exception raised when a optional dependency is needed by not found. """', 'pass', '6DEDENT', 'class', 'DeprecatedAttribute', '(', 'DeprecationWarning', ')', ':', '5INDENT', '""" Warning category for an attribute which has been renamed/moved.  """', 'pass', '6DEDENT', 'class', 'DeprecatedFunctionName', '(', 'DeprecationWarning', ')', ':', '5INDENT', '""" Warning category for a function which has been renamed/moved. """', 'pass', '6DEDENT', 'def', '_deprecated_alias', '(', 'func', ',', 'old_name', ',', 'new_name', ')', ':', '5INDENT', '"""\n\n    A function for creating an alias to a renamed or moved function.\n\n    Parameters\n    ----------\n    func : func\n        The function which has been renamed or moved.\n    old_name, new_name : str\n        Name of the function before and after it was moved or renamed\n        (with namespace if changed).\n\n    Returns\n    -------\n    wrapper : func\n        A wrapper version of func, which issues a DeprecatedFunctionName\n        warning when the called.\n\n    """', 'def', 'wrapper', '(', '*', 'args', ',', '**', 'kwargs', ')', ':', '5INDENT', 'warnings', '.', 'warn', '(', '(', '"{0} has been deprecated and will be removed in future "', '+', '"versions of Py-ART, pleases use {1}. "', ')', '.', 'format', '(', 'old_name', ',', 'new_name', ')', ',', 'category', '=', 'DeprecatedFunctionName', ')', 'return', 'func', '(', '*', 'args', ',', '**', 'kwargs', ')', '6DEDENT', 'return', 'wrapper', '6DEDENT'], 'nodes': ['/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/exceptions.py', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/retrieve/setup.py', 'configuration', 'steiner_echo_gen_source', '__main__', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/retrieve/simple_moment_calculations.py', 'calculate_snr_from_reflectivity', 'retrieve', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/retrieve/__init__.py', 'MissingOptionalDependency', 'DeprecatedAttribute', 'DeprecatedFunctionName', '_deprecated_alias', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/aux_io/radx.py', 'read_radx', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/aux_io/gamic_hdf5.py', 'read_gamic', '_get_instrument_params', '_avg_radial_angles', '_prt_mode_from_unfolding', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/aux_io/pattern.py', 'read_pattern', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/aux_io/sinarame_h5.py', 'read_sinarame_h5', '_get_SINARAME_h5_sweep_data', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/aux_io/noxp_iphex_nc.py', 'read_noxp_iphex_nc', '_ncvar_to_dict', 'aux_io', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/aux_io/__init__.py', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/graph/gridmapdisplay.py', 'GridMapDisplay', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/graph/_cm.py', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/graph/common.py', 'parse_ax', 'parse_ax_fig', 'parse_norm_vmin_vmax', 'parse_cmap', 'parse_vmin_vmax', 'parse_lon_lat', 'generate_colorbar_label', 'generate_field_name', 'generate_radar_name', 'generate_grid_name', 'generate_radar_time_begin', 'generate_grid_time_begin', 'generate_filename', 'generate_grid_filename', 'generate_title', 'generate_grid_title', 'generate_longitudinal_level_title', 'generate_latitudinal_level_title', 'generate_vpt_title', 'generate_ray_title', 'generate_az_rhi_title', 'set_limits', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/graph/radardisplay.py', 'RadarDisplay', '_mask_outside', 'graph', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/graph/__init__.py', 'RadarDisplay_Airborne', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/graph/radardisplay_airborne.py', 'AirborneRadarDisplay', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/correct/attenuation.py', 'calculate_attenuation', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/core/setup.py', 'configuration', '__main__', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/core/radar.py', 'Radar', '_rays_per_sweep_data_factory', '_gate_data_factory', '_gate_lon_lat_data_factory', '_gate_altitude_data_factory', 'core', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/core/__init__.py', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/config.py', 'load_config', 'get_metadata', 'get_fillvalue', 'get_field_name', 'get_field_colormap', 'get_field_limits', 'get_field_mapping', 'FileMetadata', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/map/gates_to_grid.py', 'map_gates_to_grid', '_detemine_cy_weighting_func', '_find_projparams', '_parse_gatefilters', '_determine_fields', '_find_offsets', '_find_grid_params', '_parse_roi_func', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/map/setup.py', 'configuration', '__main__', 'map', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/map/__init__.py', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/io/_sigmet_noaa_hh.py', '_decode_noaa_hh_hdr', '_georeference_yprime', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/io/cfradial.py', 'read_cfradial', '_find_all_meta_group_vars', '_ncvar_to_dict', '_NetCDFVariableDataExtractor', '_unpack_variable_gate_field_dic', 'write_cfradial', '_create_ncvar', '_calculate_scale_and_offset', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/io/output_to_geotiff.py', 'write_grid_geotiff', '_get_rgb_values', '_create_sld', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/io/sigmet.py', 'read_sigmet', '_is_time_ordered_by_reversal', '_is_time_ordered_by_roll', '_is_time_ordered_by_reverse_roll', '_time_order_data_and_metadata_roll', '_time_order_data_and_metadata_reverse', '_time_order_data_and_metadata_full', 'ymds_time_to_datetime', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/io/nexrad_common.py', 'get_nexrad_location', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/io/uf_write.py', 'write_uf', '_find_field_mapping', 'UFRayCreator', '_d_to_dms', '_pack_structure', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/io/mdv_radar.py', 'read_mdv', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/io/rsl.py', 'read_rsl', '_dms_to_d', '_RslVolumeDataExtractor', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/io/nexrad_archive.py', 'read_nexrad_archive', '_find_range_params', '_find_scans_to_interp', '_interpolate_scan', '_NEXRADLevel2StagedField', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/io/uf.py', 'read_uf', '_get_instrument_parameters', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/util/radar_utils.py', 'is_vpt', 'to_vpt', 'join_radar', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/util/setup.py', 'configuration', '__main__', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/util/xsect.py', 'cross_section_ppi', '_copy_dic', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/util/met.py', 'nth_smallest', 'get_best_sounding', 'util', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/util/__init__.py'], 'edges': [[1, 7], [2, 1], [3, 1], [4, 1], [5, 7], [6, 5], [8, 7], [9, 0], [10, 0], [11, 0], [12, 0], [13, 28], [14, 13], [15, 28], [16, 15], [17, 15], [18, 15], [19, 15], [20, 28], [21, 20], [22, 28], [23, 22], [24, 22], [25, 28], [26, 25], [27, 25], [29, 28], [30, 59], [31, 30], [32, 59], [33, 59], [34, 33], [35, 33], [36, 33], [37, 33], [38, 33], [39, 33], [40, 33], [41, 33], [42, 33], [43, 33], [44, 33], [45, 33], [46, 33], [47, 33], [48, 33], [49, 33], [50, 33], [51, 33], [52, 33], [53, 33], [54, 33], [55, 33], [56, 59], [57, 56], [58, 56], [60, 59], [61, 60], [62, 59], [63, 62], [65, 64], [66, 75], [67, 66], [68, 66], [69, 75], [70, 69], [71, 69], [72, 69], [73, 69], [74, 69], [76, 75], [78, 77], [79, 77], [80, 77], [81, 77], [82, 77], [83, 77], [84, 77], [85, 77], [86, 98], [87, 86], [88, 86], [89, 86], [90, 86], [91, 86], [92, 86], [93, 86], [94, 86], [95, 98], [96, 95], [97, 95], [99, 98], [101, 100], [102, 100], [104, 103], [105, 103], [106, 103], [107, 103], [108, 103], [109, 103], [110, 103], [111, 103], [113, 112], [114, 112], [115, 112], [117, 116], [118, 116], [119, 116], [120, 116], [121, 116], [122, 116], [123, 116], [124, 116], [126, 125], [128, 127], [129, 127], [130, 127], [131, 127], [132, 127], [134, 133], [136, 135], [137, 135], [138, 135], [140, 139], [141, 139], [142, 139], [143, 139], [144, 139], [146, 145], [147, 145], [148, 161], [149, 148], [150, 148], [151, 148], [152, 161], [153, 152], [154, 152], [155, 161], [156, 155], [157, 155], [158, 161], [159, 158], [160, 158], [162, 161], [10, 56], [33, 56], [85, 116], [70, 116], [80, 116], [100, 116], [118, 117], [119, 117], [120, 117], [70, 117], [80, 117], [121, 117], [85, 117], [122, 117], [123, 117], [101, 117], [124, 117], [153, 154], [157, 156], [70, 76], [12, 76], [12, 76], [148, 76], [78, 77], [159, 160], [149, 162], [150, 162], [156, 162], [151, 162], [84, 127], [130, 128], [129, 128], [84, 129], [3, 2], [2, 4], [79, 5], [81, 5], [79, 6], [81, 6], [6, 8], [85, 15], [70, 15], [80, 15], [9, 15], [18, 16], [70, 16], [80, 16], [9, 16], [85, 16], [17, 16], [70, 86], [90, 87], [91, 87], [92, 87], [93, 87], [70, 87], [94, 87], [88, 87], [89, 87], [19, 17], [85, 20], [70, 20], [70, 21], [85, 21], [85, 133], [70, 133], [80, 133], [70, 134], [80, 134], [85, 134], [85, 22], [70, 22], [80, 22], [9, 22], [24, 23], [70, 23], [80, 23], [9, 23], [85, 23], [96, 97], [87, 99], [102, 101], [57, 60], [63, 60], [31, 60], [57, 62], [33, 62], [85, 135], [70, 135], [80, 135], [9, 135], [70, 136], [80, 136], [9, 136], [85, 136], [137, 136], [138, 136], [85, 25], [70, 25], [70, 26], [85, 26], [27, 26], [23, 29], [26, 29], [16, 29], [21, 29], [14, 29], [9, 30], [10, 30], [33, 30], [79, 64], [80, 64], [81, 64], [79, 65], [80, 65], [81, 65], [85, 139], [70, 139], [80, 139], [126, 139], [141, 140], [142, 140], [70, 140], [143, 140], [80, 140], [85, 140], [144, 140], [126, 140], [85, 145], [70, 145], [80, 145], [85, 103], [70, 103], [70, 104], [85, 104], [105, 104], [106, 104], [108, 104], [70, 146], [80, 146], [85, 146], [147, 146], [107, 106], [82, 33], [83, 33], [12, 33], [12, 33], [110, 109], [38, 36], [82, 37], [83, 38], [67, 68], [79, 69], [111, 110], [42, 46], [44, 46], [43, 47], [45, 47], [9, 112], [9, 113], [114, 113], [115, 113], [42, 48], [44, 48], [41, 48], [43, 49], [45, 49], [41, 49], [43, 50], [45, 50], [41, 50], [43, 51], [45, 51], [41, 51], [42, 52], [44, 52], [41, 52], [42, 53], [44, 53], [41, 53], [42, 54], [44, 54], [41, 54]], 'crossEdges': [[9, 4], [10, 14], [11, 24], [12, 34]]}
{'path': 'data/ARM-DOE/pyart/pyart/io/nexrad_archive.py', 'tokens': ['"""\npyart.io.nexrad_archive\n=======================\n\nFunctions for reading NEXRAD Level II Archive files.\n\n.. autosummary::\n    :toctree: generated/\n    :template: dev_template.rst\n\n    _NEXRADLevel2StagedField\n\n.. autosummary::\n    :toctree: generated/\n\n    read_nexrad_archive\n    _find_range_params\n    _find_scans_to_interp\n    _interpolate_scan\n\n"""', 'import', 'warnings', 'import', 'numpy', 'as', 'np', 'from', '.', '.', 'config', 'import', 'FileMetadata', ',', 'get_fillvalue', 'from', '.', '.', 'core', '.', 'radar', 'import', 'Radar', 'from', '.', 'common', 'import', 'make_time_unit_str', ',', '_test_arguments', ',', 'prepare_for_read', 'from', '.', 'nexrad_level2', 'import', 'NEXRADLevel2File', 'from', '.', '.', 'lazydict', 'import', 'LazyLoadDict', 'from', '.', 'nexrad_common', 'import', 'get_nexrad_location', 'def', 'read_nexrad_archive', '(', 'filename', ',', 'field_names', '=', 'None', ',', 'additional_metadata', '=', 'None', ',', 'file_field_names', '=', 'False', ',', 'exclude_fields', '=', 'None', ',', 'delay_field_loading', '=', 'False', ',', 'station', '=', 'None', ',', 'scans', '=', 'None', ',', 'linear_interp', '=', 'True', ',', '**', 'kwargs', ')', ':', '5INDENT', '"""\n    Read a NEXRAD Level 2 Archive file.\n\n    Parameters\n    ----------\n    filename : str\n        Filename of NEXRAD Level 2 Archive file.  The files hosted by\n        at the NOAA National Climate Data Center [1]_ as well as on the\n        UCAR THREDDS Data Server [2]_ have been tested.  Other NEXRAD\n        Level 2 Archive files may or may not work.  Message type 1 file\n        and message type 31 files are supported.\n    field_names : dict, optional\n        Dictionary mapping NEXRAD moments to radar field names. If a\n        data type found in the file does not appear in this dictionary or has\n        a value of None it will not be placed in the radar.fields dictionary.\n        A value of None, the default, will use the mapping defined in the\n        metadata configuration file.\n    additional_metadata : dict of dicts, optional\n        Dictionary of dictionaries to retrieve metadata from during this read.\n        This metadata is not used during any successive file reads unless\n        explicitly included.  A value of None, the default, will not\n        introduct any addition metadata and the file specific or default\n        metadata as specified by the metadata configuration file will be used.\n    file_field_names : bool, optional\n        True to use the NEXRAD field names for the field names. If this\n        case the field_names parameter is ignored. The field dictionary will\n        likely only have a \'data\' key, unless the fields are defined in\n        `additional_metadata`.\n    exclude_fields : list or None, optional\n        List of fields to exclude from the radar object. This is applied\n        after the `file_field_names` and `field_names` parameters.\n    delay_field_loading : bool, optional\n        True to delay loading of field data from the file until the \'data\'\n        key in a particular field dictionary is accessed.  In this case\n        the field attribute of the returned Radar object will contain\n        LazyLoadDict objects not dict objects.\n    station : str or None, optional\n        Four letter ICAO name of the NEXRAD station used to determine the\n        location in the returned radar object.  This parameter is only\n        used when the location is not contained in the file, which occur\n        in older NEXRAD message 1 files.\n    scans : list or None, optional\n        Read only specified scans from the file.  None (the default) will read\n        all scans.\n    linear_interp : bool, optional\n        True (the default) to perform linear interpolation between valid pairs\n        of gates in low resolution rays in files mixed resolution rays.\n        False will perform a nearest neighbor interpolation.  This parameter is\n        not used if the resolution of all rays in the file or requested sweeps\n        is constant.\n\n    Returns\n    -------\n    radar : Radar\n        Radar object containing all moments and sweeps/cuts in the volume.\n        Gates not collected are masked in the field data.\n\n    References\n    ----------\n    .. [1] http://www.ncdc.noaa.gov/\n    .. [2] http://thredds.ucar.edu/thredds/catalog.html\n\n    """', '_test_arguments', '(', 'kwargs', ')', 'filemetadata', '=', 'FileMetadata', '(', "'nexrad_archive'", ',', 'field_names', ',', 'additional_metadata', ',', 'file_field_names', ',', 'exclude_fields', ')', 'nfile', '=', 'NEXRADLevel2File', '(', 'prepare_for_read', '(', 'filename', ')', ')', 'scan_info', '=', 'nfile', '.', 'scan_info', '(', 'scans', ')', 'time', '=', 'filemetadata', '(', "'time'", ')', 'time_start', ',', '_time', '=', 'nfile', '.', 'get_times', '(', 'scans', ')', 'time', '[', "'data'", ']', '=', '_time', 'time', '[', "'units'", ']', '=', 'make_time_unit_str', '(', 'time_start', ')', '_range', '=', 'filemetadata', '(', "'range'", ')', 'first_gate', ',', 'gate_spacing', ',', 'last_gate', '=', '_find_range_params', '(', 'scan_info', ',', 'filemetadata', ')', '_range', '[', "'data'", ']', '=', 'np', '.', 'arange', '(', 'first_gate', ',', 'last_gate', ',', 'gate_spacing', ',', "'float32'", ')', '_range', '[', "'meters_to_center_of_first_gate'", ']', '=', 'float', '(', 'first_gate', ')', '_range', '[', "'meters_between_gates'", ']', '=', 'float', '(', 'gate_spacing', ')', 'metadata', '=', 'filemetadata', '(', "'metadata'", ')', 'metadata', '[', "'original_container'", ']', '=', "'NEXRAD Level II'", 'scan_type', '=', "'ppi'", 'latitude', '=', 'filemetadata', '(', "'latitude'", ')', 'longitude', '=', 'filemetadata', '(', "'longitude'", ')', 'altitude', '=', 'filemetadata', '(', "'altitude'", ')', 'if', 'nfile', '.', '_msg_type', '==', "'1'", 'and', 'station', 'is', 'not', 'None', ':', '5INDENT', 'lat', ',', 'lon', ',', 'alt', '=', 'get_nexrad_location', '(', 'station', ')', '6DEDENT', 'else', ':', '5INDENT', 'lat', ',', 'lon', ',', 'alt', '=', 'nfile', '.', 'location', '(', ')', '6DEDENT', 'latitude', '[', "'data'", ']', '=', 'np', '.', 'array', '(', '[', 'lat', ']', ',', 'dtype', '=', "'float64'", ')', 'longitude', '[', "'data'", ']', '=', 'np', '.', 'array', '(', '[', 'lon', ']', ',', 'dtype', '=', "'float64'", ')', 'altitude', '[', "'data'", ']', '=', 'np', '.', 'array', '(', '[', 'alt', ']', ',', 'dtype', '=', "'float64'", ')', 'sweep_number', '=', 'filemetadata', '(', "'sweep_number'", ')', 'sweep_mode', '=', 'filemetadata', '(', "'sweep_mode'", ')', 'sweep_start_ray_index', '=', 'filemetadata', '(', "'sweep_start_ray_index'", ')', 'sweep_end_ray_index', '=', 'filemetadata', '(', "'sweep_end_ray_index'", ')', 'if', 'scans', 'is', 'None', ':', '5INDENT', 'nsweeps', '=', 'int', '(', 'nfile', '.', 'nscans', ')', '6DEDENT', 'else', ':', '5INDENT', 'nsweeps', '=', 'len', '(', 'scans', ')', '6DEDENT', 'sweep_number', '[', "'data'", ']', '=', 'np', '.', 'arange', '(', 'nsweeps', ',', 'dtype', '=', "'int32'", ')', 'sweep_mode', '[', "'data'", ']', '=', 'np', '.', 'array', '(', 'nsweeps', '*', '[', "'azimuth_surveillance'", ']', ',', 'dtype', '=', "'S'", ')', 'rays_per_scan', '=', '[', 's', '[', "'nrays'", ']', 'for', 's', 'in', 'scan_info', ']', 'sweep_end_ray_index', '[', "'data'", ']', '=', 'np', '.', 'cumsum', '(', 'rays_per_scan', ',', 'dtype', '=', "'int32'", ')', '-', '1', 'rays_per_scan', '.', 'insert', '(', '0', ',', '0', ')', 'sweep_start_ray_index', '[', "'data'", ']', '=', 'np', '.', 'cumsum', '(', 'rays_per_scan', '[', ':', '-', '1', ']', ',', 'dtype', '=', "'int32'", ')', 'azimuth', '=', 'filemetadata', '(', "'azimuth'", ')', 'elevation', '=', 'filemetadata', '(', "'elevation'", ')', 'fixed_angle', '=', 'filemetadata', '(', "'fixed_angle'", ')', 'azimuth', '[', "'data'", ']', '=', 'nfile', '.', 'get_azimuth_angles', '(', 'scans', ')', 'elevation', '[', "'data'", ']', '=', 'nfile', '.', 'get_elevation_angles', '(', 'scans', ')', '.', 'astype', '(', "'float32'", ')', 'fixed_angle', '[', "'data'", ']', '=', 'nfile', '.', 'get_target_angles', '(', 'scans', ')', 'max_ngates', '=', 'len', '(', '_range', '[', "'data'", ']', ')', 'available_moments', '=', 'set', '(', '[', 'm', 'for', 'scan', 'in', 'scan_info', 'for', 'm', 'in', 'scan', '[', "'moments'", ']', ']', ')', 'interpolate', '=', '_find_scans_to_interp', '(', 'scan_info', ',', 'first_gate', ',', 'gate_spacing', ',', 'filemetadata', ')', 'fields', '=', '{', '}', 'for', 'moment', 'in', 'available_moments', ':', '5INDENT', 'field_name', '=', 'filemetadata', '.', 'get_field_name', '(', 'moment', ')', 'if', 'field_name', 'is', 'None', ':', '5INDENT', 'continue', '6DEDENT', 'dic', '=', 'filemetadata', '(', 'field_name', ')', 'dic', '[', "'_FillValue'", ']', '=', 'get_fillvalue', '(', ')', 'if', 'delay_field_loading', 'and', 'moment', 'not', 'in', 'interpolate', ':', '5INDENT', 'dic', '=', 'LazyLoadDict', '(', 'dic', ')', 'data_call', '=', '_NEXRADLevel2StagedField', '(', 'nfile', ',', 'moment', ',', 'max_ngates', ',', 'scans', ')', 'dic', '.', 'set_lazy', '(', "'data'", ',', 'data_call', ')', '6DEDENT', 'else', ':', '5INDENT', 'mdata', '=', 'nfile', '.', 'get_data', '(', 'moment', ',', 'max_ngates', ',', 'scans', '=', 'scans', ')', 'if', 'moment', 'in', 'interpolate', ':', '5INDENT', 'interp_scans', '=', 'interpolate', '[', 'moment', ']', 'warnings', '.', 'warn', '(', '"Gate spacing is not constant, interpolating data in "', '+', '"scans %s for moment %s."', '%', '(', 'interp_scans', ',', 'moment', ')', ',', 'UserWarning', ')', 'for', 'scan', 'in', 'interp_scans', ':', '5INDENT', 'idx', '=', 'scan_info', '[', 'scan', ']', '[', "'moments'", ']', '.', 'index', '(', 'moment', ')', 'moment_ngates', '=', 'scan_info', '[', 'scan', ']', '[', "'ngates'", ']', '[', 'idx', ']', 'start', '=', 'sweep_start_ray_index', '[', "'data'", ']', '[', 'scan', ']', 'end', '=', 'sweep_end_ray_index', '[', "'data'", ']', '[', 'scan', ']', '_interpolate_scan', '(', 'mdata', ',', 'start', ',', 'end', ',', 'moment_ngates', ',', 'linear_interp', ')', '6DEDENT', '6DEDENT', 'dic', '[', "'data'", ']', '=', 'mdata', '6DEDENT', 'fields', '[', 'field_name', ']', '=', 'dic', '6DEDENT', 'nyquist_velocity', '=', 'filemetadata', '(', "'nyquist_velocity'", ')', 'unambiguous_range', '=', 'filemetadata', '(', "'unambiguous_range'", ')', 'nyquist_velocity', '[', "'data'", ']', '=', 'nfile', '.', 'get_nyquist_vel', '(', 'scans', ')', '.', 'astype', '(', "'float32'", ')', 'unambiguous_range', '[', "'data'", ']', '=', '(', 'nfile', '.', 'get_unambigous_range', '(', 'scans', ')', '.', 'astype', '(', "'float32'", ')', ')', 'instrument_parameters', '=', '{', "'unambiguous_range'", ':', 'unambiguous_range', ',', "'nyquist_velocity'", ':', 'nyquist_velocity', ',', '}', 'nfile', '.', 'close', '(', ')', 'return', 'Radar', '(', 'time', ',', '_range', ',', 'fields', ',', 'metadata', ',', 'scan_type', ',', 'latitude', ',', 'longitude', ',', 'altitude', ',', 'sweep_number', ',', 'sweep_mode', ',', 'fixed_angle', ',', 'sweep_start_ray_index', ',', 'sweep_end_ray_index', ',', 'azimuth', ',', 'elevation', ',', 'instrument_parameters', '=', 'instrument_parameters', ')', '6DEDENT', 'def', '_find_range_params', '(', 'scan_info', ',', 'filemetadata', ')', ':', '5INDENT', '""" Return range parameters, first_gate, gate_spacing, last_gate. """', 'min_first_gate', '=', '999999', 'min_gate_spacing', '=', '999999', 'max_last_gate', '=', '0', 'for', 'scan_params', 'in', 'scan_info', ':', '5INDENT', 'ngates', '=', 'scan_params', '[', "'ngates'", ']', '[', '0', ']', 'for', 'i', ',', 'moment', 'in', 'enumerate', '(', 'scan_params', '[', "'moments'", ']', ')', ':', '5INDENT', 'if', 'filemetadata', '.', 'get_field_name', '(', 'moment', ')', 'is', 'None', ':', '5INDENT', 'continue', '6DEDENT', 'first_gate', '=', 'scan_params', '[', "'first_gate'", ']', '[', 'i', ']', 'gate_spacing', '=', 'scan_params', '[', "'gate_spacing'", ']', '[', 'i', ']', 'last_gate', '=', 'first_gate', '+', 'gate_spacing', '*', '(', 'ngates', '-', '0.5', ')', 'min_first_gate', '=', 'min', '(', 'min_first_gate', ',', 'first_gate', ')', 'min_gate_spacing', '=', 'min', '(', 'min_gate_spacing', ',', 'gate_spacing', ')', 'max_last_gate', '=', 'max', '(', 'max_last_gate', ',', 'last_gate', ')', '6DEDENT', '6DEDENT', 'return', 'min_first_gate', ',', 'min_gate_spacing', ',', 'max_last_gate', '6DEDENT', 'def', '_find_scans_to_interp', '(', 'scan_info', ',', 'first_gate', ',', 'gate_spacing', ',', 'filemetadata', ')', ':', '5INDENT', '""" Return a dict indicating what moments/scans need interpolation.  """', 'moments', '=', 'set', '(', '[', 'm', 'for', 'scan', 'in', 'scan_info', 'for', 'm', 'in', 'scan', '[', "'moments'", ']', ']', ')', 'interpolate', '=', 'dict', '(', '[', '(', 'moment', ',', '[', ']', ')', 'for', 'moment', 'in', 'moments', ']', ')', 'for', 'scan_num', ',', 'scan', 'in', 'enumerate', '(', 'scan_info', ')', ':', '5INDENT', 'for', 'moment', 'in', 'moments', ':', '5INDENT', 'if', 'moment', 'not', 'in', 'scan', '[', "'moments'", ']', ':', '5INDENT', 'continue', '6DEDENT', 'if', 'filemetadata', '.', 'get_field_name', '(', 'moment', ')', 'is', 'None', ':', '5INDENT', 'continue', '6DEDENT', 'index', '=', 'scan', '[', "'moments'", ']', '.', 'index', '(', 'moment', ')', 'first', '=', 'scan', '[', "'first_gate'", ']', '[', 'index', ']', 'spacing', '=', 'scan', '[', "'gate_spacing'", ']', '[', 'index', ']', 'if', 'first', '!=', 'first_gate', 'or', 'spacing', '!=', 'gate_spacing', ':', '5INDENT', 'interpolate', '[', 'moment', ']', '.', 'append', '(', 'scan_num', ')', 'assert', 'spacing', '==', 'gate_spacing', '*', '4', 'assert', 'first_gate', '+', '1.5', '*', 'gate_spacing', '==', 'first', '6DEDENT', '6DEDENT', '6DEDENT', 'interpolate', '=', 'dict', '(', '[', '(', 'k', ',', 'v', ')', 'for', 'k', ',', 'v', 'in', 'interpolate', '.', 'items', '(', ')', 'if', 'len', '(', 'v', ')', '!=', '0', ']', ')', 'return', 'interpolate', '6DEDENT', 'def', '_interpolate_scan', '(', 'mdata', ',', 'start', ',', 'end', ',', 'moment_ngates', ',', 'linear_interp', '=', 'True', ')', ':', '5INDENT', '""" Interpolate a single NEXRAD moment scan from 1000 m to 250 m. """', 'for', 'ray_num', 'in', 'range', '(', 'start', ',', 'end', '+', '1', ')', ':', '5INDENT', 'ray', '=', 'mdata', '[', 'ray_num', ']', '.', 'copy', '(', ')', 'interp_ngates', '=', '4', '*', 'moment_ngates', 'ray', '[', ':', 'interp_ngates', ']', '=', 'np', '.', 'repeat', '(', 'ray', '[', ':', 'moment_ngates', ']', ',', '4', ')', 'if', 'linear_interp', ':', '5INDENT', 'for', 'i', 'in', 'range', '(', '2', ',', 'interp_ngates', '-', '4', ',', '4', ')', ':', '5INDENT', 'gate_val', '=', 'ray', '[', 'i', ']', 'next_val', '=', 'ray', '[', 'i', '+', '4', ']', 'if', 'np', '.', 'ma', '.', 'is_masked', '(', 'gate_val', ')', 'or', 'np', '.', 'ma', '.', 'is_masked', '(', 'next_val', ')', ':', '5INDENT', 'continue', '6DEDENT', 'delta', '=', '(', 'next_val', '-', 'gate_val', ')', '/', '4.', 'ray', '[', 'i', '+', '0', ']', '=', 'gate_val', '+', 'delta', '*', '0.5', 'ray', '[', 'i', '+', '1', ']', '=', 'gate_val', '+', 'delta', '*', '1.5', 'ray', '[', 'i', '+', '2', ']', '=', 'gate_val', '+', 'delta', '*', '2.5', 'ray', '[', 'i', '+', '3', ']', '=', 'gate_val', '+', 'delta', '*', '3.5', '6DEDENT', '6DEDENT', 'mdata', '[', 'ray_num', ']', '=', 'ray', '[', ':', ']', '6DEDENT', '6DEDENT', 'class', '_NEXRADLevel2StagedField', '(', 'object', ')', ':', '5INDENT', '"""\n    A class to facilitate on demand loading of field data from a Level 2 file.\n    """', 'def', '__init__', '(', 'self', ',', 'nfile', ',', 'moment', ',', 'max_ngates', ',', 'scans', ')', ':', '5INDENT', '""" initialize. """', 'self', '.', 'nfile', '=', 'nfile', 'self', '.', 'moment', '=', 'moment', 'self', '.', 'max_ngates', '=', 'max_ngates', 'self', '.', 'scans', '=', 'scans', '6DEDENT', 'def', '__call__', '(', 'self', ')', ':', '5INDENT', '""" Return the array containing the field data. """', 'return', 'self', '.', 'nfile', '.', 'get_data', '(', 'self', '.', 'moment', ',', 'self', '.', 'max_ngates', ',', 'scans', '=', 'self', '.', 'scans', ')', '6DEDENT', '6DEDENT'], 'nodes': ['/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/io/nexrad_archive.py', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/retrieve/setup.py', 'configuration', 'steiner_echo_gen_source', '__main__', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/retrieve/simple_moment_calculations.py', 'calculate_snr_from_reflectivity', 'retrieve', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/retrieve/__init__.py', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/exceptions.py', 'MissingOptionalDependency', 'DeprecatedAttribute', 'DeprecatedFunctionName', '_deprecated_alias', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/aux_io/radx.py', 'read_radx', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/aux_io/gamic_hdf5.py', 'read_gamic', '_get_instrument_params', '_avg_radial_angles', '_prt_mode_from_unfolding', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/aux_io/pattern.py', 'read_pattern', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/aux_io/sinarame_h5.py', 'read_sinarame_h5', '_get_SINARAME_h5_sweep_data', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/aux_io/noxp_iphex_nc.py', 'read_noxp_iphex_nc', '_ncvar_to_dict', 'aux_io', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/aux_io/__init__.py', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/graph/gridmapdisplay.py', 'GridMapDisplay', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/graph/_cm.py', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/graph/common.py', 'parse_ax', 'parse_ax_fig', 'parse_norm_vmin_vmax', 'parse_cmap', 'parse_vmin_vmax', 'parse_lon_lat', 'generate_colorbar_label', 'generate_field_name', 'generate_radar_name', 'generate_grid_name', 'generate_radar_time_begin', 'generate_grid_time_begin', 'generate_filename', 'generate_grid_filename', 'generate_title', 'generate_grid_title', 'generate_longitudinal_level_title', 'generate_latitudinal_level_title', 'generate_vpt_title', 'generate_ray_title', 'generate_az_rhi_title', 'set_limits', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/graph/radardisplay.py', 'RadarDisplay', '_mask_outside', 'graph', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/graph/__init__.py', 'RadarDisplay_Airborne', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/graph/radardisplay_airborne.py', 'AirborneRadarDisplay', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/correct/attenuation.py', 'calculate_attenuation', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/core/setup.py', 'configuration', '__main__', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/core/radar.py', 'Radar', '_rays_per_sweep_data_factory', '_gate_data_factory', '_gate_lon_lat_data_factory', '_gate_altitude_data_factory', 'core', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/core/__init__.py', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/config.py', 'load_config', 'get_metadata', 'get_fillvalue', 'get_field_name', 'get_field_colormap', 'get_field_limits', 'get_field_mapping', 'FileMetadata', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/map/gates_to_grid.py', 'map_gates_to_grid', '_detemine_cy_weighting_func', '_find_projparams', '_parse_gatefilters', '_determine_fields', '_find_offsets', '_find_grid_params', '_parse_roi_func', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/map/setup.py', 'configuration', '__main__', 'map', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/map/__init__.py', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/io/_sigmet_noaa_hh.py', '_decode_noaa_hh_hdr', '_georeference_yprime', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/io/cfradial.py', 'read_cfradial', '_find_all_meta_group_vars', '_ncvar_to_dict', '_NetCDFVariableDataExtractor', '_unpack_variable_gate_field_dic', 'write_cfradial', '_create_ncvar', '_calculate_scale_and_offset', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/io/output_to_geotiff.py', 'write_grid_geotiff', '_get_rgb_values', '_create_sld', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/io/sigmet.py', 'read_sigmet', '_is_time_ordered_by_reversal', '_is_time_ordered_by_roll', '_is_time_ordered_by_reverse_roll', '_time_order_data_and_metadata_roll', '_time_order_data_and_metadata_reverse', '_time_order_data_and_metadata_full', 'ymds_time_to_datetime', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/io/nexrad_common.py', 'get_nexrad_location', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/io/uf_write.py', 'write_uf', '_find_field_mapping', 'UFRayCreator', '_d_to_dms', '_pack_structure', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/io/mdv_radar.py', 'read_mdv', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/io/rsl.py', 'read_rsl', '_dms_to_d', '_RslVolumeDataExtractor', 'read_nexrad_archive', '_find_range_params', '_find_scans_to_interp', '_interpolate_scan', '_NEXRADLevel2StagedField', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/io/uf.py', 'read_uf', '_get_instrument_parameters', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/util/radar_utils.py', 'is_vpt', 'to_vpt', 'join_radar', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/util/setup.py', 'configuration', '__main__', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/util/xsect.py', 'cross_section_ppi', '_copy_dic', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/util/met.py', 'nth_smallest', 'get_best_sounding', 'util', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/util/__init__.py'], 'edges': [[1, 7], [2, 1], [3, 1], [4, 1], [5, 7], [6, 5], [8, 7], [10, 9], [11, 9], [12, 9], [13, 9], [14, 29], [15, 14], [16, 29], [17, 16], [18, 16], [19, 16], [20, 16], [21, 29], [22, 21], [23, 29], [24, 23], [25, 23], [26, 29], [27, 26], [28, 26], [30, 29], [31, 60], [32, 31], [33, 60], [34, 60], [35, 34], [36, 34], [37, 34], [38, 34], [39, 34], [40, 34], [41, 34], [42, 34], [43, 34], [44, 34], [45, 34], [46, 34], [47, 34], [48, 34], [49, 34], [50, 34], [51, 34], [52, 34], [53, 34], [54, 34], [55, 34], [56, 34], [57, 60], [58, 57], [59, 57], [61, 60], [62, 61], [63, 60], [64, 63], [66, 65], [67, 76], [68, 67], [69, 67], [70, 76], [71, 70], [72, 70], [73, 70], [74, 70], [75, 70], [77, 76], [79, 78], [80, 78], [81, 78], [82, 78], [83, 78], [84, 78], [85, 78], [86, 78], [87, 99], [88, 87], [89, 87], [90, 87], [91, 87], [92, 87], [93, 87], [94, 87], [95, 87], [96, 99], [97, 96], [98, 96], [100, 99], [102, 101], [103, 101], [105, 104], [106, 104], [107, 104], [108, 104], [109, 104], [110, 104], [111, 104], [112, 104], [114, 113], [115, 113], [116, 113], [118, 117], [119, 117], [120, 117], [121, 117], [122, 117], [123, 117], [124, 117], [125, 117], [127, 126], [129, 128], [130, 128], [131, 128], [132, 128], [133, 128], [135, 134], [137, 136], [138, 136], [139, 136], [140, 0], [141, 0], [142, 0], [143, 0], [144, 0], [146, 145], [147, 145], [148, 161], [149, 148], [150, 148], [151, 148], [152, 161], [153, 152], [154, 152], [155, 161], [156, 155], [157, 155], [158, 161], [159, 158], [160, 158], [162, 161], [11, 57], [34, 57], [86, 117], [71, 117], [81, 117], [101, 117], [119, 118], [120, 118], [121, 118], [71, 118], [81, 118], [122, 118], [86, 118], [123, 118], [124, 118], [102, 118], [125, 118], [153, 154], [157, 156], [71, 77], [13, 77], [13, 77], [148, 77], [79, 78], [159, 160], [149, 162], [150, 162], [156, 162], [151, 162], [85, 128], [131, 129], [130, 129], [85, 130], [3, 2], [2, 4], [80, 5], [82, 5], [80, 6], [82, 6], [6, 8], [86, 16], [71, 16], [81, 16], [10, 16], [19, 17], [71, 17], [81, 17], [10, 17], [86, 17], [18, 17], [71, 87], [91, 88], [92, 88], [93, 88], [94, 88], [71, 88], [95, 88], [89, 88], [90, 88], [20, 18], [86, 21], [71, 21], [71, 22], [86, 22], [86, 134], [71, 134], [81, 134], [71, 135], [81, 135], [86, 135], [86, 23], [71, 23], [81, 23], [10, 23], [25, 24], [71, 24], [81, 24], [10, 24], [86, 24], [97, 98], [88, 100], [103, 102], [58, 61], [64, 61], [32, 61], [58, 63], [34, 63], [86, 136], [71, 136], [81, 136], [10, 136], [71, 137], [81, 137], [10, 137], [86, 137], [138, 137], [139, 137], [86, 26], [71, 26], [71, 27], [86, 27], [28, 27], [24, 30], [27, 30], [17, 30], [22, 30], [15, 30], [10, 31], [11, 31], [34, 31], [80, 65], [81, 65], [82, 65], [80, 66], [81, 66], [82, 66], [86, 0], [71, 0], [81, 0], [127, 0], [141, 140], [142, 140], [71, 140], [143, 140], [81, 140], [86, 140], [144, 140], [127, 140], [86, 145], [71, 145], [81, 145], [86, 104], [71, 104], [71, 105], [86, 105], [106, 105], [107, 105], [109, 105], [71, 146], [81, 146], [86, 146], [147, 146], [108, 107], [83, 34], [84, 34], [13, 34], [13, 34], [111, 110], [39, 37], [83, 38], [84, 39], [68, 69], [80, 70], [112, 111], [43, 47], [45, 47], [44, 48], [46, 48], [10, 113], [10, 114], [115, 114], [116, 114], [43, 49], [45, 49], [42, 49], [44, 50], [46, 50], [42, 50], [44, 51], [46, 51], [42, 51], [44, 52], [46, 52], [42, 52], [43, 53], [45, 53], [42, 53], [43, 54], [45, 54], [42, 54], [43, 55], [45, 55], [42, 55]], 'crossEdges': [[140, 49], [141, 870], [142, 993], [143, 1182], [144, 1371]]}
{'path': 'data/ARM-DOE/pyart/pyart/io/uf.py', 'tokens': ['"""\npyart.io.uf\n===========\n\nReading of Universal format (UF) files\n\n.. autosummary::\n    :toctree: generated/\n\n    read_uf\n    _get_instrument_parameters\n\n"""', 'import', 'warnings', 'import', 'numpy', 'as', 'np', 'from', 'netCDF4', 'import', 'date2num', 'from', '.', '.', 'config', 'import', 'FileMetadata', ',', 'get_fillvalue', 'from', '.', '.', 'core', '.', 'radar', 'import', 'Radar', 'from', '.', 'common', 'import', 'make_time_unit_str', ',', '_test_arguments', ',', 'prepare_for_read', 'from', '.', 'uffile', 'import', 'UFFile', '_LIGHT_SPEED', '=', '2.99792458e8', '_UF_SWEEP_MODES', '=', '{', '0', ':', "'calibration'", ',', '1', ':', "'ppi'", ',', '2', ':', "'coplane'", ',', '3', ':', "'rhi'", ',', '4', ':', "'vpt'", ',', '5', ':', "'target'", ',', '6', ':', "'manual'", ',', '7', ':', "'idle'", ',', '}', '_SWEEP_MODE_STR', '=', '{', "'calibration'", ':', "'calibration'", ',', "'ppi'", ':', "'azimuth_surveillance'", ',', "'coplane'", ':', "'coplane'", ',', "'rhi'", ':', "'rhi'", ',', "'vpt'", ':', "'vertical_pointing'", ',', "'target'", ':', "'pointing'", ',', "'manual'", ':', "'manual'", ',', "'idle'", ':', "'idle'", ',', '}', 'def', 'read_uf', '(', 'filename', ',', 'field_names', '=', 'None', ',', 'additional_metadata', '=', 'None', ',', 'file_field_names', '=', 'False', ',', 'exclude_fields', '=', 'None', ',', 'delay_field_loading', '=', 'False', ',', '**', 'kwargs', ')', ':', '5INDENT', '"""\n    Read a UF File.\n\n    Parameters\n    ----------\n    filename : str or file-like\n        Name of Universal format file to read data from.\n    field_names : dict, optional\n        Dictionary mapping UF data type names to radar field names. If a\n        data type found in the file does not appear in this dictionary or has\n        a value of None it will not be placed in the radar.fields dictionary.\n        A value of None, the default, will use the mapping defined in the\n        Py-ART configuration file.\n    additional_metadata : dict of dicts, optional\n        Dictionary of dictionaries to retrieve metadata from during this read.\n        This metadata is not used during any successive file reads unless\n        explicitly included.  A value of None, the default, will not\n        introduce any addition metadata and the file specific or default\n        metadata as specified by the Py-ART configuration file will be used.\n    file_field_names : bool, optional\n        True to force the use of the field names from the file in which\n        case the `field_names` parameter is ignored. False will use to\n        `field_names` parameter to rename fields.\n    exclude_fields : list or None, optional\n        List of fields to exclude from the radar object. This is applied\n        after the `file_field_names` and `field_names` parameters.\n    delay_field_loading : bool\n        This option is not implemented in the function but included for\n        compatibility.\n\n    Returns\n    -------\n    radar : Radar\n        Radar object.\n\n    """', '_test_arguments', '(', 'kwargs', ')', 'filemetadata', '=', 'FileMetadata', '(', "'uf'", ',', 'field_names', ',', 'additional_metadata', ',', 'file_field_names', ',', 'exclude_fields', ')', 'ufile', '=', 'UFFile', '(', 'prepare_for_read', '(', 'filename', ')', ')', 'first_ray', '=', 'ufile', '.', 'rays', '[', '0', ']', 'dts', '=', 'ufile', '.', 'get_datetimes', '(', ')', 'units', '=', 'make_time_unit_str', '(', 'min', '(', 'dts', ')', ')', 'time', '=', 'filemetadata', '(', "'time'", ')', 'time', '[', "'units'", ']', '=', 'units', 'time', '[', "'data'", ']', '=', 'date2num', '(', 'dts', ',', 'units', ')', '.', 'astype', '(', "'float32'", ')', '_range', '=', 'filemetadata', '(', "'range'", ')', 'field_header', '=', 'first_ray', '.', 'field_headers', '[', '0', ']', 'ngates', '=', 'field_header', '[', "'nbins'", ']', 'step', '=', 'field_header', '[', "'range_spacing_m'", ']', 'start', '=', '(', 'field_header', '[', "'range_start_km'", ']', '*', '1000.', '+', 'field_header', '[', "'range_start_m'", ']', '+', 'step', '/', '2.', ')', '_range', '[', "'data'", ']', '=', 'np', '.', 'arange', '(', 'ngates', ',', 'dtype', '=', "'float32'", ')', '*', 'step', '+', 'start', '_range', '[', "'meters_to_center_of_first_gate'", ']', '=', 'start', '_range', '[', "'meters_between_gates'", ']', '=', 'step', 'latitude', '=', 'filemetadata', '(', "'latitude'", ')', 'longitude', '=', 'filemetadata', '(', "'longitude'", ')', 'altitude', '=', 'filemetadata', '(', "'altitude'", ')', 'lat', ',', 'lon', ',', 'height', '=', 'first_ray', '.', 'get_location', '(', ')', 'latitude', '[', "'data'", ']', '=', 'np', '.', 'array', '(', '[', 'lat', ']', ',', 'dtype', '=', "'float64'", ')', 'longitude', '[', "'data'", ']', '=', 'np', '.', 'array', '(', '[', 'lon', ']', ',', 'dtype', '=', "'float64'", ')', 'altitude', '[', "'data'", ']', '=', 'np', '.', 'array', '(', '[', 'height', ']', ',', 'dtype', '=', "'float64'", ')', 'metadata', '=', 'filemetadata', '(', "'metadata'", ')', 'metadata', '[', "'original_container'", ']', '=', "'UF'", 'metadata', '[', "'site_name'", ']', '=', 'first_ray', '.', 'mandatory_header', '[', "'site_name'", ']', 'metadata', '[', "'radar_name'", ']', '=', 'first_ray', '.', 'mandatory_header', '[', "'radar_name'", ']', 'sweep_start_ray_index', '=', 'filemetadata', '(', "'sweep_start_ray_index'", ')', 'sweep_end_ray_index', '=', 'filemetadata', '(', "'sweep_end_ray_index'", ')', 'sweep_start_ray_index', '[', "'data'", ']', '=', 'ufile', '.', 'first_ray_in_sweep', 'sweep_end_ray_index', '[', "'data'", ']', '=', 'ufile', '.', 'last_ray_in_sweep', 'sweep_number', '=', 'filemetadata', '(', "'sweep_number'", ')', 'sweep_number', '[', "'data'", ']', '=', 'np', '.', 'arange', '(', 'ufile', '.', 'nsweeps', ',', 'dtype', '=', "'int32'", ')', 'scan_type', '=', '_UF_SWEEP_MODES', '[', 'first_ray', '.', 'mandatory_header', '[', "'sweep_mode'", ']', ']', 'sweep_mode', '=', 'filemetadata', '(', "'sweep_mode'", ')', 'sweep_mode', '[', "'data'", ']', '=', 'np', '.', 'array', '(', 'ufile', '.', 'nsweeps', '*', '[', '_SWEEP_MODE_STR', '[', 'scan_type', ']', ']', ',', 'dtype', '=', "'S'", ')', 'elevation', '=', 'filemetadata', '(', "'elevation'", ')', 'elevation', '[', "'data'", ']', '=', 'ufile', '.', 'get_elevations', '(', ')', 'azimuth', '=', 'filemetadata', '(', "'azimuth'", ')', 'azimuth', '[', "'data'", ']', '=', 'ufile', '.', 'get_azimuths', '(', ')', 'fixed_angle', '=', 'filemetadata', '(', "'fixed_angle'", ')', 'fixed_angle', '[', "'data'", ']', '=', 'ufile', '.', 'get_sweep_fixed_angles', '(', ')', 'fields', '=', '{', '}', 'for', 'uf_field_number', ',', 'uf_field_dic', 'in', 'enumerate', '(', 'first_ray', '.', 'field_positions', ')', ':', '5INDENT', 'uf_field_name', '=', 'uf_field_dic', '[', "'data_type'", ']', '.', 'decode', '(', "'ascii'", ')', 'field_name', '=', 'filemetadata', '.', 'get_field_name', '(', 'uf_field_name', ')', 'if', 'field_name', 'is', 'None', ':', '5INDENT', 'continue', '6DEDENT', 'field_dic', '=', 'filemetadata', '(', 'field_name', ')', 'field_dic', '[', "'data'", ']', '=', 'ufile', '.', 'get_field_data', '(', 'uf_field_number', ')', 'field_dic', '[', "'_FillValue'", ']', '=', 'get_fillvalue', '(', ')', 'fields', '[', 'field_name', ']', '=', 'field_dic', '6DEDENT', 'instrument_parameters', '=', '_get_instrument_parameters', '(', 'ufile', ',', 'filemetadata', ')', 'scan_rate', '=', 'filemetadata', '(', "'scan_rate'", ')', 'scan_rate', '[', "'data'", ']', '=', 'ufile', '.', 'get_sweep_rates', '(', ')', 'ufile', '.', 'close', '(', ')', 'return', 'Radar', '(', 'time', ',', '_range', ',', 'fields', ',', 'metadata', ',', 'scan_type', ',', 'latitude', ',', 'longitude', ',', 'altitude', ',', 'sweep_number', ',', 'sweep_mode', ',', 'fixed_angle', ',', 'sweep_start_ray_index', ',', 'sweep_end_ray_index', ',', 'azimuth', ',', 'elevation', ',', 'scan_rate', '=', 'scan_rate', ',', 'instrument_parameters', '=', 'instrument_parameters', ')', '6DEDENT', 'def', '_get_instrument_parameters', '(', 'ufile', ',', 'filemetadata', ')', ':', '5INDENT', '""" Return a dictionary containing instrument parameters. """', 'pulse_width', '=', 'filemetadata', '(', "'pulse_width'", ')', 'pulse_width', '[', "'data'", ']', '=', 'ufile', '.', 'get_pulse_widths', '(', ')', '/', '_LIGHT_SPEED', 'first_ray', '=', 'ufile', '.', 'rays', '[', '0', ']', 'field_header', '=', 'first_ray', '.', 'field_headers', '[', '0', ']', 'beam_width_h', '=', 'field_header', '[', "'beam_width_h'", ']', '/', '64.', 'beam_width_v', '=', 'field_header', '[', "'beam_width_v'", ']', '/', '64.', 'bandwidth', '=', 'field_header', '[', "'bandwidth'", ']', '/', '16.', '*', '1.e6', 'wavelength_cm', '=', 'field_header', '[', "'wavelength_cm'", ']', '/', '64.', 'if', 'wavelength_cm', '==', '0', ':', '5INDENT', 'warnings', '.', 'warn', '(', "'Invalid wavelength, frequency set to default value.'", ')', 'wavelength_hz', '=', '9999.0', '6DEDENT', 'else', ':', '5INDENT', 'wavelength_hz', '=', '_LIGHT_SPEED', '/', '(', 'wavelength_cm', '/', '100.', ')', '6DEDENT', 'radar_beam_width_h', '=', 'filemetadata', '(', "'radar_beam_width_h'", ')', 'radar_beam_width_h', '[', "'data'", ']', '=', 'np', '.', 'array', '(', '[', 'beam_width_h', ']', ',', 'dtype', '=', "'float32'", ')', 'radar_beam_width_v', '=', 'filemetadata', '(', "'radar_beam_width_w'", ')', 'radar_beam_width_v', '[', "'data'", ']', '=', 'np', '.', 'array', '(', '[', 'beam_width_v', ']', ',', 'dtype', '=', "'float32'", ')', 'radar_receiver_bandwidth', '=', 'filemetadata', '(', "'radar_receiver_bandwidth'", ')', 'radar_receiver_bandwidth', '[', "'data'", ']', '=', 'np', '.', 'array', '(', '[', 'bandwidth', ']', ',', 'dtype', '=', "'float32'", ')', 'polarization_mode', '=', 'filemetadata', '(', "'polarization_mode'", ')', 'polarization_mode', '[', "'data'", ']', '=', 'ufile', '.', 'get_sweep_polarizations', '(', ')', 'frequency', '=', 'filemetadata', '(', "'frequency'", ')', 'frequency', '[', "'data'", ']', '=', 'np', '.', 'array', '(', '[', 'wavelength_hz', ']', ',', 'dtype', '=', "'float32'", ')', 'prt', '=', 'filemetadata', '(', "'prt'", ')', 'prt', '[', "'data'", ']', '=', 'ufile', '.', 'get_prts', '(', ')', '/', '1e6', 'instrument_parameters', '=', '{', "'pulse_width'", ':', 'pulse_width', ',', "'radar_beam_width_h'", ':', 'radar_beam_width_h', ',', "'radar_beam_width_v'", ':', 'radar_beam_width_v', ',', "'radar_receiver_bandwidth'", ':', 'radar_receiver_bandwidth', ',', "'polarization_mode'", ':', 'polarization_mode', ',', "'frequency'", ':', 'frequency', ',', "'prt'", ':', 'prt', ',', '}', 'nyquist_velocity', '=', 'filemetadata', '(', "'nyquist_velocity'", ')', 'nyquist_velocity', '[', "'data'", ']', '=', 'ufile', '.', 'get_nyquists', '(', ')', 'if', 'nyquist_velocity', '[', "'data'", ']', 'is', 'not', 'None', ':', '5INDENT', 'instrument_parameters', '[', "'nyquist_velocity'", ']', '=', 'nyquist_velocity', '6DEDENT', 'return', 'instrument_parameters', '6DEDENT'], 'nodes': ['/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/io/uf.py', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/retrieve/setup.py', 'configuration', 'steiner_echo_gen_source', '__main__', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/retrieve/simple_moment_calculations.py', 'calculate_snr_from_reflectivity', 'retrieve', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/retrieve/__init__.py', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/exceptions.py', 'MissingOptionalDependency', 'DeprecatedAttribute', 'DeprecatedFunctionName', '_deprecated_alias', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/aux_io/radx.py', 'read_radx', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/aux_io/gamic_hdf5.py', 'read_gamic', '_get_instrument_params', '_avg_radial_angles', '_prt_mode_from_unfolding', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/aux_io/pattern.py', 'read_pattern', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/aux_io/sinarame_h5.py', 'read_sinarame_h5', '_get_SINARAME_h5_sweep_data', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/aux_io/noxp_iphex_nc.py', 'read_noxp_iphex_nc', '_ncvar_to_dict', 'aux_io', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/aux_io/__init__.py', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/graph/gridmapdisplay.py', 'GridMapDisplay', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/graph/_cm.py', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/graph/common.py', 'parse_ax', 'parse_ax_fig', 'parse_norm_vmin_vmax', 'parse_cmap', 'parse_vmin_vmax', 'parse_lon_lat', 'generate_colorbar_label', 'generate_field_name', 'generate_radar_name', 'generate_grid_name', 'generate_radar_time_begin', 'generate_grid_time_begin', 'generate_filename', 'generate_grid_filename', 'generate_title', 'generate_grid_title', 'generate_longitudinal_level_title', 'generate_latitudinal_level_title', 'generate_vpt_title', 'generate_ray_title', 'generate_az_rhi_title', 'set_limits', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/graph/radardisplay.py', 'RadarDisplay', '_mask_outside', 'graph', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/graph/__init__.py', 'RadarDisplay_Airborne', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/graph/radardisplay_airborne.py', 'AirborneRadarDisplay', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/correct/attenuation.py', 'calculate_attenuation', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/core/setup.py', 'configuration', '__main__', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/core/radar.py', 'Radar', '_rays_per_sweep_data_factory', '_gate_data_factory', '_gate_lon_lat_data_factory', '_gate_altitude_data_factory', 'core', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/core/__init__.py', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/config.py', 'load_config', 'get_metadata', 'get_fillvalue', 'get_field_name', 'get_field_colormap', 'get_field_limits', 'get_field_mapping', 'FileMetadata', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/map/gates_to_grid.py', 'map_gates_to_grid', '_detemine_cy_weighting_func', '_find_projparams', '_parse_gatefilters', '_determine_fields', '_find_offsets', '_find_grid_params', '_parse_roi_func', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/map/setup.py', 'configuration', '__main__', 'map', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/map/__init__.py', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/io/_sigmet_noaa_hh.py', '_decode_noaa_hh_hdr', '_georeference_yprime', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/io/cfradial.py', 'read_cfradial', '_find_all_meta_group_vars', '_ncvar_to_dict', '_NetCDFVariableDataExtractor', '_unpack_variable_gate_field_dic', 'write_cfradial', '_create_ncvar', '_calculate_scale_and_offset', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/io/output_to_geotiff.py', 'write_grid_geotiff', '_get_rgb_values', '_create_sld', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/io/sigmet.py', 'read_sigmet', '_is_time_ordered_by_reversal', '_is_time_ordered_by_roll', '_is_time_ordered_by_reverse_roll', '_time_order_data_and_metadata_roll', '_time_order_data_and_metadata_reverse', '_time_order_data_and_metadata_full', 'ymds_time_to_datetime', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/io/nexrad_common.py', 'get_nexrad_location', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/io/uf_write.py', 'write_uf', '_find_field_mapping', 'UFRayCreator', '_d_to_dms', '_pack_structure', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/io/mdv_radar.py', 'read_mdv', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/io/rsl.py', 'read_rsl', '_dms_to_d', '_RslVolumeDataExtractor', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/io/nexrad_archive.py', 'read_nexrad_archive', '_find_range_params', '_find_scans_to_interp', '_interpolate_scan', '_NEXRADLevel2StagedField', 'read_uf', '_get_instrument_parameters', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/util/radar_utils.py', 'is_vpt', 'to_vpt', 'join_radar', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/util/setup.py', 'configuration', '__main__', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/util/xsect.py', 'cross_section_ppi', '_copy_dic', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/util/met.py', 'nth_smallest', 'get_best_sounding', 'util', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/util/__init__.py'], 'edges': [[1, 7], [2, 1], [3, 1], [4, 1], [5, 7], [6, 5], [8, 7], [10, 9], [11, 9], [12, 9], [13, 9], [14, 29], [15, 14], [16, 29], [17, 16], [18, 16], [19, 16], [20, 16], [21, 29], [22, 21], [23, 29], [24, 23], [25, 23], [26, 29], [27, 26], [28, 26], [30, 29], [31, 60], [32, 31], [33, 60], [34, 60], [35, 34], [36, 34], [37, 34], [38, 34], [39, 34], [40, 34], [41, 34], [42, 34], [43, 34], [44, 34], [45, 34], [46, 34], [47, 34], [48, 34], [49, 34], [50, 34], [51, 34], [52, 34], [53, 34], [54, 34], [55, 34], [56, 34], [57, 60], [58, 57], [59, 57], [61, 60], [62, 61], [63, 60], [64, 63], [66, 65], [67, 76], [68, 67], [69, 67], [70, 76], [71, 70], [72, 70], [73, 70], [74, 70], [75, 70], [77, 76], [79, 78], [80, 78], [81, 78], [82, 78], [83, 78], [84, 78], [85, 78], [86, 78], [87, 99], [88, 87], [89, 87], [90, 87], [91, 87], [92, 87], [93, 87], [94, 87], [95, 87], [96, 99], [97, 96], [98, 96], [100, 99], [102, 101], [103, 101], [105, 104], [106, 104], [107, 104], [108, 104], [109, 104], [110, 104], [111, 104], [112, 104], [114, 113], [115, 113], [116, 113], [118, 117], [119, 117], [120, 117], [121, 117], [122, 117], [123, 117], [124, 117], [125, 117], [127, 126], [129, 128], [130, 128], [131, 128], [132, 128], [133, 128], [135, 134], [137, 136], [138, 136], [139, 136], [141, 140], [142, 140], [143, 140], [144, 140], [145, 140], [146, 0], [147, 0], [148, 161], [149, 148], [150, 148], [151, 148], [152, 161], [153, 152], [154, 152], [155, 161], [156, 155], [157, 155], [158, 161], [159, 158], [160, 158], [162, 161], [11, 57], [34, 57], [86, 117], [71, 117], [81, 117], [101, 117], [119, 118], [120, 118], [121, 118], [71, 118], [81, 118], [122, 118], [86, 118], [123, 118], [124, 118], [102, 118], [125, 118], [153, 154], [157, 156], [71, 77], [13, 77], [13, 77], [148, 77], [79, 78], [159, 160], [149, 162], [150, 162], [156, 162], [151, 162], [85, 128], [131, 129], [130, 129], [85, 130], [3, 2], [2, 4], [80, 5], [82, 5], [80, 6], [82, 6], [6, 8], [86, 16], [71, 16], [81, 16], [10, 16], [19, 17], [71, 17], [81, 17], [10, 17], [86, 17], [18, 17], [71, 87], [91, 88], [92, 88], [93, 88], [94, 88], [71, 88], [95, 88], [89, 88], [90, 88], [20, 18], [86, 21], [71, 21], [71, 22], [86, 22], [86, 134], [71, 134], [81, 134], [71, 135], [81, 135], [86, 135], [86, 23], [71, 23], [81, 23], [10, 23], [25, 24], [71, 24], [81, 24], [10, 24], [86, 24], [97, 98], [88, 100], [103, 102], [58, 61], [64, 61], [32, 61], [58, 63], [34, 63], [86, 136], [71, 136], [81, 136], [10, 136], [71, 137], [81, 137], [10, 137], [86, 137], [138, 137], [139, 137], [86, 26], [71, 26], [71, 27], [86, 27], [28, 27], [24, 30], [27, 30], [17, 30], [22, 30], [15, 30], [10, 31], [11, 31], [34, 31], [80, 65], [81, 65], [82, 65], [80, 66], [81, 66], [82, 66], [86, 140], [71, 140], [81, 140], [127, 140], [142, 141], [143, 141], [71, 141], [144, 141], [81, 141], [86, 141], [145, 141], [127, 141], [86, 0], [71, 0], [81, 0], [86, 104], [71, 104], [71, 105], [86, 105], [106, 105], [107, 105], [109, 105], [71, 146], [81, 146], [86, 146], [147, 146], [108, 107], [83, 34], [84, 34], [13, 34], [13, 34], [111, 110], [39, 37], [83, 38], [84, 39], [68, 69], [80, 70], [112, 111], [43, 47], [45, 47], [44, 48], [46, 48], [10, 113], [10, 114], [115, 114], [116, 114], [43, 49], [45, 49], [42, 49], [44, 50], [46, 50], [42, 50], [44, 51], [46, 51], [42, 51], [44, 52], [46, 52], [42, 52], [43, 53], [45, 53], [42, 53], [43, 54], [45, 54], [42, 54], [43, 55], [45, 55], [42, 55]], 'crossEdges': [[146, 117], [147, 704]]}
{'path': 'data/ARM-DOE/pyart/pyart/testing/data/make_small_cfradial_rhi.py', 'tokens': ['"""\nMake a small netCDF CF/Radial file containing a single RHI scan.\n\nSingle field and scan is converted from sigmet file XSW110520113537.RAW7HHL\n"""', 'import', 'pyart', 'radar', '=', 'pyart', '.', 'io', '.', 'read_rsl', '(', "'XSW110520113537.RAW7HHL'", ')', 'time_slice', '=', 'slice', '(', 'None', ',', '713', ',', '18', ')', 'range_slice', '=', 'slice', '(', 'None', ',', 'None', ',', '12', ')', 'sweep_slice', '=', 'slice', '(', 'None', ',', '1', ')', 'rf_field', '=', 'radar', '.', 'fields', '[', "'reflectivity'", ']', 'rf_data', '=', 'rf_field', '[', "'data'", ']', 'rf_field', '[', "'data'", ']', '=', 'rf_data', '[', 'time_slice', ',', 'range_slice', ']', 'radar', '.', 'fields', '=', '{', "'reflectivity_horizontal'", ':', 'rf_field', '}', 'radar', '.', 'nsweeps', '=', '1', 'radar', '.', 'nray', '=', '40', 'radar', '.', 'ngates', '=', '45', 'radar', '.', 'range', '[', "'data'", ']', '=', 'radar', '.', 'range', '[', "'data'", ']', '[', 'range_slice', ']', 'radar', '.', 'time', '[', "'data'", ']', '=', 'radar', '.', 'time', '[', "'data'", ']', '[', 'time_slice', ']', 'radar', '.', 'azimuth', '[', "'data'", ']', '=', 'radar', '.', 'azimuth', '[', "'data'", ']', '[', 'time_slice', ']', 'radar', '.', 'elevation', '[', "'data'", ']', '=', 'radar', '.', 'elevation', '[', "'data'", ']', '[', 'time_slice', ']', 'radar', '.', 'instrument_parameters', '[', "'prt'", ']', '[', "'data'", ']', '=', 'radar', '.', 'instrument_parameters', '[', "'prt'", ']', '[', "'data'", ']', '[', 'time_slice', ']', 'radar', '.', 'instrument_parameters', '[', "'unambiguous_range'", ']', '[', "'data'", ']', '=', 'radar', '.', 'instrument_parameters', '[', "'unambiguous_range'", ']', '[', "'data'", ']', '[', 'time_slice', ']', 'radar', '.', 'instrument_parameters', '[', "'nyquist_velocity'", ']', '[', "'data'", ']', '=', 'radar', '.', 'instrument_parameters', '[', "'nyquist_velocity'", ']', '[', "'data'", ']', '[', 'time_slice', ']', 'radar', '.', 'sweep_number', '[', "'data'", ']', '=', 'radar', '.', 'sweep_number', '[', "'data'", ']', '[', 'sweep_slice', ']', 'radar', '.', 'fixed_angle', '[', "'data'", ']', '=', 'radar', '.', 'fixed_angle', '[', "'data'", ']', '[', 'sweep_slice', ']', 'radar', '.', 'sweep_start_ray_index', '[', "'data'", ']', '=', 'radar', '.', 'sweep_start_ray_index', '[', "'data'", ']', '[', 'sweep_slice', ']', 'radar', '.', 'sweep_end_ray_index', '[', "'data'", ']', '=', 'radar', '.', 'sweep_end_ray_index', '[', "'data'", ']', '[', 'sweep_slice', ']', 'radar', '.', 'sweep_end_ray_index', '[', "'data'", ']', '[', '0', ']', '=', '39', 'radar', '.', 'sweep_mode', '[', "'data'", ']', '=', 'radar', '.', 'sweep_mode', '[', "'data'", ']', '[', 'sweep_slice', ']', 'radar', '.', 'sweep_number', '[', "'data'", ']', '=', 'radar', '.', 'sweep_number', '[', "'data'", ']', '[', 'sweep_slice', ']', 'radar', '.', 'instrument_parameters', '[', "'prt_mode'", ']', '[', "'data'", ']', '=', 'radar', '.', 'instrument_parameters', '[', "'prt_mode'", ']', '[', "'data'", ']', '[', 'sweep_slice', ']', 'radar', '.', 'metadata', '=', '{', "'Conventions'", ':', "'CF/Radial instrument_parameters'", ',', "'version'", ':', "'1.2'", ',', "'title'", ':', "'Py-ART Example RHI CF/Radial file'", ',', "'institution'", ':', '(', "'United States Department of Energy - Atmospheric '", "'Radiation Measurement (ARM) program'", ')', ',', "'references'", ':', "'none'", ',', "'source'", ':', "'ARM SGP XSAPR Radar'", ',', "'history'", ':', "'created by jhelmus on evs348532 at 2013-05-22T12:34:56'", ',', "'comment'", ':', "'none'", ',', "'instrument_name'", ':', "'xsapr-sgp'", '}', 'pyart', '.', 'io', '.', 'write_cfradial', '(', "'example_cfradial_rhi.nc'", ',', 'radar', ')'], 'nodes': ['/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/testing/data/make_small_cfradial_rhi.py'], 'edges': [], 'crossEdges': []}
{'path': 'data/ARM-DOE/pyart/pyart/util/radar_utils.py', 'tokens': ['"""\npyart.util.radar_utils\n======================\n\nFunctions for working radar instances.\n\n.. autosummary::\n    :toctree: generated/\n\n    is_vpt\n    to_vpt\n    join_radar\n"""', 'from', '__future__', 'import', 'print_function', 'import', 'copy', 'import', 'numpy', 'as', 'np', 'from', 'netCDF4', 'import', 'num2date', ',', 'date2num', 'from', '.', 'import', 'datetime_utils', 'def', 'is_vpt', '(', 'radar', ',', 'offset', '=', '0.5', ')', ':', '5INDENT', '"""\n    Determine if a Radar appears to be a vertical pointing scan.\n\n    This function only verifies that the object is a vertical pointing scan,\n    use the :py:func:`to_vpt` function to convert the radar to a vpt scan\n    if this function returns True.\n\n    Parameters\n    ----------\n    radar : Radar\n        Radar object to determine if\n    offset : float\n        Maximum offset of the elevation from 90 degrees to still consider\n        to be vertically pointing.\n\n    Returns\n    -------\n    flag : bool\n        True if the radar appear to be verticle pointing, False if not.\n\n    """', 'elev', '=', 'radar', '.', 'elevation', '[', "'data'", ']', 'return', 'np', '.', 'all', '(', '(', 'elev', '<', '90.0', '+', 'offset', ')', '&', '(', 'elev', '>', '90.0', '-', 'offset', ')', ')', '6DEDENT', 'def', 'to_vpt', '(', 'radar', ',', 'single_scan', '=', 'True', ')', ':', '5INDENT', '"""\n    Convert an existing Radar object to represent a vertical pointing scan.\n\n    This function does not verify that the Radar object contains a vertical\n    pointing scan.  To perform such a check use :py:func:`is_vpt`.\n\n    Parameters\n    ----------\n    radar : Radar\n        Mislabeled vertical pointing scan Radar object to convert to be\n        properly labeled.  This object is converted in place, no copy of\n        the existing data is made.\n    single_scan : bool, optional\n        True to convert the volume to a single scan, any azimuth angle data\n        is lost.  False will convert the scan to contain the same number of\n        scans as rays, azimuth angles are retained.\n\n    """', 'if', 'single_scan', ':', '5INDENT', 'nsweeps', '=', '1', 'radar', '.', 'azimuth', '[', "'data'", ']', '[', ':', ']', '=', '0.0', 'seri', '=', 'np', '.', 'array', '(', '[', 'radar', '.', 'nrays', '-', '1', ']', ',', 'dtype', '=', "'int32'", ')', 'radar', '.', 'sweep_end_ray_index', '[', "'data'", ']', '=', 'seri', '6DEDENT', 'else', ':', '5INDENT', 'nsweeps', '=', 'radar', '.', 'nrays', 'radar', '.', 'sweep_end_ray_index', '[', "'data'", ']', '=', 'np', '.', 'arange', '(', 'nsweeps', ',', 'dtype', '=', "'int32'", ')', '6DEDENT', 'radar', '.', 'scan_type', '=', "'vpt'", 'radar', '.', 'nsweeps', '=', 'nsweeps', 'radar', '.', 'target_scan_rate', '=', 'None', 'radar', '.', 'elevation', '[', "'data'", ']', '[', ':', ']', '=', '90.0', 'radar', '.', 'sweep_number', '[', "'data'", ']', '=', 'np', '.', 'arange', '(', 'nsweeps', ',', 'dtype', '=', "'int32'", ')', 'radar', '.', 'sweep_mode', '[', "'data'", ']', '=', 'np', '.', 'array', '(', '[', "'vertical_pointing'", ']', '*', 'nsweeps', ')', 'radar', '.', 'fixed_angle', '[', "'data'", ']', '=', 'np', '.', 'ones', '(', 'nsweeps', ',', 'dtype', '=', "'float32'", ')', '*', '90.0', 'radar', '.', 'sweep_start_ray_index', '[', "'data'", ']', '=', 'np', '.', 'arange', '(', 'nsweeps', ',', 'dtype', '=', "'int32'", ')', 'if', 'radar', '.', 'instrument_parameters', 'is', 'not', 'None', ':', '5INDENT', 'for', 'key', 'in', '[', "'prt_mode'", ',', "'follow_mode'", ',', "'polarization_mode'", ']', ':', '5INDENT', 'if', 'key', 'in', 'radar', '.', 'instrument_parameters', ':', '5INDENT', 'ip_dic', '=', 'radar', '.', 'instrument_parameters', '[', 'key', ']', 'ip_dic', '[', "'data'", ']', '=', 'np', '.', 'array', '(', '[', 'ip_dic', '[', "'data'", ']', '[', '0', ']', ']', '*', 'nsweeps', ')', '6DEDENT', '6DEDENT', '6DEDENT', 'return', '6DEDENT', 'def', 'join_radar', '(', 'radar1', ',', 'radar2', ')', ':', '5INDENT', '"""\n    Combine two radar instances into one.\n\n    Parameters\n    ----------\n    radar1 : Radar\n        Radar object.\n    radar2 : Radar\n        Radar object.\n    """', 'new_radar', '=', 'copy', '.', 'deepcopy', '(', 'radar1', ')', 'new_radar', '.', 'azimuth', '[', "'data'", ']', '=', 'np', '.', 'append', '(', 'radar1', '.', 'azimuth', '[', "'data'", ']', ',', 'radar2', '.', 'azimuth', '[', "'data'", ']', ')', 'new_radar', '.', 'elevation', '[', "'data'", ']', '=', 'np', '.', 'append', '(', 'radar1', '.', 'elevation', '[', "'data'", ']', ',', 'radar2', '.', 'elevation', '[', "'data'", ']', ')', 'if', 'len', '(', 'radar1', '.', 'range', '[', "'data'", ']', ')', '>=', 'len', '(', 'radar2', '.', 'range', '[', "'data'", ']', ')', ':', '5INDENT', 'new_radar', '.', 'range', '[', "'data'", ']', '=', 'radar1', '.', 'range', '[', "'data'", ']', '6DEDENT', 'else', ':', '5INDENT', 'new_radar', '.', 'range', '[', "'data'", ']', '=', 'radar2', '.', 'range', '[', "'data'", ']', '6DEDENT', 'estring', '=', '"seconds since 1970-01-01T00:00:00Z"', 'r1dt', '=', 'num2date', '(', 'radar1', '.', 'time', '[', "'data'", ']', ',', 'radar1', '.', 'time', '[', "'units'", ']', ')', 'r2dt', '=', 'num2date', '(', 'radar2', '.', 'time', '[', "'data'", ']', ',', 'radar2', '.', 'time', '[', "'units'", ']', ')', 'r1num', '=', 'datetime_utils', '.', 'datetimes_from_radar', '(', 'radar1', ',', 'epoch', '=', 'True', ')', 'r2num', '=', 'datetime_utils', '.', 'datetimes_from_radar', '(', 'radar2', ',', 'epoch', '=', 'True', ')', 'new_radar', '.', 'time', '[', "'data'", ']', '=', 'np', '.', 'append', '(', 'r1num', ',', 'r2num', ')', 'new_radar', '.', 'time', '[', "'units'", ']', '=', 'datetime_utils', '.', 'EPOCH_UNITS', 'for', 'var', 'in', 'new_radar', '.', 'fields', '.', 'keys', '(', ')', ':', '5INDENT', 'sh1', '=', 'radar1', '.', 'fields', '[', 'var', ']', '[', "'data'", ']', '.', 'shape', 'sh2', '=', 'radar2', '.', 'fields', '[', 'var', ']', '[', "'data'", ']', '.', 'shape', 'new_field', '=', 'np', '.', 'ma', '.', 'zeros', '(', '[', 'sh1', '[', '0', ']', '+', 'sh2', '[', '0', ']', ',', 'max', '(', '[', 'sh1', '[', '1', ']', ',', 'sh2', '[', '1', ']', ']', ')', ']', ')', '-', '9999.0', 'new_field', '[', '0', ':', 'sh1', '[', '0', ']', ',', '0', ':', 'sh1', '[', '1', ']', ']', '=', 'radar1', '.', 'fields', '[', 'var', ']', '[', "'data'", ']', 'new_field', '[', 'sh1', '[', '0', ']', ':', ',', '0', ':', 'sh2', '[', '1', ']', ']', '=', 'radar2', '.', 'fields', '[', 'var', ']', '[', "'data'", ']', 'new_radar', '.', 'fields', '[', 'var', ']', '[', "'data'", ']', '=', 'new_field', '6DEDENT', 'if', '(', 'len', '(', 'radar1', '.', 'latitude', '[', "'data'", ']', ')', '==', '1', '&', 'len', '(', 'radar2', '.', 'latitude', '[', "'data'", ']', ')', '==', '1', '&', 'len', '(', 'radar1', '.', 'longitude', '[', "'data'", ']', ')', '==', '1', '&', 'len', '(', 'radar2', '.', 'longitude', '[', "'data'", ']', ')', '==', '1', '&', 'len', '(', 'radar1', '.', 'altitude', '[', "'data'", ']', ')', '==', '1', '&', 'len', '(', 'radar2', '.', 'altitude', '[', "'data'", ']', ')', '==', '1', ')', ':', '5INDENT', 'lat1', '=', 'float', '(', 'radar1', '.', 'latitude', '[', "'data'", ']', ')', 'lon1', '=', 'float', '(', 'radar1', '.', 'longitude', '[', "'data'", ']', ')', 'alt1', '=', 'float', '(', 'radar1', '.', 'altitude', '[', "'data'", ']', ')', 'lat2', '=', 'float', '(', 'radar2', '.', 'latitude', '[', "'data'", ']', ')', 'lon2', '=', 'float', '(', 'radar2', '.', 'longitude', '[', "'data'", ']', ')', 'alt2', '=', 'float', '(', 'radar2', '.', 'altitude', '[', "'data'", ']', ')', 'if', '(', 'lat1', '!=', 'lat2', ')', 'or', '(', 'lon1', '!=', 'lon2', ')', 'or', '(', 'alt1', '!=', 'alt2', ')', ':', '5INDENT', 'ones1', '=', 'np', '.', 'ones', '(', 'len', '(', 'radar1', '.', 'time', '[', "'data'", ']', ')', ',', 'dtype', '=', "'float32'", ')', 'ones2', '=', 'np', '.', 'ones', '(', 'len', '(', 'radar2', '.', 'time', '[', "'data'", ']', ')', ',', 'dtype', '=', "'float32'", ')', 'new_radar', '.', 'latitude', '[', "'data'", ']', '=', 'np', '.', 'append', '(', 'ones1', '*', 'lat1', ',', 'ones2', '*', 'lat2', ')', 'new_radar', '.', 'longitude', '[', "'data'", ']', '=', 'np', '.', 'append', '(', 'ones1', '*', 'lon1', ',', 'ones2', '*', 'lon2', ')', 'new_radar', '.', 'latitude', '[', "'data'", ']', '=', 'np', '.', 'append', '(', 'ones1', '*', 'alt1', ',', 'ones2', '*', 'alt2', ')', '6DEDENT', 'else', ':', '5INDENT', 'new_radar', '.', 'latitude', '[', "'data'", ']', '=', 'radar1', '.', 'latitude', '[', "'data'", ']', 'new_radar', '.', 'longitude', '[', "'data'", ']', '=', 'radar1', '.', 'longitude', '[', "'data'", ']', 'new_radar', '.', 'altitude', '[', "'data'", ']', '=', 'radar1', '.', 'altitude', '[', "'data'", ']', '6DEDENT', '6DEDENT', 'else', ':', '5INDENT', 'new_radar', '.', 'latitude', '[', "'data'", ']', '=', 'np', '.', 'append', '(', 'radar1', '.', 'latitude', '[', "'data'", ']', ',', 'radar2', '.', 'latitude', '[', "'data'", ']', ')', 'new_radar', '.', 'longitude', '[', "'data'", ']', '=', 'np', '.', 'append', '(', 'radar1', '.', 'longitude', '[', "'data'", ']', ',', 'radar2', '.', 'longitude', '[', "'data'", ']', ')', 'new_radar', '.', 'altitude', '[', "'data'", ']', '=', 'np', '.', 'append', '(', 'radar1', '.', 'altitude', '[', "'data'", ']', ',', 'radar2', '.', 'altitude', '[', "'data'", ']', ')', '6DEDENT', 'return', 'new_radar', '6DEDENT'], 'nodes': ['/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/util/radar_utils.py', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/retrieve/setup.py', 'configuration', 'steiner_echo_gen_source', '__main__', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/retrieve/simple_moment_calculations.py', 'calculate_snr_from_reflectivity', 'retrieve', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/retrieve/__init__.py', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/exceptions.py', 'MissingOptionalDependency', 'DeprecatedAttribute', 'DeprecatedFunctionName', '_deprecated_alias', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/aux_io/radx.py', 'read_radx', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/aux_io/gamic_hdf5.py', 'read_gamic', '_get_instrument_params', '_avg_radial_angles', '_prt_mode_from_unfolding', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/aux_io/pattern.py', 'read_pattern', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/aux_io/sinarame_h5.py', 'read_sinarame_h5', '_get_SINARAME_h5_sweep_data', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/aux_io/noxp_iphex_nc.py', 'read_noxp_iphex_nc', '_ncvar_to_dict', 'aux_io', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/aux_io/__init__.py', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/graph/gridmapdisplay.py', 'GridMapDisplay', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/graph/_cm.py', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/graph/common.py', 'parse_ax', 'parse_ax_fig', 'parse_norm_vmin_vmax', 'parse_cmap', 'parse_vmin_vmax', 'parse_lon_lat', 'generate_colorbar_label', 'generate_field_name', 'generate_radar_name', 'generate_grid_name', 'generate_radar_time_begin', 'generate_grid_time_begin', 'generate_filename', 'generate_grid_filename', 'generate_title', 'generate_grid_title', 'generate_longitudinal_level_title', 'generate_latitudinal_level_title', 'generate_vpt_title', 'generate_ray_title', 'generate_az_rhi_title', 'set_limits', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/graph/radardisplay.py', 'RadarDisplay', '_mask_outside', 'graph', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/graph/__init__.py', 'RadarDisplay_Airborne', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/graph/radardisplay_airborne.py', 'AirborneRadarDisplay', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/correct/attenuation.py', 'calculate_attenuation', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/core/setup.py', 'configuration', '__main__', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/core/radar.py', 'Radar', '_rays_per_sweep_data_factory', '_gate_data_factory', '_gate_lon_lat_data_factory', '_gate_altitude_data_factory', 'core', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/core/__init__.py', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/config.py', 'load_config', 'get_metadata', 'get_fillvalue', 'get_field_name', 'get_field_colormap', 'get_field_limits', 'get_field_mapping', 'FileMetadata', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/map/gates_to_grid.py', 'map_gates_to_grid', '_detemine_cy_weighting_func', '_find_projparams', '_parse_gatefilters', '_determine_fields', '_find_offsets', '_find_grid_params', '_parse_roi_func', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/map/setup.py', 'configuration', '__main__', 'map', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/map/__init__.py', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/io/_sigmet_noaa_hh.py', '_decode_noaa_hh_hdr', '_georeference_yprime', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/io/cfradial.py', 'read_cfradial', '_find_all_meta_group_vars', '_ncvar_to_dict', '_NetCDFVariableDataExtractor', '_unpack_variable_gate_field_dic', 'write_cfradial', '_create_ncvar', '_calculate_scale_and_offset', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/io/output_to_geotiff.py', 'write_grid_geotiff', '_get_rgb_values', '_create_sld', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/io/sigmet.py', 'read_sigmet', '_is_time_ordered_by_reversal', '_is_time_ordered_by_roll', '_is_time_ordered_by_reverse_roll', '_time_order_data_and_metadata_roll', '_time_order_data_and_metadata_reverse', '_time_order_data_and_metadata_full', 'ymds_time_to_datetime', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/io/nexrad_common.py', 'get_nexrad_location', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/io/uf_write.py', 'write_uf', '_find_field_mapping', 'UFRayCreator', '_d_to_dms', '_pack_structure', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/io/mdv_radar.py', 'read_mdv', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/io/rsl.py', 'read_rsl', '_dms_to_d', '_RslVolumeDataExtractor', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/io/nexrad_archive.py', 'read_nexrad_archive', '_find_range_params', '_find_scans_to_interp', '_interpolate_scan', '_NEXRADLevel2StagedField', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/io/uf.py', 'read_uf', '_get_instrument_parameters', 'is_vpt', 'to_vpt', 'join_radar', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/util/setup.py', 'configuration', '__main__', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/util/xsect.py', 'cross_section_ppi', '_copy_dic', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/util/met.py', 'nth_smallest', 'get_best_sounding', 'util', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/ARM-DOE/pyart/pyart/util/__init__.py'], 'edges': [[1, 7], [2, 1], [3, 1], [4, 1], [5, 7], [6, 5], [8, 7], [10, 9], [11, 9], [12, 9], [13, 9], [14, 29], [15, 14], [16, 29], [17, 16], [18, 16], [19, 16], [20, 16], [21, 29], [22, 21], [23, 29], [24, 23], [25, 23], [26, 29], [27, 26], [28, 26], [30, 29], [31, 60], [32, 31], [33, 60], [34, 60], [35, 34], [36, 34], [37, 34], [38, 34], [39, 34], [40, 34], [41, 34], [42, 34], [43, 34], [44, 34], [45, 34], [46, 34], [47, 34], [48, 34], [49, 34], [50, 34], [51, 34], [52, 34], [53, 34], [54, 34], [55, 34], [56, 34], [57, 60], [58, 57], [59, 57], [61, 60], [62, 61], [63, 60], [64, 63], [66, 65], [67, 76], [68, 67], [69, 67], [70, 76], [71, 70], [72, 70], [73, 70], [74, 70], [75, 70], [77, 76], [79, 78], [80, 78], [81, 78], [82, 78], [83, 78], [84, 78], [85, 78], [86, 78], [87, 99], [88, 87], [89, 87], [90, 87], [91, 87], [92, 87], [93, 87], [94, 87], [95, 87], [96, 99], [97, 96], [98, 96], [100, 99], [102, 101], [103, 101], [105, 104], [106, 104], [107, 104], [108, 104], [109, 104], [110, 104], [111, 104], [112, 104], [114, 113], [115, 113], [116, 113], [118, 117], [119, 117], [120, 117], [121, 117], [122, 117], [123, 117], [124, 117], [125, 117], [127, 126], [129, 128], [130, 128], [131, 128], [132, 128], [133, 128], [135, 134], [137, 136], [138, 136], [139, 136], [141, 140], [142, 140], [143, 140], [144, 140], [145, 140], [147, 146], [148, 146], [0, 161], [149, 0], [150, 0], [151, 0], [152, 161], [153, 152], [154, 152], [155, 161], [156, 155], [157, 155], [158, 161], [159, 158], [160, 158], [162, 161], [11, 57], [34, 57], [86, 117], [71, 117], [81, 117], [101, 117], [119, 118], [120, 118], [121, 118], [71, 118], [81, 118], [122, 118], [86, 118], [123, 118], [124, 118], [102, 118], [125, 118], [153, 154], [157, 156], [71, 77], [13, 77], [13, 77], [0, 77], [79, 78], [159, 160], [149, 162], [150, 162], [156, 162], [151, 162], [85, 128], [131, 129], [130, 129], [85, 130], [3, 2], [2, 4], [80, 5], [82, 5], [80, 6], [82, 6], [6, 8], [86, 16], [71, 16], [81, 16], [10, 16], [19, 17], [71, 17], [81, 17], [10, 17], [86, 17], [18, 17], [71, 87], [91, 88], [92, 88], [93, 88], [94, 88], [71, 88], [95, 88], [89, 88], [90, 88], [20, 18], [86, 21], [71, 21], [71, 22], [86, 22], [86, 134], [71, 134], [81, 134], [71, 135], [81, 135], [86, 135], [86, 23], [71, 23], [81, 23], [10, 23], [25, 24], [71, 24], [81, 24], [10, 24], [86, 24], [97, 98], [88, 100], [103, 102], [58, 61], [64, 61], [32, 61], [58, 63], [34, 63], [86, 136], [71, 136], [81, 136], [10, 136], [71, 137], [81, 137], [10, 137], [86, 137], [138, 137], [139, 137], [86, 26], [71, 26], [71, 27], [86, 27], [28, 27], [24, 30], [27, 30], [17, 30], [22, 30], [15, 30], [10, 31], [11, 31], [34, 31], [80, 65], [81, 65], [82, 65], [80, 66], [81, 66], [82, 66], [86, 140], [71, 140], [81, 140], [127, 140], [142, 141], [143, 141], [71, 141], [144, 141], [81, 141], [86, 141], [145, 141], [127, 141], [86, 146], [71, 146], [81, 146], [86, 104], [71, 104], [71, 105], [86, 105], [106, 105], [107, 105], [109, 105], [71, 147], [81, 147], [86, 147], [148, 147], [108, 107], [83, 34], [84, 34], [13, 34], [13, 34], [111, 110], [39, 37], [83, 38], [84, 39], [68, 69], [80, 70], [112, 111], [43, 47], [45, 47], [44, 48], [46, 48], [10, 113], [10, 114], [115, 114], [116, 114], [43, 49], [45, 49], [42, 49], [44, 50], [46, 50], [42, 50], [44, 51], [46, 51], [42, 51], [44, 52], [46, 52], [42, 52], [43, 53], [45, 53], [42, 53], [43, 54], [45, 54], [42, 54], [43, 55], [45, 55], [42, 55]], 'crossEdges': [[149, 22], [150, 64], [151, 306]]}
{'path': 'data/jupyter/jupyter_client/jupyter_client/channels.py', 'tokens': ['"""Base classes to manage a Client\'s interaction with a running kernel"""', 'from', '__future__', 'import', 'absolute_import', 'import', 'atexit', 'import', 'errno', 'from', 'threading', 'import', 'Thread', 'import', 'time', 'import', 'zmq', 'from', 'zmq', 'import', 'ZMQError', 'from', 'jupyter_client', 'import', 'protocol_version_info', 'from', '.', 'channelsabc', 'import', 'HBChannelABC', 'major_protocol_version', '=', 'protocol_version_info', '[', '0', ']', 'class', 'InvalidPortNumber', '(', 'Exception', ')', ':', '5INDENT', 'pass', '6DEDENT', 'class', 'HBChannel', '(', 'Thread', ')', ':', '5INDENT', '"""The heartbeat channel which monitors the kernel heartbeat.\n\n    Note that the heartbeat channel is paused by default. As long as you start\n    this channel, the kernel manager will ensure that it is paused and un-paused\n    as appropriate.\n    """', 'context', '=', 'None', 'session', '=', 'None', 'socket', '=', 'None', 'address', '=', 'None', '_exiting', '=', 'False', 'time_to_dead', '=', '1.', 'poller', '=', 'None', '_running', '=', 'None', '_pause', '=', 'None', '_beating', '=', 'None', 'def', '__init__', '(', 'self', ',', 'context', '=', 'None', ',', 'session', '=', 'None', ',', 'address', '=', 'None', ')', ':', '5INDENT', '"""Create the heartbeat monitor thread.\n\n        Parameters\n        ----------\n        context : :class:`zmq.Context`\n            The ZMQ context to use.\n        session : :class:`session.Session`\n            The session to use.\n        address : zmq url\n            Standard (ip, port) tuple that the kernel is listening on.\n        """', 'super', '(', 'HBChannel', ',', 'self', ')', '.', '__init__', '(', ')', 'self', '.', 'daemon', '=', 'True', 'self', '.', 'context', '=', 'context', 'self', '.', 'session', '=', 'session', 'if', 'isinstance', '(', 'address', ',', 'tuple', ')', ':', '5INDENT', 'if', 'address', '[', '1', ']', '==', '0', ':', '5INDENT', 'message', '=', "'The port number for a channel cannot be 0.'", 'raise', 'InvalidPortNumber', '(', 'message', ')', '6DEDENT', 'address', '=', '"tcp://%s:%i"', '%', 'address', '6DEDENT', 'self', '.', 'address', '=', 'address', 'atexit', '.', 'register', '(', 'self', '.', '_notice_exit', ')', 'self', '.', '_running', '=', 'False', 'self', '.', '_pause', '=', 'False', 'self', '.', 'poller', '=', 'zmq', '.', 'Poller', '(', ')', '6DEDENT', 'def', '_notice_exit', '(', 'self', ')', ':', '5INDENT', 'self', '.', '_exiting', '=', 'True', '6DEDENT', 'def', '_create_socket', '(', 'self', ')', ':', '5INDENT', 'if', 'self', '.', 'socket', 'is', 'not', 'None', ':', '5INDENT', 'self', '.', 'poller', '.', 'unregister', '(', 'self', '.', 'socket', ')', 'self', '.', 'socket', '.', 'close', '(', ')', '6DEDENT', 'self', '.', 'socket', '=', 'self', '.', 'context', '.', 'socket', '(', 'zmq', '.', 'REQ', ')', 'self', '.', 'socket', '.', 'linger', '=', '1000', 'self', '.', 'socket', '.', 'connect', '(', 'self', '.', 'address', ')', 'self', '.', 'poller', '.', 'register', '(', 'self', '.', 'socket', ',', 'zmq', '.', 'POLLIN', ')', '6DEDENT', 'def', '_poll', '(', 'self', ',', 'start_time', ')', ':', '5INDENT', '"""poll for heartbeat replies until we reach self.time_to_dead.\n\n        Ignores interrupts, and returns the result of poll(), which\n        will be an empty list if no messages arrived before the timeout,\n        or the event tuple if there is a message to receive.\n        """', 'until_dead', '=', 'self', '.', 'time_to_dead', '-', '(', 'time', '.', 'time', '(', ')', '-', 'start_time', ')', 'until_dead', '=', 'max', '(', 'until_dead', ',', '1e-3', ')', 'events', '=', '[', ']', 'while', 'True', ':', '5INDENT', 'try', ':', '5INDENT', 'events', '=', 'self', '.', 'poller', '.', 'poll', '(', '1000', '*', 'until_dead', ')', '6DEDENT', 'except', 'ZMQError', 'as', 'e', ':', '5INDENT', 'if', 'e', '.', 'errno', '==', 'errno', '.', 'EINTR', ':', '5INDENT', 'until_dead', '=', 'self', '.', 'time_to_dead', '-', '(', 'time', '.', 'time', '(', ')', '-', 'start_time', ')', 'until_dead', '=', 'max', '(', 'until_dead', ',', '1e-3', ')', 'pass', '6DEDENT', 'else', ':', '5INDENT', 'raise', '6DEDENT', '6DEDENT', 'except', 'Exception', ':', '5INDENT', 'if', 'self', '.', '_exiting', ':', '5INDENT', 'break', '6DEDENT', 'else', ':', '5INDENT', 'raise', '6DEDENT', '6DEDENT', 'else', ':', '5INDENT', 'break', '6DEDENT', '6DEDENT', 'return', 'events', '6DEDENT', 'def', 'run', '(', 'self', ')', ':', '5INDENT', '"""The thread\'s main activity.  Call start() instead."""', 'self', '.', '_create_socket', '(', ')', 'self', '.', '_running', '=', 'True', 'self', '.', '_beating', '=', 'True', 'while', 'self', '.', '_running', ':', '5INDENT', 'if', 'self', '.', '_pause', ':', '5INDENT', 'time', '.', 'sleep', '(', 'self', '.', 'time_to_dead', ')', 'continue', '6DEDENT', 'since_last_heartbeat', '=', '0.0', 'self', '.', 'socket', '.', 'send', '(', "b'ping'", ')', 'request_time', '=', 'time', '.', 'time', '(', ')', 'ready', '=', 'self', '.', '_poll', '(', 'request_time', ')', 'if', 'ready', ':', '5INDENT', 'self', '.', '_beating', '=', 'True', 'self', '.', 'socket', '.', 'recv', '(', ')', 'remainder', '=', 'self', '.', 'time_to_dead', '-', '(', 'time', '.', 'time', '(', ')', '-', 'request_time', ')', 'if', 'remainder', '>', '0', ':', '5INDENT', 'time', '.', 'sleep', '(', 'remainder', ')', '6DEDENT', 'continue', '6DEDENT', 'else', ':', '5INDENT', 'self', '.', '_beating', '=', 'False', 'since_last_heartbeat', '=', 'time', '.', 'time', '(', ')', '-', 'request_time', 'self', '.', 'call_handlers', '(', 'since_last_heartbeat', ')', 'self', '.', '_create_socket', '(', ')', 'continue', '6DEDENT', '6DEDENT', '6DEDENT', 'def', 'pause', '(', 'self', ')', ':', '5INDENT', '"""Pause the heartbeat."""', 'self', '.', '_pause', '=', 'True', '6DEDENT', 'def', 'unpause', '(', 'self', ')', ':', '5INDENT', '"""Unpause the heartbeat."""', 'self', '.', '_pause', '=', 'False', '6DEDENT', 'def', 'is_beating', '(', 'self', ')', ':', '5INDENT', '"""Is the heartbeat running and responsive (and not paused)."""', 'if', 'self', '.', 'is_alive', '(', ')', 'and', 'not', 'self', '.', '_pause', 'and', 'self', '.', '_beating', ':', '5INDENT', 'return', 'True', '6DEDENT', 'else', ':', '5INDENT', 'return', 'False', '6DEDENT', '6DEDENT', 'def', 'stop', '(', 'self', ')', ':', '5INDENT', '"""Stop the channel\'s event loop and join its thread."""', 'self', '.', '_running', '=', 'False', 'self', '.', 'join', '(', ')', 'self', '.', 'close', '(', ')', '6DEDENT', 'def', 'close', '(', 'self', ')', ':', '5INDENT', 'if', 'self', '.', 'socket', 'is', 'not', 'None', ':', '5INDENT', 'try', ':', '5INDENT', 'self', '.', 'socket', '.', 'close', '(', 'linger', '=', '0', ')', '6DEDENT', 'except', 'Exception', ':', '5INDENT', 'pass', '6DEDENT', 'self', '.', 'socket', '=', 'None', '6DEDENT', '6DEDENT', 'def', 'call_handlers', '(', 'self', ',', 'since_last_heartbeat', ')', ':', '5INDENT', '"""This method is called in the ioloop thread when a message arrives.\n\n        Subclasses should override this method to handle incoming messages.\n        It is important to remember that this method is called in the thread\n        so that some logic must be done to ensure that the application level\n        handlers are called in the application thread.\n        """', 'pass', '6DEDENT', '6DEDENT', 'HBChannelABC', '.', 'register', '(', 'HBChannel', ')'], 'nodes': ['/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/jupyter/jupyter_client/jupyter_client/channels.py', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/jupyter/jupyter_client/jupyter_client/client.py', 'validate_string_dict', 'KernelClient', 'InvalidPortNumber', 'HBChannel', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/jupyter/jupyter_client/jupyter_client/channelsabc.py', 'ChannelABC', 'HBChannelABC'], 'edges': [[7, 6], [8, 6], [4, 0], [5, 0], [2, 1], [3, 1], [8, 0], [7, 1], [8, 1], [7, 8]], 'crossEdges': [[4, 37], [5, 46]]}
{'path': 'data/jupyter/jupyter_client/jupyter_client/tests/test_session.py', 'tokens': ['"""test building messages with Session"""', 'import', 'hmac', 'import', 'os', 'import', 'uuid', 'from', 'datetime', 'import', 'datetime', 'import', 'zmq', 'from', 'zmq', '.', 'tests', 'import', 'BaseZMQTestCase', 'from', 'zmq', '.', 'eventloop', '.', 'zmqstream', 'import', 'ZMQStream', 'from', 'jupyter_client', 'import', 'session', 'as', 'ss', 'from', 'jupyter_client', 'import', 'jsonutil', 'from', 'ipython_genutils', '.', 'testing', '.', 'decorators', 'import', 'skipif', ',', 'module_not_available', 'from', 'ipython_genutils', '.', 'py3compat', 'import', 'string_types', 'def', '_bad_packer', '(', 'obj', ')', ':', '5INDENT', 'raise', 'TypeError', '(', '"I don\'t work"', ')', '6DEDENT', 'def', '_bad_unpacker', '(', 'bytes', ')', ':', '5INDENT', 'raise', 'TypeError', '(', '"I don\'t work either"', ')', '6DEDENT', 'class', 'SessionTestCase', '(', 'BaseZMQTestCase', ')', ':', '5INDENT', 'def', 'setUp', '(', 'self', ')', ':', '5INDENT', 'BaseZMQTestCase', '.', 'setUp', '(', 'self', ')', 'self', '.', 'session', '=', 'ss', '.', 'Session', '(', ')', '6DEDENT', '6DEDENT', 'class', 'TestSession', '(', 'SessionTestCase', ')', ':', '5INDENT', 'def', 'test_msg', '(', 'self', ')', ':', '5INDENT', '"""message format"""', 'msg', '=', 'self', '.', 'session', '.', 'msg', '(', "'execute'", ')', 'thekeys', '=', 'set', '(', "'header parent_header metadata content msg_type msg_id'", '.', 'split', '(', ')', ')', 's', '=', 'set', '(', 'msg', '.', 'keys', '(', ')', ')', 'self', '.', 'assertEqual', '(', 's', ',', 'thekeys', ')', 'self', '.', 'assertTrue', '(', 'isinstance', '(', 'msg', '[', "'content'", ']', ',', 'dict', ')', ')', 'self', '.', 'assertTrue', '(', 'isinstance', '(', 'msg', '[', "'metadata'", ']', ',', 'dict', ')', ')', 'self', '.', 'assertTrue', '(', 'isinstance', '(', 'msg', '[', "'header'", ']', ',', 'dict', ')', ')', 'self', '.', 'assertTrue', '(', 'isinstance', '(', 'msg', '[', "'parent_header'", ']', ',', 'dict', ')', ')', 'self', '.', 'assertTrue', '(', 'isinstance', '(', 'msg', '[', "'msg_id'", ']', ',', 'str', ')', ')', 'self', '.', 'assertTrue', '(', 'isinstance', '(', 'msg', '[', "'msg_type'", ']', ',', 'str', ')', ')', 'self', '.', 'assertEqual', '(', 'msg', '[', "'header'", ']', '[', "'msg_type'", ']', ',', "'execute'", ')', 'self', '.', 'assertEqual', '(', 'msg', '[', "'msg_type'", ']', ',', "'execute'", ')', '6DEDENT', 'def', 'test_serialize', '(', 'self', ')', ':', '5INDENT', 'msg', '=', 'self', '.', 'session', '.', 'msg', '(', "'execute'", ',', 'content', '=', 'dict', '(', 'a', '=', '10', ',', 'b', '=', '1.1', ')', ')', 'msg_list', '=', 'self', '.', 'session', '.', 'serialize', '(', 'msg', ',', 'ident', '=', "b'foo'", ')', 'ident', ',', 'msg_list', '=', 'self', '.', 'session', '.', 'feed_identities', '(', 'msg_list', ')', 'new_msg', '=', 'self', '.', 'session', '.', 'deserialize', '(', 'msg_list', ')', 'self', '.', 'assertEqual', '(', 'ident', '[', '0', ']', ',', "b'foo'", ')', 'self', '.', 'assertEqual', '(', 'new_msg', '[', "'msg_id'", ']', ',', 'msg', '[', "'msg_id'", ']', ')', 'self', '.', 'assertEqual', '(', 'new_msg', '[', "'msg_type'", ']', ',', 'msg', '[', "'msg_type'", ']', ')', 'self', '.', 'assertEqual', '(', 'new_msg', '[', "'header'", ']', ',', 'msg', '[', "'header'", ']', ')', 'self', '.', 'assertEqual', '(', 'new_msg', '[', "'content'", ']', ',', 'msg', '[', "'content'", ']', ')', 'self', '.', 'assertEqual', '(', 'new_msg', '[', "'parent_header'", ']', ',', 'msg', '[', "'parent_header'", ']', ')', 'self', '.', 'assertEqual', '(', 'new_msg', '[', "'metadata'", ']', ',', 'msg', '[', "'metadata'", ']', ')', 'self', '.', 'assertEqual', '(', 'type', '(', 'new_msg', '[', "'content'", ']', '[', "'b'", ']', ')', ',', 'type', '(', 'new_msg', '[', "'content'", ']', '[', "'b'", ']', ')', ')', '6DEDENT', 'def', 'test_default_secure', '(', 'self', ')', ':', '5INDENT', 'self', '.', 'assertIsInstance', '(', 'self', '.', 'session', '.', 'key', ',', 'bytes', ')', 'self', '.', 'assertIsInstance', '(', 'self', '.', 'session', '.', 'auth', ',', 'hmac', '.', 'HMAC', ')', '6DEDENT', 'def', 'test_send', '(', 'self', ')', ':', '5INDENT', 'ctx', '=', 'zmq', '.', 'Context', '.', 'instance', '(', ')', 'A', '=', 'ctx', '.', 'socket', '(', 'zmq', '.', 'PAIR', ')', 'B', '=', 'ctx', '.', 'socket', '(', 'zmq', '.', 'PAIR', ')', 'A', '.', 'bind', '(', '"inproc://test"', ')', 'B', '.', 'connect', '(', '"inproc://test"', ')', 'msg', '=', 'self', '.', 'session', '.', 'msg', '(', "'execute'", ',', 'content', '=', 'dict', '(', 'a', '=', '10', ')', ')', 'self', '.', 'session', '.', 'send', '(', 'A', ',', 'msg', ',', 'ident', '=', "b'foo'", ',', 'buffers', '=', '[', "b'bar'", ']', ')', 'ident', ',', 'msg_list', '=', 'self', '.', 'session', '.', 'feed_identities', '(', 'B', '.', 'recv_multipart', '(', ')', ')', 'new_msg', '=', 'self', '.', 'session', '.', 'deserialize', '(', 'msg_list', ')', 'self', '.', 'assertEqual', '(', 'ident', '[', '0', ']', ',', "b'foo'", ')', 'self', '.', 'assertEqual', '(', 'new_msg', '[', "'msg_id'", ']', ',', 'msg', '[', "'msg_id'", ']', ')', 'self', '.', 'assertEqual', '(', 'new_msg', '[', "'msg_type'", ']', ',', 'msg', '[', "'msg_type'", ']', ')', 'self', '.', 'assertEqual', '(', 'new_msg', '[', "'header'", ']', ',', 'msg', '[', "'header'", ']', ')', 'self', '.', 'assertEqual', '(', 'new_msg', '[', "'content'", ']', ',', 'msg', '[', "'content'", ']', ')', 'self', '.', 'assertEqual', '(', 'new_msg', '[', "'parent_header'", ']', ',', 'msg', '[', "'parent_header'", ']', ')', 'self', '.', 'assertEqual', '(', 'new_msg', '[', "'metadata'", ']', ',', 'msg', '[', "'metadata'", ']', ')', 'self', '.', 'assertEqual', '(', 'new_msg', '[', "'buffers'", ']', ',', '[', "b'bar'", ']', ')', 'content', '=', 'msg', '[', "'content'", ']', 'header', '=', 'msg', '[', "'header'", ']', 'header', '[', "'msg_id'", ']', '=', 'self', '.', 'session', '.', 'msg_id', 'parent', '=', 'msg', '[', "'parent_header'", ']', 'metadata', '=', 'msg', '[', "'metadata'", ']', 'msg_type', '=', 'header', '[', "'msg_type'", ']', 'self', '.', 'session', '.', 'send', '(', 'A', ',', 'None', ',', 'content', '=', 'content', ',', 'parent', '=', 'parent', ',', 'header', '=', 'header', ',', 'metadata', '=', 'metadata', ',', 'ident', '=', "b'foo'", ',', 'buffers', '=', '[', "b'bar'", ']', ')', 'ident', ',', 'msg_list', '=', 'self', '.', 'session', '.', 'feed_identities', '(', 'B', '.', 'recv_multipart', '(', ')', ')', 'new_msg', '=', 'self', '.', 'session', '.', 'deserialize', '(', 'msg_list', ')', 'self', '.', 'assertEqual', '(', 'ident', '[', '0', ']', ',', "b'foo'", ')', 'self', '.', 'assertEqual', '(', 'new_msg', '[', "'msg_id'", ']', ',', 'header', '[', "'msg_id'", ']', ')', 'self', '.', 'assertEqual', '(', 'new_msg', '[', "'msg_type'", ']', ',', 'msg', '[', "'msg_type'", ']', ')', 'self', '.', 'assertEqual', '(', 'new_msg', '[', "'header'", ']', ',', 'msg', '[', "'header'", ']', ')', 'self', '.', 'assertEqual', '(', 'new_msg', '[', "'content'", ']', ',', 'msg', '[', "'content'", ']', ')', 'self', '.', 'assertEqual', '(', 'new_msg', '[', "'metadata'", ']', ',', 'msg', '[', "'metadata'", ']', ')', 'self', '.', 'assertEqual', '(', 'new_msg', '[', "'parent_header'", ']', ',', 'msg', '[', "'parent_header'", ']', ')', 'self', '.', 'assertEqual', '(', 'new_msg', '[', "'buffers'", ']', ',', '[', "b'bar'", ']', ')', 'header', '[', "'msg_id'", ']', '=', 'self', '.', 'session', '.', 'msg_id', 'self', '.', 'session', '.', 'send', '(', 'A', ',', 'msg', ',', 'ident', '=', "b'foo'", ',', 'buffers', '=', '[', "b'bar'", ']', ')', 'ident', ',', 'new_msg', '=', 'self', '.', 'session', '.', 'recv', '(', 'B', ')', 'self', '.', 'assertEqual', '(', 'ident', '[', '0', ']', ',', "b'foo'", ')', 'self', '.', 'assertEqual', '(', 'new_msg', '[', "'msg_id'", ']', ',', 'header', '[', "'msg_id'", ']', ')', 'self', '.', 'assertEqual', '(', 'new_msg', '[', "'msg_type'", ']', ',', 'msg', '[', "'msg_type'", ']', ')', 'self', '.', 'assertEqual', '(', 'new_msg', '[', "'header'", ']', ',', 'msg', '[', "'header'", ']', ')', 'self', '.', 'assertEqual', '(', 'new_msg', '[', "'content'", ']', ',', 'msg', '[', "'content'", ']', ')', 'self', '.', 'assertEqual', '(', 'new_msg', '[', "'metadata'", ']', ',', 'msg', '[', "'metadata'", ']', ')', 'self', '.', 'assertEqual', '(', 'new_msg', '[', "'parent_header'", ']', ',', 'msg', '[', "'parent_header'", ']', ')', 'self', '.', 'assertEqual', '(', 'new_msg', '[', "'buffers'", ']', ',', '[', "b'bar'", ']', ')', 'A', '.', 'close', '(', ')', 'B', '.', 'close', '(', ')', 'ctx', '.', 'term', '(', ')', '6DEDENT', 'def', 'test_args', '(', 'self', ')', ':', '5INDENT', '"""initialization arguments for Session"""', 's', '=', 'self', '.', 'session', 'self', '.', 'assertTrue', '(', 's', '.', 'pack', 'is', 'ss', '.', 'default_packer', ')', 'self', '.', 'assertTrue', '(', 's', '.', 'unpack', 'is', 'ss', '.', 'default_unpacker', ')', 'self', '.', 'assertEqual', '(', 's', '.', 'username', ',', 'os', '.', 'environ', '.', 'get', '(', "'USER'", ',', "u'username'", ')', ')', 's', '=', 'ss', '.', 'Session', '(', ')', 'self', '.', 'assertEqual', '(', 's', '.', 'username', ',', 'os', '.', 'environ', '.', 'get', '(', "'USER'", ',', "u'username'", ')', ')', 'self', '.', 'assertRaises', '(', 'TypeError', ',', 'ss', '.', 'Session', ',', 'pack', '=', "'hi'", ')', 'self', '.', 'assertRaises', '(', 'TypeError', ',', 'ss', '.', 'Session', ',', 'unpack', '=', "'hi'", ')', 'u', '=', 'str', '(', 'uuid', '.', 'uuid4', '(', ')', ')', 's', '=', 'ss', '.', 'Session', '(', 'username', '=', "u'carrot'", ',', 'session', '=', 'u', ')', 'self', '.', 'assertEqual', '(', 's', '.', 'session', ',', 'u', ')', 'self', '.', 'assertEqual', '(', 's', '.', 'username', ',', "u'carrot'", ')', '6DEDENT', 'def', 'test_tracking', '(', 'self', ')', ':', '5INDENT', '"""test tracking messages"""', 'a', ',', 'b', '=', 'self', '.', 'create_bound_pair', '(', 'zmq', '.', 'PAIR', ',', 'zmq', '.', 'PAIR', ')', 's', '=', 'self', '.', 'session', 's', '.', 'copy_threshold', '=', '1', 'stream', '=', 'ZMQStream', '(', 'a', ')', 'msg', '=', 's', '.', 'send', '(', 'a', ',', "'hello'", ',', 'track', '=', 'False', ')', 'self', '.', 'assertTrue', '(', 'msg', '[', "'tracker'", ']', 'is', 'ss', '.', 'DONE', ')', 'msg', '=', 's', '.', 'send', '(', 'a', ',', "'hello'", ',', 'track', '=', 'True', ')', 'self', '.', 'assertTrue', '(', 'isinstance', '(', 'msg', '[', "'tracker'", ']', ',', 'zmq', '.', 'MessageTracker', ')', ')', 'M', '=', 'zmq', '.', 'Message', '(', "b'hi there'", ',', 'track', '=', 'True', ')', 'msg', '=', 's', '.', 'send', '(', 'a', ',', "'hello'", ',', 'buffers', '=', '[', 'M', ']', ',', 'track', '=', 'True', ')', 't', '=', 'msg', '[', "'tracker'", ']', 'self', '.', 'assertTrue', '(', 'isinstance', '(', 't', ',', 'zmq', '.', 'MessageTracker', ')', ')', 'self', '.', 'assertRaises', '(', 'zmq', '.', 'NotDone', ',', 't', '.', 'wait', ',', '.1', ')', 'del', 'M', 't', '.', 'wait', '(', '1', ')', '6DEDENT', 'def', 'test_unique_msg_ids', '(', 'self', ')', ':', '5INDENT', '"""test that messages receive unique ids"""', 'ids', '=', 'set', '(', ')', 'for', 'i', 'in', 'range', '(', '2', '**', '12', ')', ':', '5INDENT', 'h', '=', 'self', '.', 'session', '.', 'msg_header', '(', "'test'", ')', 'msg_id', '=', 'h', '[', "'msg_id'", ']', 'self', '.', 'assertTrue', '(', 'msg_id', 'not', 'in', 'ids', ')', 'ids', '.', 'add', '(', 'msg_id', ')', '6DEDENT', '6DEDENT', 'def', 'test_feed_identities', '(', 'self', ')', ':', '5INDENT', '"""scrub the front for zmq IDENTITIES"""', 'theids', '=', '"engine client other"', '.', 'split', '(', ')', 'content', '=', 'dict', '(', 'code', '=', "'whoda'", ',', 'stuff', '=', 'object', '(', ')', ')', 'themsg', '=', 'self', '.', 'session', '.', 'msg', '(', "'execute'", ',', 'content', '=', 'content', ')', 'pmsg', '=', 'theids', '6DEDENT', 'def', 'test_session_id', '(', 'self', ')', ':', '5INDENT', 'session', '=', 'ss', '.', 'Session', '(', ')', 'bs', '=', 'session', '.', 'bsession', 'us', '=', 'session', '.', 'session', 'self', '.', 'assertEqual', '(', 'us', '.', 'encode', '(', "'ascii'", ')', ',', 'bs', ')', 'session', '=', 'ss', '.', 'Session', '(', ')', 'us', '=', 'session', '.', 'session', 'bs', '=', 'session', '.', 'bsession', 'self', '.', 'assertEqual', '(', 'us', '.', 'encode', '(', "'ascii'", ')', ',', 'bs', ')', 'session', '.', 'session', '=', "'something else'", 'bs', '=', 'session', '.', 'bsession', 'us', '=', 'session', '.', 'session', 'self', '.', 'assertEqual', '(', 'us', '.', 'encode', '(', "'ascii'", ')', ',', 'bs', ')', 'session', '=', 'ss', '.', 'Session', '(', 'session', '=', "'stuff'", ')', 'self', '.', 'assertEqual', '(', 'session', '.', 'bsession', ',', 'session', '.', 'session', '.', 'encode', '(', "'ascii'", ')', ')', 'self', '.', 'assertEqual', '(', "b'stuff'", ',', 'session', '.', 'bsession', ')', '6DEDENT', 'def', 'test_zero_digest_history', '(', 'self', ')', ':', '5INDENT', 'session', '=', 'ss', '.', 'Session', '(', 'digest_history_size', '=', '0', ')', 'for', 'i', 'in', 'range', '(', '11', ')', ':', '5INDENT', 'session', '.', '_add_digest', '(', 'uuid', '.', 'uuid4', '(', ')', '.', 'bytes', ')', '6DEDENT', 'self', '.', 'assertEqual', '(', 'len', '(', 'session', '.', 'digest_history', ')', ',', '0', ')', '6DEDENT', 'def', 'test_cull_digest_history', '(', 'self', ')', ':', '5INDENT', 'session', '=', 'ss', '.', 'Session', '(', 'digest_history_size', '=', '100', ')', 'for', 'i', 'in', 'range', '(', '100', ')', ':', '5INDENT', 'session', '.', '_add_digest', '(', 'uuid', '.', 'uuid4', '(', ')', '.', 'bytes', ')', '6DEDENT', 'self', '.', 'assertTrue', '(', 'len', '(', 'session', '.', 'digest_history', ')', '==', '100', ')', 'session', '.', '_add_digest', '(', 'uuid', '.', 'uuid4', '(', ')', '.', 'bytes', ')', 'self', '.', 'assertTrue', '(', 'len', '(', 'session', '.', 'digest_history', ')', '==', '91', ')', 'for', 'i', 'in', 'range', '(', '9', ')', ':', '5INDENT', 'session', '.', '_add_digest', '(', 'uuid', '.', 'uuid4', '(', ')', '.', 'bytes', ')', '6DEDENT', 'self', '.', 'assertTrue', '(', 'len', '(', 'session', '.', 'digest_history', ')', '==', '100', ')', 'session', '.', '_add_digest', '(', 'uuid', '.', 'uuid4', '(', ')', '.', 'bytes', ')', 'self', '.', 'assertTrue', '(', 'len', '(', 'session', '.', 'digest_history', ')', '==', '91', ')', '6DEDENT', 'def', 'test_bad_pack', '(', 'self', ')', ':', '5INDENT', 'try', ':', '5INDENT', 'session', '=', 'ss', '.', 'Session', '(', 'pack', '=', '_bad_packer', ')', '6DEDENT', 'except', 'ValueError', 'as', 'e', ':', '5INDENT', 'self', '.', 'assertIn', '(', '"could not serialize"', ',', 'str', '(', 'e', ')', ')', 'self', '.', 'assertIn', '(', '"don\'t work"', ',', 'str', '(', 'e', ')', ')', '6DEDENT', 'else', ':', '5INDENT', 'self', '.', 'fail', '(', '"Should have raised ValueError"', ')', '6DEDENT', '6DEDENT', 'def', 'test_bad_unpack', '(', 'self', ')', ':', '5INDENT', 'try', ':', '5INDENT', 'session', '=', 'ss', '.', 'Session', '(', 'unpack', '=', '_bad_unpacker', ')', '6DEDENT', 'except', 'ValueError', 'as', 'e', ':', '5INDENT', 'self', '.', 'assertIn', '(', '"could not handle output"', ',', 'str', '(', 'e', ')', ')', 'self', '.', 'assertIn', '(', '"don\'t work either"', ',', 'str', '(', 'e', ')', ')', '6DEDENT', 'else', ':', '5INDENT', 'self', '.', 'fail', '(', '"Should have raised ValueError"', ')', '6DEDENT', '6DEDENT', 'def', 'test_bad_packer', '(', 'self', ')', ':', '5INDENT', 'try', ':', '5INDENT', 'session', '=', 'ss', '.', 'Session', '(', 'packer', '=', '__name__', '+', "'._bad_packer'", ')', '6DEDENT', 'except', 'ValueError', 'as', 'e', ':', '5INDENT', 'self', '.', 'assertIn', '(', '"could not serialize"', ',', 'str', '(', 'e', ')', ')', 'self', '.', 'assertIn', '(', '"don\'t work"', ',', 'str', '(', 'e', ')', ')', '6DEDENT', 'else', ':', '5INDENT', 'self', '.', 'fail', '(', '"Should have raised ValueError"', ')', '6DEDENT', '6DEDENT', 'def', 'test_bad_unpacker', '(', 'self', ')', ':', '5INDENT', 'try', ':', '5INDENT', 'session', '=', 'ss', '.', 'Session', '(', 'unpacker', '=', '__name__', '+', "'._bad_unpacker'", ')', '6DEDENT', 'except', 'ValueError', 'as', 'e', ':', '5INDENT', 'self', '.', 'assertIn', '(', '"could not handle output"', ',', 'str', '(', 'e', ')', ')', 'self', '.', 'assertIn', '(', '"don\'t work either"', ',', 'str', '(', 'e', ')', ')', '6DEDENT', 'else', ':', '5INDENT', 'self', '.', 'fail', '(', '"Should have raised ValueError"', ')', '6DEDENT', '6DEDENT', 'def', 'test_bad_roundtrip', '(', 'self', ')', ':', '5INDENT', 'with', 'self', '.', 'assertRaises', '(', 'ValueError', ')', ':', '5INDENT', 'session', '=', 'ss', '.', 'Session', '(', 'unpack', '=', 'lambda', 'b', ':', '5', ')', '6DEDENT', '6DEDENT', 'def', '_datetime_test', '(', 'self', ',', 'session', ')', ':', '5INDENT', 'content', '=', 'dict', '(', 't', '=', 'datetime', '.', 'now', '(', ')', ')', 'metadata', '=', 'dict', '(', 't', '=', 'datetime', '.', 'now', '(', ')', ')', 'p', '=', 'session', '.', 'msg', '(', "'msg'", ')', 'msg', '=', 'session', '.', 'msg', '(', "'msg'", ',', 'content', '=', 'content', ',', 'metadata', '=', 'metadata', ',', 'parent', '=', 'p', '[', "'header'", ']', ')', 'smsg', '=', 'session', '.', 'serialize', '(', 'msg', ')', 'msg2', '=', 'session', '.', 'deserialize', '(', 'session', '.', 'feed_identities', '(', 'smsg', ')', '[', '1', ']', ')', 'assert', 'isinstance', '(', 'msg2', '[', "'header'", ']', '[', "'date'", ']', ',', 'datetime', ')', 'self', '.', 'assertEqual', '(', 'msg', '[', "'header'", ']', ',', 'msg2', '[', "'header'", ']', ')', 'self', '.', 'assertEqual', '(', 'msg', '[', "'parent_header'", ']', ',', 'msg2', '[', "'parent_header'", ']', ')', 'self', '.', 'assertEqual', '(', 'msg', '[', "'parent_header'", ']', ',', 'msg2', '[', "'parent_header'", ']', ')', 'assert', 'isinstance', '(', 'msg', '[', "'content'", ']', '[', "'t'", ']', ',', 'datetime', ')', 'assert', 'isinstance', '(', 'msg', '[', "'metadata'", ']', '[', "'t'", ']', ',', 'datetime', ')', 'assert', 'isinstance', '(', 'msg2', '[', "'content'", ']', '[', "'t'", ']', ',', 'string_types', ')', 'assert', 'isinstance', '(', 'msg2', '[', "'metadata'", ']', '[', "'t'", ']', ',', 'string_types', ')', 'self', '.', 'assertEqual', '(', 'msg', '[', "'content'", ']', ',', 'jsonutil', '.', 'extract_dates', '(', 'msg2', '[', "'content'", ']', ')', ')', 'self', '.', 'assertEqual', '(', 'msg', '[', "'content'", ']', ',', 'jsonutil', '.', 'extract_dates', '(', 'msg2', '[', "'content'", ']', ')', ')', '6DEDENT', 'def', 'test_datetimes', '(', 'self', ')', ':', '5INDENT', 'self', '.', '_datetime_test', '(', 'self', '.', 'session', ')', '6DEDENT', 'def', 'test_datetimes_pickle', '(', 'self', ')', ':', '5INDENT', 'session', '=', 'ss', '.', 'Session', '(', 'packer', '=', "'pickle'", ')', 'self', '.', '_datetime_test', '(', 'session', ')', '6DEDENT', '@', 'skipif', '(', 'module_not_available', '(', "'msgpack'", ')', ')', 'def', 'test_datetimes_msgpack', '(', 'self', ')', ':', '5INDENT', 'import', 'msgpack', 'session', '=', 'ss', '.', 'Session', '(', 'pack', '=', 'msgpack', '.', 'packb', ',', 'unpack', '=', 'lambda', 'buf', ':', 'msgpack', '.', 'unpackb', '(', 'buf', ',', 'encoding', '=', "'utf8'", ')', ',', ')', 'self', '.', '_datetime_test', '(', 'session', ')', '6DEDENT', 'def', 'test_send_raw', '(', 'self', ')', ':', '5INDENT', 'ctx', '=', 'zmq', '.', 'Context', '.', 'instance', '(', ')', 'A', '=', 'ctx', '.', 'socket', '(', 'zmq', '.', 'PAIR', ')', 'B', '=', 'ctx', '.', 'socket', '(', 'zmq', '.', 'PAIR', ')', 'A', '.', 'bind', '(', '"inproc://test"', ')', 'B', '.', 'connect', '(', '"inproc://test"', ')', 'msg', '=', 'self', '.', 'session', '.', 'msg', '(', "'execute'", ',', 'content', '=', 'dict', '(', 'a', '=', '10', ')', ')', 'msg_list', '=', '[', 'self', '.', 'session', '.', 'pack', '(', 'msg', '[', 'part', ']', ')', 'for', 'part', 'in', '[', "'header'", ',', "'parent_header'", ',', "'metadata'", ',', "'content'", ']', ']', 'self', '.', 'session', '.', 'send_raw', '(', 'A', ',', 'msg_list', ',', 'ident', '=', "b'foo'", ')', 'ident', ',', 'new_msg_list', '=', 'self', '.', 'session', '.', 'feed_identities', '(', 'B', '.', 'recv_multipart', '(', ')', ')', 'new_msg', '=', 'self', '.', 'session', '.', 'deserialize', '(', 'new_msg_list', ')', 'self', '.', 'assertEqual', '(', 'ident', '[', '0', ']', ',', "b'foo'", ')', 'self', '.', 'assertEqual', '(', 'new_msg', '[', "'msg_type'", ']', ',', 'msg', '[', "'msg_type'", ']', ')', 'self', '.', 'assertEqual', '(', 'new_msg', '[', "'header'", ']', ',', 'msg', '[', "'header'", ']', ')', 'self', '.', 'assertEqual', '(', 'new_msg', '[', "'parent_header'", ']', ',', 'msg', '[', "'parent_header'", ']', ')', 'self', '.', 'assertEqual', '(', 'new_msg', '[', "'content'", ']', ',', 'msg', '[', "'content'", ']', ')', 'self', '.', 'assertEqual', '(', 'new_msg', '[', "'metadata'", ']', ',', 'msg', '[', "'metadata'", ']', ')', 'A', '.', 'close', '(', ')', 'B', '.', 'close', '(', ')', 'ctx', '.', 'term', '(', ')', '6DEDENT', '6DEDENT'], 'nodes': ['/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/jupyter/jupyter_client/jupyter_client/tests/test_session.py', '_bad_packer', '_bad_unpacker', 'SessionTestCase', 'TestSession'], 'edges': [[1, 0], [2, 0], [3, 0], [4, 0], [3, 4]], 'crossEdges': [[1, 54], [2, 67], [3, 80], [4, 111]]}
{'path': 'data/jupyter/nbviewer/nbviewer/providers/url/handlers.py', 'tokens': ['try', ':', '5INDENT', 'from', 'urllib', '.', 'parse', 'import', 'urlparse', 'from', 'urllib', 'import', 'robotparser', '6DEDENT', 'except', 'ImportError', ':', '5INDENT', 'from', 'urlparse', 'import', 'urlparse', 'import', 'robotparser', '6DEDENT', 'from', 'tornado', 'import', '(', 'gen', ',', 'httpclient', ',', 'web', ',', ')', 'from', 'tornado', '.', 'log', 'import', 'app_log', 'from', 'tornado', '.', 'escape', 'import', 'url_unescape', 'from', '...', 'utils', 'import', '(', 'quote', ',', 'response_text', ',', ')', 'from', '.', '.', 'base', 'import', '(', 'cached', ',', 'RenderingHandler', ',', ')', 'class', 'URLHandler', '(', 'RenderingHandler', ')', ':', '5INDENT', '"""Renderer for /url or /urls"""', '@', 'cached', '@', 'gen', '.', 'coroutine', 'def', 'get', '(', 'self', ',', 'secure', ',', 'netloc', ',', 'url', ')', ':', '5INDENT', 'proto', '=', "'http'", '+', 'secure', 'netloc', '=', 'url_unescape', '(', 'netloc', ')', 'if', "'/?'", 'in', 'url', ':', '5INDENT', 'url', ',', 'query', '=', 'url', '.', 'rsplit', '(', "'/?'", ',', '1', ')', '6DEDENT', 'else', ':', '5INDENT', 'query', '=', 'None', '6DEDENT', 'remote_url', '=', 'u"{}://{}/{}"', '.', 'format', '(', 'proto', ',', 'netloc', ',', 'quote', '(', 'url', ')', ')', 'if', 'query', ':', '5INDENT', 'remote_url', '=', 'remote_url', '+', "'?'", '+', 'query', '6DEDENT', 'if', 'not', 'url', '.', 'endswith', '(', "'.ipynb'", ')', ':', '5INDENT', 'refer_url', '=', 'self', '.', 'request', '.', 'headers', '.', 'get', '(', "'Referer'", ',', "''", ')', '.', 'split', '(', "'://'", ')', '[', '-', '1', ']', 'if', 'refer_url', '.', 'startswith', '(', 'self', '.', 'request', '.', 'host', '+', "'/url'", ')', ':', '5INDENT', 'self', '.', 'redirect', '(', 'remote_url', ')', 'return', '6DEDENT', '6DEDENT', 'parse_result', '=', 'urlparse', '(', 'remote_url', ')', 'robots_url', '=', 'parse_result', '.', 'scheme', '+', '"://"', '+', 'parse_result', '.', 'netloc', '+', '"/robots.txt"', 'public', '=', 'False', 'try', ':', '5INDENT', 'robots_response', '=', 'yield', 'self', '.', 'fetch', '(', 'robots_url', ')', 'robotstxt', '=', 'response_text', '(', 'robots_response', ')', 'rfp', '=', 'robotparser', '.', 'RobotFileParser', '(', ')', 'rfp', '.', 'set_url', '(', 'robots_url', ')', 'rfp', '.', 'parse', '(', 'robotstxt', '.', 'splitlines', '(', ')', ')', 'public', '=', 'rfp', '.', 'can_fetch', '(', "'*'", ',', 'remote_url', ')', '6DEDENT', 'except', 'httpclient', '.', 'HTTPError', 'as', 'e', ':', '5INDENT', 'app_log', '.', 'debug', '(', '"Robots.txt not available for {}"', '.', 'format', '(', 'remote_url', ')', ',', 'exc_info', '=', 'True', ')', 'public', '=', 'True', '6DEDENT', 'except', 'Exception', 'as', 'e', ':', '5INDENT', 'app_log', '.', 'error', '(', 'e', ')', '6DEDENT', 'response', '=', 'yield', 'self', '.', 'fetch', '(', 'remote_url', ')', 'try', ':', '5INDENT', 'nbjson', '=', 'response_text', '(', 'response', ',', 'encoding', '=', "'utf-8'", ')', '6DEDENT', 'except', 'UnicodeDecodeError', ':', '5INDENT', 'app_log', '.', 'error', '(', '"Notebook is not utf8: %s"', ',', 'remote_url', ',', 'exc_info', '=', 'True', ')', 'raise', 'web', '.', 'HTTPError', '(', '400', ')', '6DEDENT', 'yield', 'self', '.', 'finish_notebook', '(', 'nbjson', ',', 'download_url', '=', 'remote_url', ',', 'msg', '=', '"file from url: %s"', '%', 'remote_url', ',', 'public', '=', 'public', ',', 'request', '=', 'self', '.', 'request', ',', 'format', '=', 'self', '.', 'format', ')', '6DEDENT', '6DEDENT', 'def', 'default_handlers', '(', 'handlers', '=', '[', ']', ')', ':', '5INDENT', '"""Tornado handlers"""', 'return', 'handlers', '+', '[', '(', "r'/url([s]?)/([^/]+)/(.*)'", ',', 'URLHandler', ')', ',', ']', '6DEDENT', 'def', 'uri_rewrites', '(', 'rewrites', '=', '[', ']', ')', ':', '5INDENT', 'return', 'rewrites', '+', '[', '(', "'^http(s?)://(.*)$'", ',', "u'/url{0}/{1}'", ')', ',', '(', "'^(.*)$'", ',', "u'/url/{0}'", ')', ',', ']', '6DEDENT'], 'nodes': ['/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/jupyter/nbviewer/nbviewer/providers/url/handlers.py', 'URLHandler', 'default_handlers', 'uri_rewrites', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/jupyter/nbviewer/nbviewer/providers/dropbox/handlers.py', 'uri_rewrites', 'dropbox', '/home/h10/demos/CodeFeatureExtraction/data/py150_files/data/jupyter/nbviewer/nbviewer/providers/dropbox/__init__.py'], 'edges': [[1, 0], [2, 0], [3, 0], [4, 6], [5, 4], [7, 6], [1, 2], [3, 7]], 'crossEdges': [[1, 70], [2, 414], [3, 437]]}
